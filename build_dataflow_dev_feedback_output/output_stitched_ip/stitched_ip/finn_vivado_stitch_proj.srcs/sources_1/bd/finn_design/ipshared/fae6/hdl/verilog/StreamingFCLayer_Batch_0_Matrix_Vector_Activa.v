// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_0_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weight_V_V_TDATA,
        weight_V_V_TVALID,
        weight_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [7:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
input  [7:0] weight_V_V_TDATA;
input   weight_V_V_TVALID;
output   weight_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weight_V_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] threshs_m_thresholds_27_address0;
reg    threshs_m_thresholds_27_ce0;
wire   [15:0] threshs_m_thresholds_27_q0;
wire   [4:0] threshs_m_thresholds_26_address0;
reg    threshs_m_thresholds_26_ce0;
wire   [15:0] threshs_m_thresholds_26_q0;
wire   [4:0] threshs_m_thresholds_21_address0;
reg    threshs_m_thresholds_21_ce0;
wire   [15:0] threshs_m_thresholds_21_q0;
wire   [4:0] threshs_m_thresholds_20_address0;
reg    threshs_m_thresholds_20_ce0;
wire   [15:0] threshs_m_thresholds_20_q0;
wire   [4:0] threshs_m_thresholds_19_address0;
reg    threshs_m_thresholds_19_ce0;
wire   [15:0] threshs_m_thresholds_19_q0;
wire   [4:0] threshs_m_thresholds_18_address0;
reg    threshs_m_thresholds_18_ce0;
wire   [15:0] threshs_m_thresholds_18_q0;
wire   [4:0] threshs_m_thresholds_17_address0;
reg    threshs_m_thresholds_17_ce0;
wire   [15:0] threshs_m_thresholds_17_q0;
wire   [4:0] threshs_m_thresholds_16_address0;
reg    threshs_m_thresholds_16_ce0;
wire   [15:0] threshs_m_thresholds_16_q0;
wire   [4:0] threshs_m_thresholds_15_address0;
reg    threshs_m_thresholds_15_ce0;
wire   [15:0] threshs_m_thresholds_15_q0;
wire   [4:0] threshs_m_thresholds_14_address0;
reg    threshs_m_thresholds_14_ce0;
wire   [15:0] threshs_m_thresholds_14_q0;
wire   [4:0] threshs_m_thresholds_25_address0;
reg    threshs_m_thresholds_25_ce0;
wire   [15:0] threshs_m_thresholds_25_q0;
wire   [4:0] threshs_m_thresholds_24_address0;
reg    threshs_m_thresholds_24_ce0;
wire   [15:0] threshs_m_thresholds_24_q0;
wire   [4:0] threshs_m_thresholds_23_address0;
reg    threshs_m_thresholds_23_ce0;
wire   [15:0] threshs_m_thresholds_23_q0;
wire   [4:0] threshs_m_thresholds_22_address0;
reg    threshs_m_thresholds_22_ce0;
wire   [15:0] threshs_m_thresholds_22_q0;
wire   [4:0] threshs_m_thresholds_13_address0;
reg    threshs_m_thresholds_13_ce0;
wire   [15:0] threshs_m_thresholds_13_q0;
wire   [4:0] threshs_m_thresholds_12_address0;
reg    threshs_m_thresholds_12_ce0;
wire   [15:0] threshs_m_thresholds_12_q0;
wire   [4:0] threshs_m_thresholds_7_address0;
reg    threshs_m_thresholds_7_ce0;
wire   [15:0] threshs_m_thresholds_7_q0;
wire   [4:0] threshs_m_thresholds_6_address0;
reg    threshs_m_thresholds_6_ce0;
wire   [15:0] threshs_m_thresholds_6_q0;
wire   [4:0] threshs_m_thresholds_5_address0;
reg    threshs_m_thresholds_5_ce0;
wire   [15:0] threshs_m_thresholds_5_q0;
wire   [4:0] threshs_m_thresholds_4_address0;
reg    threshs_m_thresholds_4_ce0;
wire   [15:0] threshs_m_thresholds_4_q0;
wire   [4:0] threshs_m_thresholds_3_address0;
reg    threshs_m_thresholds_3_ce0;
wire   [15:0] threshs_m_thresholds_3_q0;
wire   [4:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [15:0] threshs_m_thresholds_2_q0;
wire   [4:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [15:0] threshs_m_thresholds_1_q0;
wire   [4:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [15:0] threshs_m_thresholds_q0;
wire   [4:0] threshs_m_thresholds_11_address0;
reg    threshs_m_thresholds_11_ce0;
wire   [15:0] threshs_m_thresholds_11_q0;
wire   [4:0] threshs_m_thresholds_10_address0;
reg    threshs_m_thresholds_10_ce0;
wire   [15:0] threshs_m_thresholds_10_q0;
wire   [4:0] threshs_m_thresholds_9_address0;
reg    threshs_m_thresholds_9_ce0;
wire   [15:0] threshs_m_thresholds_9_q0;
wire   [4:0] threshs_m_thresholds_8_address0;
reg    threshs_m_thresholds_8_ce0;
wire   [15:0] threshs_m_thresholds_8_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_769_p2;
wire   [0:0] icmp_ln252_fu_784_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln289_reg_2167;
reg   [0:0] icmp_ln289_reg_2167_pp0_iter2_reg;
reg    weight_V_V_TDATA_blk_n;
reg   [19:0] i_0_reg_687;
reg    ap_predicate_op85_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [19:0] i_fu_775_p2;
wire   [7:0] inElem_V_1_fu_878_p29;
wire   [4:0] trunc_ln321_fu_938_p1;
wire   [3:0] trunc_ln647_fu_1080_p1;
reg  signed [3:0] trunc_ln647_reg_2151;
reg  signed [3:0] w_m_weights_1_V_reg_2156;
wire   [0:0] icmp_ln271_fu_1094_p2;
reg   [0:0] icmp_ln271_reg_2161;
reg   [0:0] icmp_ln271_reg_2161_pp0_iter1_reg;
wire   [0:0] icmp_ln289_fu_1106_p2;
reg   [0:0] icmp_ln289_reg_2167_pp0_iter1_reg;
wire  signed [11:0] mul_ln1352_fu_1124_p2;
reg  signed [11:0] mul_ln1352_reg_2171;
wire  signed [11:0] mul_ln1352_1_fu_1133_p2;
reg  signed [11:0] mul_ln1352_1_reg_2176;
wire   [0:0] icmp_ln899_fu_1247_p2;
reg   [0:0] icmp_ln899_reg_2321;
wire   [0:0] icmp_ln899_1_fu_1253_p2;
reg   [0:0] icmp_ln899_1_reg_2326;
wire   [0:0] icmp_ln899_2_fu_1259_p2;
reg   [0:0] icmp_ln899_2_reg_2331;
wire   [0:0] icmp_ln899_3_fu_1265_p2;
reg   [0:0] icmp_ln899_3_reg_2336;
wire   [0:0] icmp_ln899_4_fu_1271_p2;
reg   [0:0] icmp_ln899_4_reg_2341;
wire   [0:0] icmp_ln899_5_fu_1277_p2;
reg   [0:0] icmp_ln899_5_reg_2346;
wire   [0:0] icmp_ln899_6_fu_1283_p2;
reg   [0:0] icmp_ln899_6_reg_2351;
wire   [0:0] icmp_ln899_10_fu_1337_p2;
reg   [0:0] icmp_ln899_10_reg_2356;
wire   [0:0] icmp_ln899_11_fu_1343_p2;
reg   [0:0] icmp_ln899_11_reg_2361;
wire   [0:0] icmp_ln899_12_fu_1349_p2;
reg   [0:0] icmp_ln899_12_reg_2366;
wire   [0:0] icmp_ln899_13_fu_1355_p2;
reg   [0:0] icmp_ln899_13_reg_2371;
wire   [1:0] add_ln700_7_fu_1367_p2;
reg   [1:0] add_ln700_7_reg_2376;
wire   [0:0] icmp_ln899_14_fu_1373_p2;
reg   [0:0] icmp_ln899_14_reg_2381;
wire   [0:0] icmp_ln899_15_fu_1379_p2;
reg   [0:0] icmp_ln899_15_reg_2386;
wire   [0:0] icmp_ln899_16_fu_1385_p2;
reg   [0:0] icmp_ln899_16_reg_2391;
wire   [0:0] icmp_ln899_17_fu_1391_p2;
reg   [0:0] icmp_ln899_17_reg_2396;
wire   [0:0] icmp_ln899_18_fu_1397_p2;
reg   [0:0] icmp_ln899_18_reg_2401;
wire   [0:0] icmp_ln899_19_fu_1403_p2;
reg   [0:0] icmp_ln899_19_reg_2406;
wire   [0:0] icmp_ln899_20_fu_1409_p2;
reg   [0:0] icmp_ln899_20_reg_2411;
wire   [0:0] icmp_ln899_24_fu_1463_p2;
reg   [0:0] icmp_ln899_24_reg_2416;
wire   [0:0] icmp_ln899_25_fu_1469_p2;
reg   [0:0] icmp_ln899_25_reg_2421;
wire   [0:0] icmp_ln899_26_fu_1475_p2;
reg   [0:0] icmp_ln899_26_reg_2426;
wire   [0:0] icmp_ln899_27_fu_1481_p2;
reg   [0:0] icmp_ln899_27_reg_2431;
wire   [1:0] add_ln700_20_fu_1493_p2;
reg   [1:0] add_ln700_20_reg_2436;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire   [7:0] ap_phi_reg_pp0_iter0_p_Val2_s_reg_698;
reg   [7:0] ap_phi_reg_pp0_iter1_p_Val2_s_reg_698;
wire   [63:0] zext_ln186_fu_1142_p1;
reg   [15:0] accu_V_0_0_0_fu_180;
wire   [15:0] accu_0_0_V_fu_1222_p2;
reg   [15:0] accu_V_0_1_0_fu_184;
wire   [15:0] accu_0_1_V_fu_1231_p2;
reg   [31:0] sf_1_fu_188;
wire   [31:0] sf_fu_1100_p2;
reg   [7:0] tmp_V_fu_192;
reg   [7:0] tmp_V_1_fu_196;
reg   [7:0] tmp_V_2_fu_200;
reg   [7:0] tmp_V_4_fu_204;
reg   [7:0] tmp_V_5_fu_208;
reg   [7:0] tmp_V_6_fu_212;
reg   [7:0] tmp_V_7_fu_216;
reg   [7:0] tmp_V_8_fu_220;
reg   [7:0] tmp_V_9_fu_224;
reg   [7:0] tmp_V_10_fu_228;
reg   [7:0] tmp_V_11_fu_232;
reg   [7:0] tmp_V_12_fu_236;
reg   [7:0] tmp_V_13_fu_240;
reg   [7:0] tmp_V_14_fu_244;
reg   [7:0] tmp_V_15_fu_248;
reg   [7:0] tmp_V_16_fu_252;
reg   [7:0] tmp_V_17_fu_256;
reg   [7:0] tmp_V_18_fu_260;
reg   [7:0] tmp_V_19_fu_264;
reg   [7:0] tmp_V_20_fu_268;
reg   [7:0] tmp_V_21_fu_272;
reg   [7:0] tmp_V_22_fu_276;
reg   [7:0] tmp_V_23_fu_280;
reg   [7:0] tmp_V_24_fu_284;
reg   [7:0] tmp_V_25_fu_288;
reg   [7:0] tmp_V_26_fu_292;
reg   [7:0] tmp_V_27_fu_296;
reg   [31:0] nf_assign_fu_300;
wire   [31:0] select_ln301_fu_1186_p3;
reg   [31:0] ap_sig_allocacmp_nf_assign_load_1;
reg    ap_block_pp0_stage0_01001;
wire   [4:0] inElem_V_1_fu_878_p28;
wire  signed [7:0] mul_ln1352_fu_1124_p0;
wire  signed [11:0] sext_ln215_1_fu_1120_p1;
wire  signed [7:0] mul_ln1352_1_fu_1133_p0;
wire   [31:0] nf_fu_1174_p2;
wire   [0:0] icmp_ln301_fu_1180_p2;
wire  signed [15:0] sext_ln700_fu_1219_p1;
wire   [15:0] select_ln271_1_fu_1212_p3;
wire  signed [15:0] sext_ln700_1_fu_1228_p1;
wire   [15:0] select_ln271_fu_1205_p3;
wire   [0:0] icmp_ln899_7_fu_1289_p2;
wire   [0:0] xor_ln899_7_fu_1295_p2;
wire   [0:0] icmp_ln899_8_fu_1305_p2;
wire   [0:0] xor_ln899_8_fu_1311_p2;
wire   [0:0] icmp_ln899_9_fu_1321_p2;
wire   [0:0] xor_ln899_9_fu_1327_p2;
wire   [1:0] zext_ln186_8_fu_1317_p1;
wire   [1:0] zext_ln186_9_fu_1333_p1;
wire   [1:0] add_ln700_6_fu_1361_p2;
wire   [1:0] zext_ln186_7_fu_1301_p1;
wire   [0:0] icmp_ln899_21_fu_1415_p2;
wire   [0:0] xor_ln899_21_fu_1421_p2;
wire   [0:0] icmp_ln899_22_fu_1431_p2;
wire   [0:0] xor_ln899_22_fu_1437_p2;
wire   [0:0] icmp_ln899_23_fu_1447_p2;
wire   [0:0] xor_ln899_23_fu_1453_p2;
wire   [1:0] zext_ln186_20_fu_1443_p1;
wire   [1:0] zext_ln186_21_fu_1459_p1;
wire   [1:0] add_ln700_19_fu_1487_p2;
wire   [1:0] zext_ln186_19_fu_1427_p1;
wire   [0:0] xor_ln899_fu_1499_p2;
wire   [0:0] xor_ln899_1_fu_1512_p2;
wire   [0:0] xor_ln899_2_fu_1521_p2;
wire   [0:0] xor_ln899_3_fu_1530_p2;
wire   [0:0] xor_ln899_4_fu_1539_p2;
wire   [0:0] xor_ln899_5_fu_1548_p2;
wire   [0:0] xor_ln899_6_fu_1557_p2;
wire   [0:0] xor_ln899_10_fu_1566_p2;
wire   [0:0] xor_ln899_11_fu_1575_p2;
wire   [0:0] xor_ln899_12_fu_1584_p2;
wire   [0:0] xor_ln899_13_fu_1593_p2;
wire   [1:0] zext_ln186_1_fu_1517_p1;
wire   [1:0] zext_ln186_2_fu_1526_p1;
wire   [1:0] add_ln700_fu_1602_p2;
wire   [3:0] zext_ln700_1_fu_1608_p1;
wire   [3:0] select_ln700_fu_1504_p3;
wire   [1:0] zext_ln186_3_fu_1535_p1;
wire   [1:0] zext_ln186_4_fu_1544_p1;
wire   [1:0] add_ln700_2_fu_1618_p2;
wire   [1:0] zext_ln186_5_fu_1553_p1;
wire   [1:0] zext_ln186_6_fu_1562_p1;
wire   [1:0] add_ln700_3_fu_1628_p2;
wire   [2:0] zext_ln700_3_fu_1634_p1;
wire   [2:0] zext_ln700_2_fu_1624_p1;
wire   [2:0] add_ln700_4_fu_1638_p2;
wire   [3:0] zext_ln700_4_fu_1644_p1;
wire   [3:0] add_ln700_1_fu_1612_p2;
wire   [1:0] zext_ln186_10_fu_1571_p1;
wire   [1:0] zext_ln186_11_fu_1580_p1;
wire   [1:0] add_ln700_8_fu_1657_p2;
wire   [1:0] zext_ln186_12_fu_1589_p1;
wire   [1:0] zext_ln700_fu_1598_p1;
wire   [1:0] add_ln700_9_fu_1667_p2;
wire   [2:0] zext_ln700_7_fu_1673_p1;
wire   [2:0] zext_ln700_6_fu_1663_p1;
wire   [2:0] add_ln700_10_fu_1677_p2;
wire   [2:0] zext_ln700_5_fu_1654_p1;
wire   [2:0] add_ln700_11_fu_1683_p2;
wire   [3:0] zext_ln700_8_fu_1689_p1;
wire   [3:0] add_ln700_5_fu_1648_p2;
wire   [0:0] xor_ln899_14_fu_1699_p2;
wire   [0:0] xor_ln899_15_fu_1712_p2;
wire   [0:0] xor_ln899_16_fu_1721_p2;
wire   [0:0] xor_ln899_17_fu_1730_p2;
wire   [0:0] xor_ln899_18_fu_1739_p2;
wire   [0:0] xor_ln899_19_fu_1748_p2;
wire   [0:0] xor_ln899_20_fu_1757_p2;
wire   [0:0] xor_ln899_24_fu_1766_p2;
wire   [0:0] xor_ln899_25_fu_1775_p2;
wire   [0:0] xor_ln899_26_fu_1784_p2;
wire   [0:0] xor_ln899_27_fu_1793_p2;
wire   [1:0] zext_ln186_13_fu_1717_p1;
wire   [1:0] zext_ln186_14_fu_1726_p1;
wire   [1:0] add_ln700_13_fu_1802_p2;
wire   [3:0] zext_ln700_10_fu_1808_p1;
wire   [3:0] select_ln700_1_fu_1704_p3;
wire   [1:0] zext_ln186_15_fu_1735_p1;
wire   [1:0] zext_ln186_16_fu_1744_p1;
wire   [1:0] add_ln700_15_fu_1818_p2;
wire   [1:0] zext_ln186_17_fu_1753_p1;
wire   [1:0] zext_ln186_18_fu_1762_p1;
wire   [1:0] add_ln700_16_fu_1828_p2;
wire   [2:0] zext_ln700_12_fu_1834_p1;
wire   [2:0] zext_ln700_11_fu_1824_p1;
wire   [2:0] add_ln700_17_fu_1838_p2;
wire   [3:0] zext_ln700_13_fu_1844_p1;
wire   [3:0] add_ln700_14_fu_1812_p2;
wire   [1:0] zext_ln186_22_fu_1771_p1;
wire   [1:0] zext_ln186_23_fu_1780_p1;
wire   [1:0] add_ln700_21_fu_1857_p2;
wire   [1:0] zext_ln186_24_fu_1789_p1;
wire   [1:0] zext_ln700_9_fu_1798_p1;
wire   [1:0] add_ln700_22_fu_1867_p2;
wire   [2:0] zext_ln700_16_fu_1873_p1;
wire   [2:0] zext_ln700_15_fu_1863_p1;
wire   [2:0] add_ln700_23_fu_1877_p2;
wire   [2:0] zext_ln700_14_fu_1854_p1;
wire   [2:0] add_ln700_24_fu_1883_p2;
wire   [3:0] zext_ln700_17_fu_1889_p1;
wire   [3:0] add_ln700_18_fu_1848_p2;
wire   [3:0] add_ln700_25_fu_1893_p2;
wire   [3:0] add_ln700_12_fu_1693_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

StreamingFCLayer_Batch_0_Matrix_Vector_Actbkb #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_27_address0),
    .ce0(threshs_m_thresholds_27_ce0),
    .q0(threshs_m_thresholds_27_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actcud #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_26_address0),
    .ce0(threshs_m_thresholds_26_ce0),
    .q0(threshs_m_thresholds_26_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActdEe #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_21_address0),
    .ce0(threshs_m_thresholds_21_ce0),
    .q0(threshs_m_thresholds_21_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActeOg #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_20_address0),
    .ce0(threshs_m_thresholds_20_ce0),
    .q0(threshs_m_thresholds_20_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActfYi #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_19_address0),
    .ce0(threshs_m_thresholds_19_ce0),
    .q0(threshs_m_thresholds_19_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actg8j #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_18_address0),
    .ce0(threshs_m_thresholds_18_ce0),
    .q0(threshs_m_thresholds_18_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Acthbi #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_17_address0),
    .ce0(threshs_m_thresholds_17_ce0),
    .q0(threshs_m_thresholds_17_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actibs #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_16_address0),
    .ce0(threshs_m_thresholds_16_ce0),
    .q0(threshs_m_thresholds_16_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActjbC #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_15_address0),
    .ce0(threshs_m_thresholds_15_ce0),
    .q0(threshs_m_thresholds_15_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActkbM #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_14_address0),
    .ce0(threshs_m_thresholds_14_ce0),
    .q0(threshs_m_thresholds_14_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActlbW #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_25_address0),
    .ce0(threshs_m_thresholds_25_ce0),
    .q0(threshs_m_thresholds_25_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_24_address0),
    .ce0(threshs_m_thresholds_24_ce0),
    .q0(threshs_m_thresholds_24_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actncg #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_23_address0),
    .ce0(threshs_m_thresholds_23_ce0),
    .q0(threshs_m_thresholds_23_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actocq #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_22_address0),
    .ce0(threshs_m_thresholds_22_ce0),
    .q0(threshs_m_thresholds_22_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActpcA #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_13_address0),
    .ce0(threshs_m_thresholds_13_ce0),
    .q0(threshs_m_thresholds_13_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActqcK #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_12_address0),
    .ce0(threshs_m_thresholds_12_ce0),
    .q0(threshs_m_thresholds_12_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActrcU #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_7_address0),
    .ce0(threshs_m_thresholds_7_ce0),
    .q0(threshs_m_thresholds_7_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actsc4 #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_6_address0),
    .ce0(threshs_m_thresholds_6_ce0),
    .q0(threshs_m_thresholds_6_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Acttde #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_5_address0),
    .ce0(threshs_m_thresholds_5_ce0),
    .q0(threshs_m_thresholds_5_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actudo #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_4_address0),
    .ce0(threshs_m_thresholds_4_ce0),
    .q0(threshs_m_thresholds_4_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actvdy #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_3_address0),
    .ce0(threshs_m_thresholds_3_ce0),
    .q0(threshs_m_thresholds_3_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActwdI #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActxdS #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actyd2 #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_Actzec #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_11_address0),
    .ce0(threshs_m_thresholds_11_ce0),
    .q0(threshs_m_thresholds_11_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActAem #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_10_address0),
    .ce0(threshs_m_thresholds_10_ce0),
    .q0(threshs_m_thresholds_10_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActBew #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_9_address0),
    .ce0(threshs_m_thresholds_9_ce0),
    .q0(threshs_m_thresholds_9_q0)
);

StreamingFCLayer_Batch_0_Matrix_Vector_ActCeG #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
threshs_m_thresholds_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_8_address0),
    .ce0(threshs_m_thresholds_8_ce0),
    .q0(threshs_m_thresholds_8_q0)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
StreamingFCLayer_DeQ_U1(
    .din0(tmp_V_fu_192),
    .din1(tmp_V_1_fu_196),
    .din2(tmp_V_2_fu_200),
    .din3(tmp_V_4_fu_204),
    .din4(tmp_V_5_fu_208),
    .din5(tmp_V_6_fu_212),
    .din6(tmp_V_7_fu_216),
    .din7(tmp_V_8_fu_220),
    .din8(tmp_V_9_fu_224),
    .din9(tmp_V_10_fu_228),
    .din10(tmp_V_11_fu_232),
    .din11(tmp_V_12_fu_236),
    .din12(tmp_V_13_fu_240),
    .din13(tmp_V_14_fu_244),
    .din14(tmp_V_15_fu_248),
    .din15(tmp_V_16_fu_252),
    .din16(tmp_V_17_fu_256),
    .din17(tmp_V_18_fu_260),
    .din18(tmp_V_19_fu_264),
    .din19(tmp_V_20_fu_268),
    .din20(tmp_V_21_fu_272),
    .din21(tmp_V_22_fu_276),
    .din22(tmp_V_23_fu_280),
    .din23(tmp_V_24_fu_284),
    .din24(tmp_V_25_fu_288),
    .din25(tmp_V_26_fu_292),
    .din26(tmp_V_27_fu_296),
    .din27(inElem_V_1_fu_878_p28),
    .dout(inElem_V_1_fu_878_p29)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_Ee0_U2(
    .din0(mul_ln1352_fu_1124_p0),
    .din1(trunc_ln647_reg_2151),
    .dout(mul_ln1352_fu_1124_p2)
);

StreamingFCLayer_Batch_0_StreamingFCLayer_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_Ee0_U3(
    .din0(mul_ln1352_1_fu_1133_p0),
    .din1(w_m_weights_1_V_reg_2156),
    .dout(mul_ln1352_1_fu_1133_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd0) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_Val2_s_reg_698 <= inElem_V_1_fu_878_p29;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((((((trunc_ln321_fu_938_p1 == 5'd30) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0)) | ((trunc_ln321_fu_938_p1 == 5'd31) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd29) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd28) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd27) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd26) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0)))) | ((trunc_ln321_fu_938_p1 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln321_fu_938_p1 == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_reg_pp0_iter1_p_Val2_s_reg_698 <= in_V_V_TDATA;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_Val2_s_reg_698 <= ap_phi_reg_pp0_iter0_p_Val2_s_reg_698;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_687 <= i_fu_775_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_687 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_2167 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_300 <= select_ln301_fu_1186_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_300 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1106_p2 == 1'd0) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_1_fu_188 <= sf_fu_1100_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1106_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_188 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        accu_V_0_0_0_fu_180 <= accu_0_0_V_fu_1222_p2;
        accu_V_0_1_0_fu_184 <= accu_0_1_V_fu_1231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_2167_pp0_iter1_reg == 1'd1))) begin
        add_ln700_20_reg_2436 <= add_ln700_20_fu_1493_p2;
        add_ln700_7_reg_2376 <= add_ln700_7_fu_1367_p2;
        icmp_ln899_10_reg_2356 <= icmp_ln899_10_fu_1337_p2;
        icmp_ln899_11_reg_2361 <= icmp_ln899_11_fu_1343_p2;
        icmp_ln899_12_reg_2366 <= icmp_ln899_12_fu_1349_p2;
        icmp_ln899_13_reg_2371 <= icmp_ln899_13_fu_1355_p2;
        icmp_ln899_14_reg_2381 <= icmp_ln899_14_fu_1373_p2;
        icmp_ln899_15_reg_2386 <= icmp_ln899_15_fu_1379_p2;
        icmp_ln899_16_reg_2391 <= icmp_ln899_16_fu_1385_p2;
        icmp_ln899_17_reg_2396 <= icmp_ln899_17_fu_1391_p2;
        icmp_ln899_18_reg_2401 <= icmp_ln899_18_fu_1397_p2;
        icmp_ln899_19_reg_2406 <= icmp_ln899_19_fu_1403_p2;
        icmp_ln899_1_reg_2326 <= icmp_ln899_1_fu_1253_p2;
        icmp_ln899_20_reg_2411 <= icmp_ln899_20_fu_1409_p2;
        icmp_ln899_24_reg_2416 <= icmp_ln899_24_fu_1463_p2;
        icmp_ln899_25_reg_2421 <= icmp_ln899_25_fu_1469_p2;
        icmp_ln899_26_reg_2426 <= icmp_ln899_26_fu_1475_p2;
        icmp_ln899_27_reg_2431 <= icmp_ln899_27_fu_1481_p2;
        icmp_ln899_2_reg_2331 <= icmp_ln899_2_fu_1259_p2;
        icmp_ln899_3_reg_2336 <= icmp_ln899_3_fu_1265_p2;
        icmp_ln899_4_reg_2341 <= icmp_ln899_4_fu_1271_p2;
        icmp_ln899_5_reg_2346 <= icmp_ln899_5_fu_1277_p2;
        icmp_ln899_6_reg_2351 <= icmp_ln899_6_fu_1283_p2;
        icmp_ln899_reg_2321 <= icmp_ln899_fu_1247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln271_reg_2161 <= icmp_ln271_fu_1094_p2;
        icmp_ln289_reg_2167 <= icmp_ln289_fu_1106_p2;
        trunc_ln647_reg_2151 <= trunc_ln647_fu_1080_p1;
        w_m_weights_1_V_reg_2156 <= {{weight_V_V_TDATA[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln271_reg_2161_pp0_iter1_reg <= icmp_ln271_reg_2161;
        icmp_ln289_reg_2167_pp0_iter1_reg <= icmp_ln289_reg_2167;
        mul_ln1352_1_reg_2176 <= mul_ln1352_1_fu_1133_p2;
        mul_ln1352_reg_2171 <= mul_ln1352_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln289_reg_2167_pp0_iter2_reg <= icmp_ln289_reg_2167_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_10_fu_228 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_11_fu_232 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_12_fu_236 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_13_fu_240 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_14_fu_244 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_15_fu_248 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_16_fu_252 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_17_fu_256 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_18_fu_260 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_19_fu_264 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_1_fu_196 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_20_fu_268 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_21_fu_272 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_22_fu_276 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_23_fu_280 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_24_fu_284 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_25_fu_288 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_26_fu_292 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((((((trunc_ln321_fu_938_p1 == 5'd30) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0)) | ((trunc_ln321_fu_938_p1 == 5'd31) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd29) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd28) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd27) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))) | ((trunc_ln321_fu_938_p1 == 5'd26) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0))))) begin
        tmp_V_27_fu_296 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_2_fu_200 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_4_fu_204 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_5_fu_208 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_6_fu_212 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_7_fu_216 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_8_fu_220 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_9_fu_224 <= in_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln321_fu_938_p1 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_fu_192 <= in_V_V_TDATA;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_769_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_2167 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load_1 = select_ln301_fu_1186_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load_1 = nf_assign_fu_300;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op85_read_state2 == 1'b1))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_2167_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_2167_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_10_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_11_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_12_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_13_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_14_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_15_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_16_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_17_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_18_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_19_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_20_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_21_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_22_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_23_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_24_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_25_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_26_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_27_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_3_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_4_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_5_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_6_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_7_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_8_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_9_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_769_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_V_V_TDATA_blk_n = weight_V_V_TVALID;
    end else begin
        weight_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_769_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_V_V_TREADY = 1'b1;
    end else begin
        weight_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln248_fu_769_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln248_fu_769_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_1222_p2 = ($signed(sext_ln700_fu_1219_p1) + $signed(select_ln271_1_fu_1212_p3));

assign accu_0_1_V_fu_1231_p2 = ($signed(sext_ln700_1_fu_1228_p1) + $signed(select_ln271_fu_1205_p3));

assign add_ln700_10_fu_1677_p2 = (zext_ln700_7_fu_1673_p1 + zext_ln700_6_fu_1663_p1);

assign add_ln700_11_fu_1683_p2 = (add_ln700_10_fu_1677_p2 + zext_ln700_5_fu_1654_p1);

assign add_ln700_12_fu_1693_p2 = (zext_ln700_8_fu_1689_p1 + add_ln700_5_fu_1648_p2);

assign add_ln700_13_fu_1802_p2 = (zext_ln186_13_fu_1717_p1 + zext_ln186_14_fu_1726_p1);

assign add_ln700_14_fu_1812_p2 = (zext_ln700_10_fu_1808_p1 + select_ln700_1_fu_1704_p3);

assign add_ln700_15_fu_1818_p2 = (zext_ln186_15_fu_1735_p1 + zext_ln186_16_fu_1744_p1);

assign add_ln700_16_fu_1828_p2 = (zext_ln186_17_fu_1753_p1 + zext_ln186_18_fu_1762_p1);

assign add_ln700_17_fu_1838_p2 = (zext_ln700_12_fu_1834_p1 + zext_ln700_11_fu_1824_p1);

assign add_ln700_18_fu_1848_p2 = (zext_ln700_13_fu_1844_p1 + add_ln700_14_fu_1812_p2);

assign add_ln700_19_fu_1487_p2 = (zext_ln186_20_fu_1443_p1 + zext_ln186_21_fu_1459_p1);

assign add_ln700_1_fu_1612_p2 = (zext_ln700_1_fu_1608_p1 + select_ln700_fu_1504_p3);

assign add_ln700_20_fu_1493_p2 = (add_ln700_19_fu_1487_p2 + zext_ln186_19_fu_1427_p1);

assign add_ln700_21_fu_1857_p2 = (zext_ln186_22_fu_1771_p1 + zext_ln186_23_fu_1780_p1);

assign add_ln700_22_fu_1867_p2 = (zext_ln186_24_fu_1789_p1 + zext_ln700_9_fu_1798_p1);

assign add_ln700_23_fu_1877_p2 = (zext_ln700_16_fu_1873_p1 + zext_ln700_15_fu_1863_p1);

assign add_ln700_24_fu_1883_p2 = (add_ln700_23_fu_1877_p2 + zext_ln700_14_fu_1854_p1);

assign add_ln700_25_fu_1893_p2 = (zext_ln700_17_fu_1889_p1 + add_ln700_18_fu_1848_p2);

assign add_ln700_2_fu_1618_p2 = (zext_ln186_3_fu_1535_p1 + zext_ln186_4_fu_1544_p1);

assign add_ln700_3_fu_1628_p2 = (zext_ln186_5_fu_1553_p1 + zext_ln186_6_fu_1562_p1);

assign add_ln700_4_fu_1638_p2 = (zext_ln700_3_fu_1634_p1 + zext_ln700_2_fu_1624_p1);

assign add_ln700_5_fu_1648_p2 = (zext_ln700_4_fu_1644_p1 + add_ln700_1_fu_1612_p2);

assign add_ln700_6_fu_1361_p2 = (zext_ln186_8_fu_1317_p1 + zext_ln186_9_fu_1333_p1);

assign add_ln700_7_fu_1367_p2 = (add_ln700_6_fu_1361_p2 + zext_ln186_7_fu_1301_p1);

assign add_ln700_8_fu_1657_p2 = (zext_ln186_10_fu_1571_p1 + zext_ln186_11_fu_1580_p1);

assign add_ln700_9_fu_1667_p2 = (zext_ln186_12_fu_1589_p1 + zext_ln700_fu_1598_p1);

assign add_ln700_fu_1602_p2 = (zext_ln186_1_fu_1517_p1 + zext_ln186_2_fu_1526_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_769_p2 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_769_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_769_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((in_V_V_TVALID == 1'b0) & (ap_predicate_op85_read_state2 == 1'b1)) | ((weight_V_V_TVALID == 1'b0) & (icmp_ln248_fu_769_p2 == 1'd0)));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((out_V_V_TREADY == 1'b0) & (icmp_ln289_reg_2167_pp0_iter2_reg == 1'd1));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_Val2_s_reg_698 = 'bx;

always @ (*) begin
    ap_predicate_op85_read_state2 = ((icmp_ln252_fu_784_p2 == 1'd1) & (icmp_ln248_fu_769_p2 == 1'd0));
end

assign i_fu_775_p2 = (i_0_reg_687 + 20'd1);

assign icmp_ln248_fu_769_p2 = ((i_0_reg_687 == 20'd777600) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_784_p2 = ((ap_sig_allocacmp_nf_assign_load_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_1094_p2 = ((sf_1_fu_188 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_1106_p2 = ((sf_fu_1100_p2 == 32'd27) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_1180_p2 = ((nf_fu_1174_p2 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln899_10_fu_1337_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_25_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_11_fu_1343_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_24_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_12_fu_1349_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_23_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_13_fu_1355_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_22_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_14_fu_1373_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_13_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_15_fu_1379_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_12_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_16_fu_1385_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_7_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_17_fu_1391_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_6_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_18_fu_1397_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_5_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_19_fu_1403_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_4_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_1253_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_26_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_20_fu_1409_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_21_fu_1415_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_22_fu_1431_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_23_fu_1447_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_24_fu_1463_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_11_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_25_fu_1469_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_10_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_26_fu_1475_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_9_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_27_fu_1481_p2 = (($signed(accu_0_1_V_fu_1231_p2) < $signed(threshs_m_thresholds_8_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_1259_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_21_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_3_fu_1265_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_20_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_4_fu_1271_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_19_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_5_fu_1277_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_18_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_6_fu_1283_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_17_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_7_fu_1289_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_16_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_8_fu_1305_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_15_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_9_fu_1321_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_14_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_1247_p2 = (($signed(accu_0_0_V_fu_1222_p2) < $signed(threshs_m_thresholds_27_q0)) ? 1'b1 : 1'b0);

assign inElem_V_1_fu_878_p28 = sf_1_fu_188[4:0];

assign mul_ln1352_1_fu_1133_p0 = sext_ln215_1_fu_1120_p1;

assign mul_ln1352_fu_1124_p0 = sext_ln215_1_fu_1120_p1;

assign nf_fu_1174_p2 = (nf_assign_fu_300 + 32'd1);

assign out_V_V_TDATA = {{add_ln700_25_fu_1893_p2}, {add_ln700_12_fu_1693_p2}};

assign select_ln271_1_fu_1212_p3 = ((icmp_ln271_reg_2161_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_0_0_fu_180);

assign select_ln271_fu_1205_p3 = ((icmp_ln271_reg_2161_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_1_0_fu_184);

assign select_ln301_fu_1186_p3 = ((icmp_ln301_fu_1180_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_1174_p2);

assign select_ln700_1_fu_1704_p3 = ((xor_ln899_14_fu_1699_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign select_ln700_fu_1504_p3 = ((xor_ln899_fu_1499_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign sext_ln215_1_fu_1120_p1 = $signed(ap_phi_reg_pp0_iter1_p_Val2_s_reg_698);

assign sext_ln700_1_fu_1228_p1 = mul_ln1352_1_reg_2176;

assign sext_ln700_fu_1219_p1 = mul_ln1352_reg_2171;

assign sf_fu_1100_p2 = (32'd1 + sf_1_fu_188);

assign threshs_m_thresholds_10_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_11_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_12_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_13_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_14_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_15_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_16_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_17_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_18_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_19_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_1_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_20_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_21_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_22_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_23_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_24_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_25_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_26_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_27_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_2_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_3_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_4_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_5_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_6_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_7_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_8_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_9_address0 = zext_ln186_fu_1142_p1;

assign threshs_m_thresholds_address0 = zext_ln186_fu_1142_p1;

assign trunc_ln321_fu_938_p1 = sf_1_fu_188[4:0];

assign trunc_ln647_fu_1080_p1 = weight_V_V_TDATA[3:0];

assign xor_ln899_10_fu_1566_p2 = (icmp_ln899_10_reg_2356 ^ 1'd1);

assign xor_ln899_11_fu_1575_p2 = (icmp_ln899_11_reg_2361 ^ 1'd1);

assign xor_ln899_12_fu_1584_p2 = (icmp_ln899_12_reg_2366 ^ 1'd1);

assign xor_ln899_13_fu_1593_p2 = (icmp_ln899_13_reg_2371 ^ 1'd1);

assign xor_ln899_14_fu_1699_p2 = (icmp_ln899_14_reg_2381 ^ 1'd1);

assign xor_ln899_15_fu_1712_p2 = (icmp_ln899_15_reg_2386 ^ 1'd1);

assign xor_ln899_16_fu_1721_p2 = (icmp_ln899_16_reg_2391 ^ 1'd1);

assign xor_ln899_17_fu_1730_p2 = (icmp_ln899_17_reg_2396 ^ 1'd1);

assign xor_ln899_18_fu_1739_p2 = (icmp_ln899_18_reg_2401 ^ 1'd1);

assign xor_ln899_19_fu_1748_p2 = (icmp_ln899_19_reg_2406 ^ 1'd1);

assign xor_ln899_1_fu_1512_p2 = (icmp_ln899_1_reg_2326 ^ 1'd1);

assign xor_ln899_20_fu_1757_p2 = (icmp_ln899_20_reg_2411 ^ 1'd1);

assign xor_ln899_21_fu_1421_p2 = (icmp_ln899_21_fu_1415_p2 ^ 1'd1);

assign xor_ln899_22_fu_1437_p2 = (icmp_ln899_22_fu_1431_p2 ^ 1'd1);

assign xor_ln899_23_fu_1453_p2 = (icmp_ln899_23_fu_1447_p2 ^ 1'd1);

assign xor_ln899_24_fu_1766_p2 = (icmp_ln899_24_reg_2416 ^ 1'd1);

assign xor_ln899_25_fu_1775_p2 = (icmp_ln899_25_reg_2421 ^ 1'd1);

assign xor_ln899_26_fu_1784_p2 = (icmp_ln899_26_reg_2426 ^ 1'd1);

assign xor_ln899_27_fu_1793_p2 = (icmp_ln899_27_reg_2431 ^ 1'd1);

assign xor_ln899_2_fu_1521_p2 = (icmp_ln899_2_reg_2331 ^ 1'd1);

assign xor_ln899_3_fu_1530_p2 = (icmp_ln899_3_reg_2336 ^ 1'd1);

assign xor_ln899_4_fu_1539_p2 = (icmp_ln899_4_reg_2341 ^ 1'd1);

assign xor_ln899_5_fu_1548_p2 = (icmp_ln899_5_reg_2346 ^ 1'd1);

assign xor_ln899_6_fu_1557_p2 = (icmp_ln899_6_reg_2351 ^ 1'd1);

assign xor_ln899_7_fu_1295_p2 = (icmp_ln899_7_fu_1289_p2 ^ 1'd1);

assign xor_ln899_8_fu_1311_p2 = (icmp_ln899_8_fu_1305_p2 ^ 1'd1);

assign xor_ln899_9_fu_1327_p2 = (icmp_ln899_9_fu_1321_p2 ^ 1'd1);

assign xor_ln899_fu_1499_p2 = (icmp_ln899_reg_2321 ^ 1'd1);

assign zext_ln186_10_fu_1571_p1 = xor_ln899_10_fu_1566_p2;

assign zext_ln186_11_fu_1580_p1 = xor_ln899_11_fu_1575_p2;

assign zext_ln186_12_fu_1589_p1 = xor_ln899_12_fu_1584_p2;

assign zext_ln186_13_fu_1717_p1 = xor_ln899_15_fu_1712_p2;

assign zext_ln186_14_fu_1726_p1 = xor_ln899_16_fu_1721_p2;

assign zext_ln186_15_fu_1735_p1 = xor_ln899_17_fu_1730_p2;

assign zext_ln186_16_fu_1744_p1 = xor_ln899_18_fu_1739_p2;

assign zext_ln186_17_fu_1753_p1 = xor_ln899_19_fu_1748_p2;

assign zext_ln186_18_fu_1762_p1 = xor_ln899_20_fu_1757_p2;

assign zext_ln186_19_fu_1427_p1 = xor_ln899_21_fu_1421_p2;

assign zext_ln186_1_fu_1517_p1 = xor_ln899_1_fu_1512_p2;

assign zext_ln186_20_fu_1443_p1 = xor_ln899_22_fu_1437_p2;

assign zext_ln186_21_fu_1459_p1 = xor_ln899_23_fu_1453_p2;

assign zext_ln186_22_fu_1771_p1 = xor_ln899_24_fu_1766_p2;

assign zext_ln186_23_fu_1780_p1 = xor_ln899_25_fu_1775_p2;

assign zext_ln186_24_fu_1789_p1 = xor_ln899_26_fu_1784_p2;

assign zext_ln186_2_fu_1526_p1 = xor_ln899_2_fu_1521_p2;

assign zext_ln186_3_fu_1535_p1 = xor_ln899_3_fu_1530_p2;

assign zext_ln186_4_fu_1544_p1 = xor_ln899_4_fu_1539_p2;

assign zext_ln186_5_fu_1553_p1 = xor_ln899_5_fu_1548_p2;

assign zext_ln186_6_fu_1562_p1 = xor_ln899_6_fu_1557_p2;

assign zext_ln186_7_fu_1301_p1 = xor_ln899_7_fu_1295_p2;

assign zext_ln186_8_fu_1317_p1 = xor_ln899_8_fu_1311_p2;

assign zext_ln186_9_fu_1333_p1 = xor_ln899_9_fu_1327_p2;

assign zext_ln186_fu_1142_p1 = nf_assign_fu_300;

assign zext_ln700_10_fu_1808_p1 = add_ln700_13_fu_1802_p2;

assign zext_ln700_11_fu_1824_p1 = add_ln700_15_fu_1818_p2;

assign zext_ln700_12_fu_1834_p1 = add_ln700_16_fu_1828_p2;

assign zext_ln700_13_fu_1844_p1 = add_ln700_17_fu_1838_p2;

assign zext_ln700_14_fu_1854_p1 = add_ln700_20_reg_2436;

assign zext_ln700_15_fu_1863_p1 = add_ln700_21_fu_1857_p2;

assign zext_ln700_16_fu_1873_p1 = add_ln700_22_fu_1867_p2;

assign zext_ln700_17_fu_1889_p1 = add_ln700_24_fu_1883_p2;

assign zext_ln700_1_fu_1608_p1 = add_ln700_fu_1602_p2;

assign zext_ln700_2_fu_1624_p1 = add_ln700_2_fu_1618_p2;

assign zext_ln700_3_fu_1634_p1 = add_ln700_3_fu_1628_p2;

assign zext_ln700_4_fu_1644_p1 = add_ln700_4_fu_1638_p2;

assign zext_ln700_5_fu_1654_p1 = add_ln700_7_reg_2376;

assign zext_ln700_6_fu_1663_p1 = add_ln700_8_fu_1657_p2;

assign zext_ln700_7_fu_1673_p1 = add_ln700_9_fu_1667_p2;

assign zext_ln700_8_fu_1689_p1 = add_ln700_11_fu_1683_p2;

assign zext_ln700_9_fu_1798_p1 = xor_ln899_27_fu_1793_p2;

assign zext_ln700_fu_1598_p1 = xor_ln899_13_fu_1593_p2;

endmodule //StreamingFCLayer_Batch_0_Matrix_Vector_Activa
