// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_ST_fsm_state1 = "1";
const sc_lv<3> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_ST_fsm_state4 = "100";
const bool StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_boolean_1 = true;
const sc_lv<32> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv32_1 = "1";
const bool StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_boolean_0 = false;
const sc_lv<1> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv1_0 = "0";
const sc_lv<1> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv1_1 = "1";
const sc_lv<4> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv4_0 = "0000";
const sc_lv<10> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv10_0 = "0000000000";
const sc_lv<10> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv10_200 = "1000000000";
const sc_lv<10> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv10_1 = "1";
const sc_lv<32> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv32_2 = "10";
const sc_lv<32> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv32_4 = "100";
const sc_lv<32> StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::ap_const_lv32_7 = "111";

StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op16_read_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_predicate_op16_read_state2 );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( out_V_V_TREADY );
    sensitive << ( icmp_ln476_reg_166 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_86);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln476_fu_104_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_98_p4);
    sensitive << ( icmp_ln476_reg_166 );
    sensitive << ( icmp_ln479_reg_175 );
    sensitive << ( ap_phi_reg_pp0_iter1_p_Val2_s_reg_95 );
    sensitive << ( zext_ln476_fu_142_p1 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_Val2_s_reg_95);

    SC_METHOD(thread_ap_predicate_op16_read_state2);
    sensitive << ( icmp_ln476_fu_104_p2 );
    sensitive << ( icmp_ln479_fu_116_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_eo_V_fu_147_p1);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_98_p4 );

    SC_METHOD(thread_icmp_ln476_fu_104_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( t_0_reg_84 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln479_fu_116_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln476_fu_104_p2 );
    sensitive << ( o_0_reg_73 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln490_fu_128_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln476_fu_104_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( o_fu_122_p2 );

    SC_METHOD(thread_in_V_V_TDATA_blk_n);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln476_fu_104_p2 );
    sensitive << ( icmp_ln479_fu_116_p2 );

    SC_METHOD(thread_in_V_V_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_predicate_op16_read_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_o_fu_122_p2);
    sensitive << ( o_0_reg_73 );

    SC_METHOD(thread_out_V_V_TDATA);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln476_reg_166 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( eo_V_fu_147_p1 );

    SC_METHOD(thread_out_V_V_TDATA_blk_n);
    sensitive << ( out_V_V_TREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln476_reg_166 );

    SC_METHOD(thread_out_V_V_TVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln476_reg_166 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln490_fu_134_p3);
    sensitive << ( o_fu_122_p2 );
    sensitive << ( icmp_ln490_fu_128_p2 );

    SC_METHOD(thread_t_fu_110_p2);
    sensitive << ( t_0_reg_84 );

    SC_METHOD(thread_zext_ln476_fu_142_p1);
    sensitive << ( p_025_0_reg_61 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln476_fu_104_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_TDATA, "(port)in_V_V_TDATA");
    sc_trace(mVcdFile, in_V_V_TVALID, "(port)in_V_V_TVALID");
    sc_trace(mVcdFile, in_V_V_TREADY, "(port)in_V_V_TREADY");
    sc_trace(mVcdFile, out_V_V_TDATA, "(port)out_V_V_TDATA");
    sc_trace(mVcdFile, out_V_V_TVALID, "(port)out_V_V_TVALID");
    sc_trace(mVcdFile, out_V_V_TREADY, "(port)out_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_V_V_TDATA_blk_n, "in_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln476_fu_104_p2, "icmp_ln476_fu_104_p2");
    sc_trace(mVcdFile, icmp_ln479_fu_116_p2, "icmp_ln479_fu_116_p2");
    sc_trace(mVcdFile, out_V_V_TDATA_blk_n, "out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln476_reg_166, "icmp_ln476_reg_166");
    sc_trace(mVcdFile, p_025_0_reg_61, "p_025_0_reg_61");
    sc_trace(mVcdFile, o_0_reg_73, "o_0_reg_73");
    sc_trace(mVcdFile, t_0_reg_84, "t_0_reg_84");
    sc_trace(mVcdFile, ap_predicate_op16_read_state2, "ap_predicate_op16_read_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, t_fu_110_p2, "t_fu_110_p2");
    sc_trace(mVcdFile, icmp_ln479_reg_175, "icmp_ln479_reg_175");
    sc_trace(mVcdFile, select_ln490_fu_134_p3, "select_ln490_fu_134_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_98_p4, "ap_phi_mux_p_Val2_s_phi_fu_98_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_Val2_s_reg_95, "ap_phi_reg_pp0_iter0_p_Val2_s_reg_95");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_Val2_s_reg_95, "ap_phi_reg_pp0_iter1_p_Val2_s_reg_95");
    sc_trace(mVcdFile, zext_ln476_fu_142_p1, "zext_ln476_fu_142_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, o_fu_122_p2, "o_fu_122_p2");
    sc_trace(mVcdFile, icmp_ln490_fu_128_p2, "icmp_ln490_fu_128_p2");
    sc_trace(mVcdFile, eo_V_fu_147_p1, "eo_V_fu_147_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_86, "ap_condition_86");
#endif

    }
}

StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::~StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_86.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(icmp_ln479_fu_116_p2.read(), ap_const_lv1_1))) {
            ap_phi_reg_pp0_iter1_p_Val2_s_reg_95 = in_V_V_TDATA.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_p_Val2_s_reg_95 = ap_phi_reg_pp0_iter0_p_Val2_s_reg_95.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        o_0_reg_73 = select_ln490_fu_134_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        o_0_reg_73 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_166.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_025_0_reg_61 = ap_phi_mux_p_Val2_s_phi_fu_98_p4.read().range(7, 4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_025_0_reg_61 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        t_0_reg_84 = t_fu_110_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        t_0_reg_84 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln476_reg_166 = icmp_ln476_fu_104_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln479_reg_175 = icmp_ln479_fu_116_p2.read();
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_166.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_TREADY.read()));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_condition_86() {
    ap_condition_86 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_phi_mux_p_Val2_s_phi_fu_98_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_166.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln479_reg_175.read()))) {
        ap_phi_mux_p_Val2_s_phi_fu_98_p4 = zext_ln476_fu_142_p1.read();
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_98_p4 = ap_phi_reg_pp0_iter1_p_Val2_s_reg_95.read();
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_phi_reg_pp0_iter0_p_Val2_s_reg_95() {
    ap_phi_reg_pp0_iter0_p_Val2_s_reg_95 =  (sc_lv<8>) ("XXXXXXXX");
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_predicate_op16_read_state2() {
    ap_predicate_op16_read_state2 = (esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln479_fu_116_p2.read(), ap_const_lv1_1));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_eo_V_fu_147_p1() {
    eo_V_fu_147_p1 = ap_phi_mux_p_Val2_s_phi_fu_98_p4.read().range(4-1, 0);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_icmp_ln476_fu_104_p2() {
    icmp_ln476_fu_104_p2 = (!t_0_reg_84.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(t_0_reg_84.read() == ap_const_lv10_200);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_icmp_ln479_fu_116_p2() {
    icmp_ln479_fu_116_p2 = (!o_0_reg_73.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(o_0_reg_73.read() == ap_const_lv32_0);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_icmp_ln490_fu_128_p2() {
    icmp_ln490_fu_128_p2 = (!o_fu_122_p2.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(o_fu_122_p2.read() == ap_const_lv32_2);
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_in_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln479_fu_116_p2.read(), ap_const_lv1_1))) {
        in_V_V_TDATA_blk_n = in_V_V_TVALID.read();
    } else {
        in_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_in_V_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op16_read_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_V_TREADY = ap_const_logic_1;
    } else {
        in_V_V_TREADY = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_o_fu_122_p2() {
    o_fu_122_p2 = (!ap_const_lv32_1.is_01() || !o_0_reg_73.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(o_0_reg_73.read()));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_out_V_V_TDATA() {
    out_V_V_TDATA = esl_zext<8,4>(eo_V_fu_147_p1.read());
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_out_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_166.read()))) {
        out_V_V_TDATA_blk_n = out_V_V_TREADY.read();
    } else {
        out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_out_V_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_166.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_TVALID = ap_const_logic_1;
    } else {
        out_V_V_TVALID = ap_const_logic_0;
    }
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_select_ln490_fu_134_p3() {
    select_ln490_fu_134_p3 = (!icmp_ln490_fu_128_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln490_fu_128_p2.read()[0].to_bool())? ap_const_lv32_0: o_fu_122_p2.read());
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_t_fu_110_p2() {
    t_fu_110_p2 = (!t_0_reg_84.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(t_0_reg_84.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_zext_ln476_fu_142_p1() {
    zext_ln476_fu_142_p1 = esl_zext<8,4>(p_025_0_reg_61.read());
}

void StreamingDataWidthConverter_Batch_8_StreamingDataWidthCo_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln476_fu_104_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

