-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actibs_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Actibs_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110110001011000", 1 => "1111101111111111", 2 => "1111111010011001", 
    3 => "1110111011110010", 4 => "0000000000101000", 5 => "1111111101100100", 
    6 => "1111110000010100", 7 => "1111110011111011", 8 => "1111110000100010", 
    9 => "1111101110100101", 10 => "1111111001101110", 11 => "0000100010000110", 
    12 => "1111110010101001", 13 => "1111101100011000", 14 => "0000010011000001", 
    15 => "1111101110010101", 16 => "0000010000001001", 17 => "0000110100001010", 
    18 => "0001101000100111", 19 => "1111101001111010", 20 => "0000111101111001", 
    21 => "0000100111011001", 22 => "1110001001101001", 23 => "1111101001000111", 
    24 => "1111111111100101", 25 => "0000001001000011", 26 => "1111110010001010", 
    27 => "1010110110101001", 28 => "1111111000000001", 29 => "0000000100011100", 
    30 => "0000010010001101", 31 => "1111101011001010", 32 => "1111110010111111", 
    33 => "0000001000001001", 34 => "0000011001010001", 35 => "1111110001111011", 
    36 => "0000010001010101", 37 => "1111100111101000", 38 => "1111111101101011", 
    39 => "0000001010110000", 40 => "1101101010010010", 41 => "0111000000000001", 
    42 => "0000000010011010", 43 => "1100011101010010", 44 => "1110111101111101", 
    45 => "1111110010111011", 46 => "0001010011000100", 47 => "1111101000001000", 
    48 => "1111100000001110", 49 => "0000001010001011", 50 => "0000010100111011", 
    51 => "1111110111100010", 52 => "0000000101010000", 53 => "1110110110111111", 
    54 => "0000000110010111", 55 => "0000101110011100", 56 => "1111011101110010", 
    57 => "1111111110111001", 58 => "1111001100000101", 59 => "1111110111100101", 
    60 => "1111111010011011", 61 => "1111101101001100", 62 => "1111110100110000", 
    63 => "1111110101010000", 64 => "1111111101001010", 65 => "0000000011011111", 
    66 => "0000000111000110", 67 => "1111101101100110", 68 => "0000001001011111", 
    69 => "1111010110000100", 70 => "0000001010101110", 71 => "0000010000101101", 
    72 => "0000000000110111", 73 => "1101111100111000", 74 => "1111100011100101", 
    75 => "0000000010001000", 76 => "0001110011000011", 77 => "0000000001101010", 
    78 => "0000011011110011", 79 => "1111010101111111", 80 => "1111100011011001", 
    81 => "0000011001011000", 82 => "0000010001000010", 83 => "1111101111100010", 
    84 => "0000001100111100", 85 => "1111011011011100", 86 => "0000010000101001", 
    87 => "1111011111011111", 88 => "0000001111001100", 89 => "1111010110111110", 
    90 => "0000000001010110", 91 => "0000000010111000", 92 => "1111010011001001", 
    93 => "0000101010101011", 94 => "0000010100010110", 95 => "0000010101100001", 
    96 => "0010001101011001", 97 => "1111010001001010", 98 => "0000000110010111", 
    99 => "0000000011100101", 100 => "0000011000101011", 101 => "0000011111100001", 
    102 => "1111111011101111", 103 => "1111111101010101", 104 => "1111101110010001", 
    105 => "0001001010100111", 106 => "1111111111111001", 107 => "1111110010100001", 
    108 => "0000010011001010", 109 => "1111110100100100", 110 => "0000010100010111", 
    111 => "1111110000010011", 112 => "1111111110001010", 113 => "1111110001101101", 
    114 => "1111111000010001", 115 => "0000011111011110", 116 => "1111100111100111", 
    117 => "1111111000101101", 118 => "1111111111101111", 119 => "0000100000001000", 
    120 => "0000010010110001", 121 => "0000000001101100", 122 => "1111100000100000", 
    123 => "0000001010010000", 124 => "0000001111101111", 125 => "0000011011010110", 
    126 => "0001010001101100", 127 => "1111110000000111", 128 => "1111000000000110", 
    129 => "1111111011010011", 130 => "0000000000111000", 131 => "0000000010010010", 
    132 => "1111110011100111", 133 => "1111101100101010", 134 => "0000010100011010", 
    135 => "1111111000101100", 136 => "1111111001000110", 137 => "0000010000001001", 
    138 => "0000001010010010", 139 => "0000001011110011", 140 => "1111111100110111", 
    141 => "1111001110100101", 142 => "1111011110100110", 143 => "1111011001110111", 
    144 => "0000001110100111", 145 => "1111110101101001", 146 => "1110101110111110", 
    147 => "1111110001010011", 148 => "1111100100011111", 149 => "1111010001110100", 
    150 => "1111110000101000", 151 => "1101000010100111", 152 => "0000000101010010", 
    153 => "1111011010000111", 154 => "1111111000101111", 155 => "0000110001101010", 
    156 => "1111110101111110", 157 => "1111101101010110", 158 => "0000000001000100", 
    159 => "1111110100111001", 160 => "1111111110100011", 161 => "1111101101111010", 
    162 => "0000000111100010", 163 => "1111111110101011", 164 => "1111111111000010", 
    165 => "1111111011101001", 166 => "1100010011111101", 167 => "1111110011010010", 
    168 => "0000000000100000", 169 => "1111111010101000", 170 => "0000010100010100", 
    171 => "0000000010001100", 172 => "0001001111011000", 173 => "0000000111001111", 
    174 => "1111111110000100", 175 => "0000000010011010", 176 => "0000001110100110", 
    177 => "0000001001011100", 178 => "1111111011101011", 179 => "0000000110000011", 
    180 => "1111101110101000", 181 => "0000000110000000", 182 => "1111000011001100", 
    183 => "0000011000111000", 184 => "1111111110011001", 185 => "1111101001010011", 
    186 => "1111111110101111", 187 => "0001011000010000", 188 => "1111111101001000", 
    189 => "0001011101011010", 190 => "0000001100000010", 191 => "0000011010000000", 
    192 => "1111110110100011", 193 => "0001100000101011", 194 => "0000000001100111", 
    195 => "0000100000101001", 196 => "0000000000010011", 197 => "1111111101011111", 
    198 => "1111111000110111", 199 => "0000000001101101", 200 => "1111110101100011", 
    201 => "0101111011010000", 202 => "0000000101001101", 203 => "1111101001001110", 
    204 => "0000001000010010", 205 => "0000000010100001", 206 => "1111100000001100", 
    207 => "1111001010111000", 208 => "1111111101111011", 209 => "1111111000111001", 
    210 => "0000001011001011", 211 => "1111110110100101", 212 => "1111111000001000", 
    213 => "1111110000001000", 214 => "0000001000110110", 215 => "1111101111001001", 
    216 => "1111101011101111", 217 => "0000001010100010", 218 => "0000000101100001", 
    219 => "0000001011101100", 220 => "1111111101010110", 221 => "1111100000000111", 
    222 => "0000000100100010", 223 => "1111111000000011", 224 => "1111111111000001", 
    225 => "1111110110010010", 226 => "0000111111011101", 227 => "1111110011110010", 
    228 => "1010110011001111", 229 => "1111110001000111", 230 => "1111100011110001", 
    231 => "0000001001000001", 232 => "0000111100011001", 233 => "0000011001111111", 
    234 => "1111010111000011", 235 => "0000001010000001", 236 => "0000000100001100", 
    237 => "0111000000000001", 238 => "1111110010110100", 239 => "1111110100101110", 
    240 => "1111111001111111", 241 => "1110100110111100", 242 => "0000110001111110", 
    243 => "0000010100101100", 244 => "1111110111000000", 245 => "1111111001001000", 
    246 => "1111111111100111", 247 => "1111101101011010", 248 => "1111100100000101", 
    249 => "1111111010000011", 250 => "0001110000111001", 251 => "1111100110101000", 
    252 => "0000000100100010", 253 => "1111110000110111", 254 => "0000010100101000", 
    255 => "0000101000001000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actibs is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Actibs is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Actibs_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Actibs_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Actibs_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


