-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110101101110101", 1 => "1111101111011010", 2 => "1111111001100000", 
    3 => "1110110101010100", 4 => "1111111111101000", 5 => "1111111101000100", 
    6 => "1111101111011111", 7 => "1111110011001110", 8 => "1111101111100000", 
    9 => "1111101110001000", 10 => "1111111001000011", 11 => "0000100001100101", 
    12 => "1111110010000011", 13 => "1111101011110101", 14 => "0000010001111000", 
    15 => "1111101101110010", 16 => "0000001111011101", 17 => "0000101110000110", 
    18 => "0001100100101101", 19 => "1111101001001000", 20 => "0000111001011001", 
    21 => "0000100110101110", 22 => "1110000101001110", 23 => "1111101000011010", 
    24 => "1111111110100110", 25 => "0000001000010010", 26 => "1111110000100110", 
    27 => "1010011111001110", 28 => "1111110111011110", 29 => "0000000011110100", 
    30 => "0000010001011011", 31 => "1111101010010101", 32 => "1111110010001010", 
    33 => "0000000111010110", 34 => "0000010110110010", 35 => "1111110001001010", 
    36 => "0000010000110100", 37 => "1111100111000001", 38 => "1111111100110011", 
    39 => "0000001001110110", 40 => "1101010000100010", 41 => "0111000000000001", 
    42 => "0000000001110001", 43 => "1100001100000001", 44 => "1110111010001010", 
    45 => "1111110010010101", 46 => "0001001111111111", 47 => "1111100111010001", 
    48 => "1111011111011111", 49 => "0000001001100111", 50 => "0000010100001100", 
    51 => "1111110110111110", 52 => "0000000100100000", 53 => "1110110101001010", 
    54 => "0000000101111100", 55 => "0000101010010001", 56 => "1111011101000111", 
    57 => "1111111110001101", 58 => "1111001000010001", 59 => "1111110111000110", 
    60 => "1111111001111011", 61 => "1111101100100110", 62 => "1111110011111100", 
    63 => "1111110100101011", 64 => "1111111100010100", 65 => "0000000010111000", 
    66 => "0000000110011011", 67 => "1111101101000011", 68 => "0000001000011011", 
    69 => "1111010101010100", 70 => "0000001001111101", 71 => "0000010000000011", 
    72 => "0000000000001101", 73 => "1101110100100011", 74 => "1111100011000000", 
    75 => "0000000001100100", 76 => "0001101011110100", 77 => "0000000000101001", 
    78 => "0000011011001010", 79 => "1111010010110011", 80 => "1111100010100010", 
    81 => "0000011000011110", 82 => "0000010000011011", 83 => "1111101110111100", 
    84 => "0000001100000100", 85 => "1111011010110000", 86 => "0000001111110011", 
    87 => "1111011110110000", 88 => "0000001110010010", 89 => "1111010110010000", 
    90 => "0000000000101101", 91 => "0000000010010110", 92 => "1111010001010001", 
    93 => "0000101001001000", 94 => "0000010011100110", 95 => "0000010100111100", 
    96 => "0010000100101110", 97 => "1111001101000101", 98 => "0000000101100001", 
    99 => "0000000010110001", 100 => "0000011000001100", 101 => "0000011111000001", 
    102 => "1111111010110101", 103 => "1111111100101011", 104 => "1111101101001101", 
    105 => "0001001000101101", 106 => "1111111110111101", 107 => "1111110010000010", 
    108 => "0000010010100101", 109 => "1111110011100010", 110 => "0000010011100011", 
    111 => "1111101111110101", 112 => "1111111101011101", 113 => "1111110000100111", 
    114 => "1111110111100100", 115 => "0000011110110110", 116 => "1111100111000010", 
    117 => "1111111000001001", 118 => "1111111111011011", 119 => "0000011110011001", 
    120 => "0000010001110010", 121 => "0000000001000110", 122 => "1111011110100010", 
    123 => "0000001001101110", 124 => "0000001110100100", 125 => "0000011010011110", 
    126 => "0001001110010010", 127 => "1111101111011001", 128 => "1110111101111110", 
    129 => "1111111010101011", 130 => "0000000000010100", 131 => "0000000001001101", 
    132 => "1111110010110100", 133 => "1111101011111000", 134 => "0000010100001000", 
    135 => "1111110111111011", 136 => "1111111000001110", 137 => "0000001111011110", 
    138 => "0000001001100000", 139 => "0000001011000101", 140 => "1111111011101111", 
    141 => "1111001010101111", 142 => "1111011010011000", 143 => "1111011001000101", 
    144 => "0000001110000001", 145 => "1111110101000110", 146 => "1110101011001001", 
    147 => "1111110000101000", 148 => "1111100011110011", 149 => "1111001111010101", 
    150 => "1111110000000100", 151 => "1100110011010100", 152 => "0000000100101011", 
    153 => "1111011001100011", 154 => "1111110111111010", 155 => "0000101111001011", 
    156 => "1111110101000111", 157 => "1111101100101101", 158 => "0000000000011100", 
    159 => "1111110011111010", 160 => "1111111101110011", 161 => "1111101101001101", 
    162 => "0000000110111011", 163 => "1111111101111011", 164 => "1111111110011111", 
    165 => "1111111010111000", 166 => "1100000011001000", 167 => "1111110010011110", 
    168 => "1111111111110011", 169 => "1111111001111111", 170 => "0000010011110000", 
    171 => "0000000001101101", 172 => "0001001001111001", 173 => "0000000110001111", 
    174 => "1111111001110111", 175 => "0000000001111111", 176 => "0000001110001000", 
    177 => "0000001000011001", 178 => "1111111010101001", 179 => "0000000101001110", 
    180 => "1111101101101100", 181 => "0000000100111111", 182 => "1110111110011011", 
    183 => "0000010010011010", 184 => "1111111101011010", 185 => "1111100111101111", 
    186 => "1111111101110110", 187 => "0001010101110100", 188 => "1111111011111111", 
    189 => "0001011001101001", 190 => "0000001011000101", 191 => "0000011001011101", 
    192 => "1111110101111010", 193 => "0001010100101111", 194 => "0000000001000110", 
    195 => "0000011111111010", 196 => "1111111111011101", 197 => "1111111101000011", 
    198 => "1111111000001010", 199 => "0000000000111111", 200 => "1111110100111111", 
    201 => "0101011001101011", 202 => "0000000100100001", 203 => "1111101000010010", 
    204 => "0000000111101110", 205 => "0000000001111010", 206 => "1111011111100101", 
    207 => "1111001001111110", 208 => "1111111101000110", 209 => "1111111000000010", 
    210 => "0000001010100011", 211 => "1111110101111000", 212 => "1111110111011110", 
    213 => "1111101111001100", 214 => "0000001000010010", 215 => "1111101110010101", 
    216 => "1111101010111101", 217 => "0000001001100111", 218 => "0000000100111101", 
    219 => "0000001011000101", 220 => "1111111100110001", 221 => "1111011111010000", 
    222 => "0000000011111011", 223 => "1111110111100010", 224 => "1111111110010111", 
    225 => "1111110101111001", 226 => "0000111101000110", 227 => "1111110010011100", 
    228 => "1010011101001100", 229 => "1111110000010011", 230 => "1111100011000101", 
    231 => "0000001000001000", 232 => "0000111001010101", 233 => "0000011001001101", 
    234 => "1111010011111011", 235 => "0000001001000111", 236 => "0000000011100001", 
    237 => "0111000000000001", 238 => "1111110001111100", 239 => "1111110100000001", 
    240 => "1111111001011011", 241 => "1110100011010000", 242 => "0000101111001110", 
    243 => "0000010011111110", 244 => "1111110110011110", 245 => "1111111000101110", 
    246 => "1111111110110011", 247 => "1111101100111001", 248 => "1111100011010000", 
    249 => "1111111001001110", 250 => "0001101100000110", 251 => "1111100101111000", 
    252 => "0000000011011111", 253 => "1111110000000001", 254 => "0000010011111001", 
    255 => "0000100111011010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActfYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


