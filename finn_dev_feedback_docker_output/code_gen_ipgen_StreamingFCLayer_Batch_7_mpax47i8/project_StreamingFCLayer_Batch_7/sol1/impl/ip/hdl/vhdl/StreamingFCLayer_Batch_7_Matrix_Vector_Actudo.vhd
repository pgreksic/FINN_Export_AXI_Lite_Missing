-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actudo_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Actudo_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111001010100", 1 => "0000000010010111", 2 => "0001100011101000", 
    3 => "1111111000101100", 4 => "0011000011101010", 5 => "1111100101110001", 
    6 => "0000011000111100", 7 => "1111100001010010", 8 => "1111011011010111", 
    9 => "0000001100111010", 10 => "0000000010111100", 11 => "1111111100010001", 
    12 => "1111110010010110", 13 => "0000011100010011", 14 => "1111101010100000", 
    15 => "1111111111000001", 16 => "1111110111101001", 17 => "1111111100010101", 
    18 => "0000001011001011", 19 => "1111101001111010", 20 => "1111110010111011", 
    21 => "1111110001000100", 22 => "1111100110111011", 23 => "1111101101001100", 
    24 => "0000010111011100", 25 => "0000000000110111", 26 => "1111110011011010", 
    27 => "0000000001000001", 28 => "1111111101011111", 29 => "1111111111110011", 
    30 => "0000000111000101", 31 => "1100010001100011", 32 => "0000000101011000", 
    33 => "1111111010011110", 34 => "1111111010101011", 35 => "1111111010101110", 
    36 => "0000000110011011", 37 => "0000100111111011", 38 => "0000010001000100", 
    39 => "1111110011001000", 40 => "0000001001111101", 41 => "1111011101110010", 
    42 => "1111011100101100", 43 => "0000010000101101", 44 => "1111110011111001", 
    45 => "1111101111010011", 46 => "1111110000001100", 47 => "1100000011001111", 
    48 => "0000001001111010", 49 => "0000011101010110", 50 => "0000001101011101", 
    51 => "0000000110100111", 52 => "0000001010010110", 53 => "1111110001001000", 
    54 => "1111100100100010", 55 => "0000100011011000", 56 => "0000000101011110", 
    57 => "0000000000010011", 58 => "1100101110000000", 59 => "0000001000110001", 
    60 => "1111100111010110", 61 => "0111000000000001", 62 => "0000001111000110", 
    63 => "0000001011011000", 64 => "1111110100100100", 65 => "1111101111001101", 
    66 => "1111111110010001", 67 => "0000001000101110", 68 => "1110111111000100", 
    69 => "1111111010010001", 70 => "1111111000011010", 71 => "0000011110011010", 
    72 => "0000000010101010", 73 => "0000001110100000", 74 => "1110101101100011", 
    75 => "1111011101101011", 76 => "0000001000000111", 77 => "1110110010010101", 
    78 => "0000000001001000", 79 => "0111000000000001", 80 => "0001001000000001", 
    81 => "0000010001110101", 82 => "1110111110010010", 83 => "1111111001001000", 
    84 => "0000000000110011", 85 => "0000101111100101", 86 => "1111110101001100", 
    87 => "0000010000001100", 88 => "0001011000010110", 89 => "0000001011100100", 
    90 => "0000010100010111", 91 => "0000001101100010", 92 => "1111111000111011", 
    93 => "0000100010100101", 94 => "0000010001011010", 95 => "0000101000000001", 
    96 => "1111111111010010", 97 => "0000000000111011", 98 => "1010011010101110", 
    99 => "0000001110111100", 100 => "1111100110101010", 101 => "1111111101010110", 
    102 => "1110110100100111", 103 => "1111111011111111", 104 => "1101100110110100", 
    105 => "0000000000101010", 106 => "1111110101000010", 107 => "1111010111000000", 
    108 => "0000100010100110", 109 => "0000001010101001", 110 => "0000000001000101", 
    111 => "0000010011000111", 112 => "0000011101100000", 113 => "1111110100100001", 
    114 => "1111100110101011", 115 => "1111101001110001", 116 => "0000000101111011", 
    117 => "1111011001100011", 118 => "1111101000001001", 119 => "1111110000101100", 
    120 => "1111111101110010", 121 => "0000001000011100", 122 => "1111011010100100", 
    123 => "0000100100010111", 124 => "0000000110010101", 125 => "0000001110011110", 
    126 => "0000000010110000", 127 => "0000001010011000", 128 => "0000001011110010", 
    129 => "0000011101111010", 130 => "0000001000011111", 131 => "1111100010100000", 
    132 => "0000001100110000", 133 => "0000110110010001", 134 => "0000011000001001", 
    135 => "0000000010111000", 136 => "1111110100100011", 137 => "1111110101000000", 
    138 => "0000000101110110", 139 => "0000000111011101", 140 => "0000010011000011", 
    141 => "0000100100100000", 142 => "0001000110011111", 143 => "0000001000000011", 
    144 => "0000000010001100", 145 => "0000001010111111", 146 => "1111100011100100", 
    147 => "1111110110100010", 148 => "0000000011010010", 149 => "1111100111011100", 
    150 => "1111111001111101", 151 => "0000100001111001", 152 => "1110101101011111", 
    153 => "0000001010111011", 154 => "0000000010001100", 155 => "0000010001100000", 
    156 => "1111111001010001", 157 => "0000100001110000", 158 => "1111100101101000", 
    159 => "1111111011110001", 160 => "0000010110000100", 161 => "0000001001101100", 
    162 => "1111110011101101", 163 => "0000110010101010", 164 => "0000010000100001", 
    165 => "0000001000100101", 166 => "0000001000110111", 167 => "0000000010111100", 
    168 => "1111111101010101", 169 => "1111111111000011", 170 => "0000001011000101", 
    171 => "1111101100010011", 172 => "1111011100110110", 173 => "1111111111011011", 
    174 => "0000001101100000", 175 => "0000001101011000", 176 => "0000011001011011", 
    177 => "0000010001111001", 178 => "1111111111001101", 179 => "1110100110111000", 
    180 => "0000000101110110", 181 => "0000111100010000", 182 => "0000000010010111", 
    183 => "0000001100110001", 184 => "1111111101100100", 185 => "0000000000110111", 
    186 => "0000000001100101", 187 => "0000011100010010", 188 => "1110101011100111", 
    189 => "0000001011110001", 190 => "1111110001101000", 191 => "0001011010010011", 
    192 => "1111111010001001", 193 => "1111000000001100", 194 => "1111111001101110", 
    195 => "1111000000011110", 196 => "1111110111010110", 197 => "1111110110011101", 
    198 => "1111100001000111", 199 => "1111110011110111", 200 => "1111111111011101", 
    201 => "0010001000110111", 202 => "1111010101101010", 203 => "1111101001100100", 
    204 => "0000000100101110", 205 => "1111111111001010", 206 => "0000011110011011", 
    207 => "1111101010001010", 208 => "0000000001100001", 209 => "1111110101010011", 
    210 => "1111111110001110", 211 => "0000010010000111", 212 => "0000010011011100", 
    213 => "0000011010001110", 214 => "0000001001110011", 215 => "1111110101100100", 
    216 => "0000010010111011", 217 => "1111111111110100", 218 => "0000010110100111", 
    219 => "1111110101100011", 220 => "1110001111000100", 221 => "0000010110010100", 
    222 => "0000000001110110", 223 => "0000010111010110", 224 => "1101110010110110", 
    225 => "1111111000011000", 226 => "0000001010000111", 227 => "0000101111110111", 
    228 => "0000001001011000", 229 => "1111111100011011", 230 => "0000010011111010", 
    231 => "1111111101111111", 232 => "1111010000101100", 233 => "0000000011100011", 
    234 => "0011110011100001", 235 => "0000000000101101", 236 => "1111111101111111", 
    237 => "1111111111111000", 238 => "1111110001111101", 239 => "1111111111100101", 
    240 => "1111111101111110", 241 => "1111101000000001", 242 => "0000000110101001", 
    243 => "1111110111110010", 244 => "1111100011011111", 245 => "0000001011001000", 
    246 => "1111110001101110", 247 => "0000001101000111", 248 => "0111000000000001", 
    249 => "0011100011110000", 250 => "0000101100001001", 251 => "0000000010001110", 
    252 => "0001011001000111", 253 => "0000001101101111", 254 => "1111111101110000", 
    255 => "1111110110101101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actudo is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Actudo is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Actudo_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Actudo_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Actudo_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


