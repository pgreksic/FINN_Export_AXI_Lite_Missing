-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111001111000", 1 => "0000000010111111", 2 => "0001101010000011", 
    3 => "1111111001010100", 4 => "0011001110001110", 5 => "1111100110001101", 
    6 => "0000011001110011", 7 => "1111100010000101", 8 => "1111011101101010", 
    9 => "0000001101011110", 10 => "0000000011101000", 11 => "1111111101001100", 
    12 => "1111110110011110", 13 => "0000011101001101", 14 => "1111101011000111", 
    15 => "1111111111111100", 16 => "1111111000001010", 17 => "1111111101001100", 
    18 => "0000001100010101", 19 => "1111101010011111", 20 => "1111110011011100", 
    21 => "1111110001111111", 22 => "1111100111100101", 23 => "1111101101111010", 
    24 => "0000011000011011", 25 => "0000000001100110", 26 => "1111110100001011", 
    27 => "0000000001100101", 28 => "1111111110011011", 29 => "0000000000100110", 
    30 => "0000000111111111", 31 => "1100011110110000", 32 => "0000000110000100", 
    33 => "1111111011000010", 34 => "1111111011110000", 35 => "1111111011010001", 
    36 => "0000000111000010", 37 => "0000101001011110", 38 => "0000010001101011", 
    39 => "1111110011111111", 40 => "0000001010100011", 41 => "1111011110011001", 
    42 => "1111011101011001", 43 => "0000010001011001", 44 => "1111110100110110", 
    45 => "1111110000000000", 46 => "1111110001001101", 47 => "1100001110110100", 
    48 => "0000001010110000", 49 => "0000011110001110", 50 => "0000001110000110", 
    51 => "0000000111001011", 52 => "0000001010111011", 53 => "1111110001110100", 
    54 => "1111100101001110", 55 => "0000100111001100", 56 => "0000000101111100", 
    57 => "0000000001000101", 58 => "1100111000001000", 59 => "0000001001011000", 
    60 => "1111100111111000", 61 => "0111000000000001", 62 => "0000001111110110", 
    63 => "0000001100010010", 64 => "1111110101011000", 65 => "1111101111101111", 
    66 => "1111111110111011", 67 => "0000001001011111", 68 => "1111000010010010", 
    69 => "1111111011001101", 70 => "1111111001000111", 71 => "0000011111000011", 
    72 => "0000000011100011", 73 => "0000001111011100", 74 => "1110110000011110", 
    75 => "1111011110011011", 76 => "0000001001000000", 77 => "1110110101100100", 
    78 => "0000000001110101", 79 => "0111000000000001", 80 => "0001001011100000", 
    81 => "0000010010100011", 82 => "1111000001101011", 83 => "1111111001110011", 
    84 => "0000000001110011", 85 => "0000110011111111", 86 => "1111110101111010", 
    87 => "0000010001000011", 88 => "0001011101010000", 89 => "0000001100001100", 
    90 => "0000010101001000", 91 => "0000001110100100", 92 => "1111111001100111", 
    93 => "0000100011010000", 94 => "0000010010001010", 95 => "0000101000101011", 
    96 => "1111111111111111", 97 => "0000000001100011", 98 => "1010101100001110", 
    99 => "0000001111101100", 100 => "1111100111010101", 101 => "1111111110000000", 
    102 => "1110111110101001", 103 => "1111111100101110", 104 => "1101110001100010", 
    105 => "0000000001011001", 106 => "1111110101100000", 107 => "1111010111100100", 
    108 => "0000100011001010", 109 => "0000001011010110", 110 => "0000000001101010", 
    111 => "0000010011111001", 112 => "0000011101101101", 113 => "1111110110000011", 
    114 => "1111100111010001", 115 => "1111101010100000", 116 => "0000000110100000", 
    117 => "1111011011011100", 118 => "1111101000111011", 119 => "1111110001101000", 
    120 => "1111111110001111", 121 => "0000001001000011", 122 => "1111011011001111", 
    123 => "0000100100111100", 124 => "0000000111000011", 125 => "0000001111010101", 
    126 => "0000000011011110", 127 => "0000001010111111", 128 => "0000001100100000", 
    129 => "0000011110101111", 130 => "0000001001010100", 131 => "1111100110101011", 
    132 => "0000001101110000", 133 => "0000111001111001", 134 => "0000011001000110", 
    135 => "0000000011011010", 136 => "1111110101011011", 137 => "1111110101110000", 
    138 => "0000000110100011", 139 => "0000001000010100", 140 => "0000010011100110", 
    141 => "0000100101000110", 142 => "0001001001000100", 143 => "0000001001001101", 
    144 => "0000000011000111", 145 => "0000001011101000", 146 => "1111100110001111", 
    147 => "1111110111010001", 148 => "0000000100001101", 149 => "1111101000101011", 
    150 => "1111111010110111", 151 => "0000100010100000", 152 => "1110110000110001", 
    153 => "0000001100011001", 154 => "0000000010110101", 155 => "0000010101100000", 
    156 => "1111111010000001", 157 => "0000100010010010", 158 => "1111100110001111", 
    159 => "1111111100110111", 160 => "0000010110101010", 161 => "0000001010101100", 
    162 => "1111110100001101", 163 => "0000110101011000", 164 => "0000010001110101", 
    165 => "0000001001011000", 166 => "0000001001011111", 167 => "0000000100000110", 
    168 => "1111111110010101", 169 => "1111111111101101", 170 => "0000001011101100", 
    171 => "1111101101001001", 172 => "1111011101100010", 173 => "1111111111111110", 
    174 => "0000001110011101", 175 => "0000001110000100", 176 => "0000011010000101", 
    177 => "0000010010011010", 178 => "0000000000011101", 179 => "1110101101111110", 
    180 => "0000000110011110", 181 => "0000111111000111", 182 => "0000000011001001", 
    183 => "0000001101101100", 184 => "1111111110001110", 185 => "0000000001011001", 
    186 => "0000000010011010", 187 => "0000011101000000", 188 => "1110110010000101", 
    189 => "0000001100011111", 190 => "1111110010100000", 191 => "0001011110001111", 
    192 => "1111111010111110", 193 => "1111000010001101", 194 => "1111111010101000", 
    195 => "1111000101000101", 196 => "1111111000010111", 197 => "1111110111001111", 
    198 => "1111100001111101", 199 => "1111110100011011", 200 => "0000000000000110", 
    201 => "0010010010111111", 202 => "1111010110001101", 203 => "1111101010000010", 
    204 => "0000000101010010", 205 => "1111111111100001", 206 => "0000100001110101", 
    207 => "1111101010110011", 208 => "0000000010001010", 209 => "1111110101111110", 
    210 => "1111111110111001", 211 => "0000010010110011", 212 => "0000010100000010", 
    213 => "0000011010111101", 214 => "0000001010010100", 215 => "1111110110011001", 
    216 => "0000010011011111", 217 => "0000000000100100", 218 => "0000010111010011", 
    219 => "1111110110011010", 220 => "1110011000101011", 221 => "0000010111000101", 
    222 => "0000000010010110", 223 => "0000011000001101", 224 => "1101111010100000", 
    225 => "1111111000111011", 226 => "0000001010100111", 227 => "0000110010000000", 
    228 => "0000001010000110", 229 => "1111111101011101", 230 => "0000010100011110", 
    231 => "1111111111001101", 232 => "1111010001100011", 233 => "0000000100001101", 
    234 => "0100000110101011", 235 => "0000000001011010", 236 => "1111111110101010", 
    237 => "0000000000011010", 238 => "1111110010110001", 239 => "0000000000010110", 
    240 => "1111111110101010", 241 => "1111101000101110", 242 => "0000000111101000", 
    243 => "1111111001000101", 244 => "1111100100000000", 245 => "0000001011111011", 
    246 => "1111110010100000", 247 => "0000001101110000", 248 => "0111000000000001", 
    249 => "0100000111101010", 250 => "0000101111010000", 251 => "0000000010110000", 
    252 => "0001100001011101", 253 => "0000001110100100", 254 => "1111111110010000", 
    255 => "1111110111010000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActxdS_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


