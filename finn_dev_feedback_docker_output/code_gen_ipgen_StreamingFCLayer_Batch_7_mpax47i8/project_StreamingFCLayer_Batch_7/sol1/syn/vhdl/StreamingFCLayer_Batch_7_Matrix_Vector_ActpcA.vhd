-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111000011000", 1 => "0000000001010110", 2 => "0001011000111011", 
    3 => "1111110111101010", 4 => "0010110010000100", 5 => "1111100101000001", 
    6 => "0000010111100001", 7 => "1111011111111110", 8 => "1111010111100011", 
    9 => "0000001011111110", 10 => "0000000001110001", 11 => "1111111010101110", 
    12 => "1111101011011110", 13 => "0000011010110010", 14 => "1111101001011111", 
    15 => "1111111101100000", 16 => "1111110110110011", 17 => "1111111010111011", 
    18 => "0000001001010001", 19 => "1111101000111101", 20 => "1111110010000110", 
    21 => "1111101111100010", 22 => "1111100101110101", 23 => "1111101011111110", 
    24 => "0000010101110011", 25 => "1111111111101000", 26 => "1111110010001010", 
    27 => "0000000000000100", 28 => "1111111011111100", 29 => "1111111110011110", 
    30 => "0000000101100110", 31 => "1011111011100010", 32 => "0000000100010000", 
    33 => "1111111001100011", 34 => "1111111000111001", 35 => "1111111001110010", 
    36 => "0000000101011010", 37 => "0000100101010101", 38 => "0000010000000011", 
    39 => "1111110001101101", 40 => "0000001000111111", 41 => "1111011100110000", 
    42 => "1111011011100001", 43 => "0000001111100011", 44 => "1111110010010100", 
    45 => "1111101110001000", 46 => "1111101110100000", 47 => "1011101111111011", 
    48 => "0000001000100000", 49 => "0000011011111000", 50 => "0000001100011001", 
    51 => "0000000101101101", 52 => "0000001001011000", 53 => "1111101111111111", 
    54 => "1111100011011001", 55 => "0000011101000001", 56 => "0000000100101011", 
    57 => "1111111111000000", 58 => "1100011101001000", 59 => "0000000111101111", 
    60 => "1111100110011110", 61 => "0110111110100111", 62 => "0000001101110111", 
    63 => "0000001001110110", 64 => "1111110011001110", 65 => "1111101110010011", 
    66 => "1111111101001011", 67 => "0000000111011101", 68 => "1110111001101011", 
    69 => "1111111000101101", 70 => "1111110111001110", 71 => "0000011101010111", 
    72 => "0000000001001011", 73 => "0000001100111011", 74 => "1110101000101010", 
    75 => "1111011100011100", 76 => "0000000110101000", 77 => "1110101100111110", 
    78 => "1111111111111111", 79 => "0110101110101000", 80 => "0001000010001101", 
    81 => "0000010000100111", 82 => "1110111000101010", 83 => "1111111000000001", 
    84 => "1111111111001001", 85 => "0000101000010000", 86 => "1111110011111111", 
    87 => "0000001110110001", 88 => "0001010000001011", 89 => "0000001010100000", 
    90 => "0000010011000100", 91 => "0000001011110110", 92 => "1111110111110001", 
    93 => "0000100001011111", 94 => "0000010000001011", 95 => "0000100110111010", 
    96 => "1111111110000111", 97 => "1111111111111001", 98 => "1001111101100011", 
    99 => "0000001101101011", 100 => "1111100101100011", 101 => "1111111100001111", 
    102 => "1110100011110111", 103 => "1111111010110000", 104 => "1101010100111011", 
    105 => "1111111111011101", 106 => "1111110100010000", 107 => "1111010110000010", 
    108 => "0000100001101001", 109 => "0000001001011101", 110 => "0000000000000111", 
    111 => "0000010001110100", 112 => "0000011101001100", 113 => "1111110001111110", 
    114 => "1111100101101100", 115 => "1111101000100011", 116 => "0000000100111111", 
    117 => "1111010110011000", 118 => "1111100110110101", 119 => "1111101111001001", 
    120 => "1111111101000010", 121 => "0000000111011011", 122 => "1111011001011100", 
    123 => "0000100011011001", 124 => "0000000101001001", 125 => "0000001101000011", 
    126 => "0000000001100100", 127 => "0000001001010111", 128 => "0000001010100110", 
    129 => "0000011100100011", 130 => "0000000111000101", 131 => "1111011011100100", 
    132 => "0000001011000101", 133 => "0000110000001110", 134 => "0000010110100100", 
    135 => "0000000010000000", 136 => "1111110011000101", 137 => "1111110011110000", 
    138 => "0000000100101011", 139 => "0000000110000010", 140 => "0000010010001001", 
    141 => "0000100011100010", 142 => "0001000010001011", 143 => "0000000110001001", 
    144 => "0000000000101010", 145 => "0000001001111010", 146 => "1111011111000101", 
    147 => "1111110101010101", 148 => "0000000001110000", 149 => "1111100101011001", 
    150 => "1111111000011100", 151 => "0000100000110110", 152 => "1110101000000011", 
    153 => "0000001000011101", 154 => "0000000001000111", 155 => "0000001010110101", 
    156 => "1111110111111111", 157 => "0000100000111000", 158 => "1111100100100110", 
    159 => "1111111001111011", 160 => "0000010101000100", 161 => "0000001000000001", 
    162 => "1111110010111000", 163 => "0000101110000110", 164 => "0000001110010101", 
    165 => "0000000111010000", 166 => "0000000111110110", 167 => "0000000001000001", 
    168 => "1111111011101001", 169 => "1111111101111110", 170 => "0000001010000101", 
    171 => "1111101010111001", 172 => "1111011011101110", 173 => "1111111110100010", 
    174 => "0000001011111100", 175 => "0000001100001110", 176 => "0000011000010101", 
    177 => "0000010001000010", 178 => "1111111101001000", 179 => "1110011011000100", 
    180 => "0000000100110100", 181 => "0000110111011111", 182 => "0000000001000101", 
    183 => "0000001011001110", 184 => "1111111100011101", 185 => "1111111111111110", 
    186 => "0000000000001110", 187 => "0000011011000101", 188 => "1110100000110101", 
    189 => "0000001010100100", 190 => "1111110000001011", 191 => "0001010011110000", 
    192 => "1111111000110001", 193 => "1110111100110101", 194 => "1111111000001110", 
    195 => "1110111000110011", 196 => "1111110101101011", 197 => "1111110101001001", 
    198 => "1111011111101110", 199 => "1111110010111010", 200 => "1111111110011000", 
    201 => "0001111000000000", 202 => "1111010100110000", 203 => "1111101000110011", 
    204 => "0000000011110011", 205 => "1111111110100011", 206 => "0000011000101111", 
    207 => "1111101001000111", 208 => "0000000000011101", 209 => "1111110100001100", 
    210 => "1111111101001000", 211 => "0000010000111110", 212 => "0000010010011100", 
    213 => "0000011001000000", 214 => "0000001000111011", 215 => "1111110100001011", 
    216 => "0000010010000000", 217 => "1111111110100101", 218 => "0000010101011101", 
    219 => "1111110100000110", 220 => "1101111111000010", 221 => "0000010101000100", 
    222 => "0000000001000001", 223 => "0000010101111010", 224 => "1101100110000101", 
    225 => "1111110111011110", 226 => "0000001001010010", 227 => "0000101100010010", 
    228 => "0000001000001101", 229 => "1111111010101100", 230 => "0000010010111110", 
    231 => "1111111011111110", 232 => "1111001111001111", 233 => "0000000010011110", 
    234 => "0011010011100100", 235 => "1111111111100010", 236 => "1111111100110110", 
    237 => "1111111110111111", 238 => "1111110000100111", 239 => "1111111110010100", 
    240 => "1111111100110100", 241 => "1111100110110100", 242 => "0000000101000001", 
    243 => "1111110101100110", 244 => "1111100010101000", 245 => "0000001001110100", 
    246 => "1111110000011010", 247 => "0000001100000011", 248 => "0111000000000001", 
    249 => "0010100111111010", 250 => "0000100110111101", 251 => "0000000001010110", 
    252 => "0001001011001100", 253 => "0000001100010110", 254 => "1111111100111011", 
    255 => "1111110101110010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActpcA_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


