-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110110010100100", 1 => "1111110000001100", 2 => "1111111010101011", 
    3 => "1110111101111100", 4 => "0000000000111101", 5 => "1111111101101111", 
    6 => "1111110000100110", 7 => "1111110100001010", 8 => "1111110000111000", 
    9 => "1111101110101110", 10 => "1111111001111100", 11 => "0000100010010000", 
    12 => "1111110010110110", 13 => "1111101100100011", 14 => "0000010011011001", 
    15 => "1111101110100001", 16 => "0000010000010111", 17 => "0000110110001011", 
    18 => "0001101001111010", 19 => "1111101010001010", 20 => "0000111111011001", 
    21 => "0000100111100111", 22 => "1110001011001000", 23 => "1111101001010110", 
    24 => "1111111111111010", 25 => "0000001001010100", 26 => "1111110010101011", 
    27 => "1010111110011101", 28 => "1111111000001101", 29 => "0000000100101001", 
    30 => "0000010010011110", 31 => "1111101011011100", 32 => "1111110011010001", 
    33 => "0000001000011010", 34 => "0000011010000111", 35 => "1111110010001011", 
    36 => "0000010001100000", 37 => "1111100111110101", 38 => "1111111101111101", 
    39 => "0000001011000011", 40 => "1101110010111000", 41 => "0111000000000001", 
    42 => "0000000010100111", 43 => "1100100011000010", 44 => "1110111111001110", 
    45 => "1111110011000111", 46 => "0001010100000110", 47 => "1111101000011011", 
    48 => "1111100000011101", 49 => "0000001010010111", 50 => "0000010101001010", 
    51 => "1111110111101110", 52 => "0000000101100000", 53 => "1110110111100110", 
    54 => "0000000110100000", 55 => "0000101111110101", 56 => "1111011110000000", 
    57 => "1111111111000111", 58 => "1111001101010110", 59 => "1111110111101111", 
    60 => "1111111010100110", 61 => "1111101101011001", 62 => "1111110101000001", 
    63 => "1111110101011101", 64 => "1111111101011011", 65 => "0000000011101100", 
    66 => "0000000111010100", 67 => "1111101101110001", 68 => "0000001001110101", 
    69 => "1111010110010100", 70 => "0000001010111111", 71 => "0000010000111011", 
    72 => "0000000001000101", 73 => "1101111111101001", 74 => "1111100011110010", 
    75 => "0000000010010100", 76 => "0001110101011101", 77 => "0000000010000000", 
    78 => "0000011100000001", 79 => "1111010111000010", 80 => "1111100011101100", 
    81 => "0000011001101011", 82 => "0000010001001111", 83 => "1111101111101110", 
    84 => "0000001101001111", 85 => "1111011011101011", 86 => "0000010000111100", 
    87 => "1111011111101111", 88 => "0000001111011111", 89 => "1111010111001110", 
    90 => "0000000001100100", 91 => "0000000011000011", 92 => "1111010011110001", 
    93 => "0000101011001100", 94 => "0000010100100110", 95 => "0000010101101101", 
    96 => "0010010000010001", 97 => "1111010010100001", 98 => "0000000110101001", 
    99 => "0000000011110111", 100 => "0000011000110110", 101 => "0000011111101100", 
    102 => "1111111100000010", 103 => "1111111101100011", 104 => "1111101110100111", 
    105 => "0001001011010000", 106 => "0000000000001101", 107 => "1111110010101100", 
    108 => "0000010011010111", 109 => "1111110100111010", 110 => "0000010100101000", 
    111 => "1111110000011101", 112 => "1111111110011001", 113 => "1111110010000101", 
    114 => "1111111000100000", 115 => "0000011111101011", 116 => "1111100111110011", 
    117 => "1111111000111001", 118 => "1111111111110110", 119 => "0000100000101101", 
    120 => "0000010011000110", 121 => "0000000001111001", 122 => "1111100001001001", 
    123 => "0000001010011011", 124 => "0000010000001000", 125 => "0000011011101000", 
    126 => "0001010010110101", 127 => "1111110000010110", 128 => "1111000000110011", 
    129 => "1111111011100001", 130 => "0000000001000100", 131 => "0000000010101001", 
    132 => "1111110011111000", 133 => "1111101100111011", 134 => "0000010100100000", 
    135 => "1111111000111100", 136 => "1111111001011000", 137 => "0000010000011000", 
    138 => "0000001010100011", 139 => "0000001100000010", 140 => "1111111101001111", 
    141 => "1111001111110111", 142 => "1111100000000000", 143 => "1111011010000111", 
    144 => "0000001110110100", 145 => "1111110101110100", 146 => "1110110000010000", 
    147 => "1111110001100010", 148 => "1111100100101110", 149 => "1111010010101001", 
    150 => "1111110000110100", 151 => "1101000111101101", 152 => "0000000101011111", 
    153 => "1111011010010100", 154 => "1111111001000001", 155 => "0000110010011111", 
    156 => "1111110110010000", 157 => "1111101101100100", 158 => "0000000001010010", 
    159 => "1111110101001111", 160 => "1111111110110011", 161 => "1111101110001000", 
    162 => "0000000111110000", 163 => "1111111110111100", 164 => "1111111111001101", 
    165 => "1111111011111001", 166 => "1100011001100100", 167 => "1111110011100011", 
    168 => "0000000000101111", 169 => "1111111010110101", 170 => "0000010100100000", 
    171 => "0000000010010110", 172 => "0001010001001100", 173 => "0000000111100101", 
    174 => "1111111111011101", 175 => "0000000010100011", 176 => "0000001110110000", 
    177 => "0000001001110010", 178 => "1111111100000001", 179 => "0000000110010101", 
    180 => "1111101110111100", 181 => "0000000110010110", 182 => "1111000100110001", 
    183 => "0000011011000011", 184 => "1111111110101110", 185 => "1111101001110100", 
    186 => "1111111111000011", 187 => "0001011001000100", 188 => "1111111101100000", 
    189 => "0001011110101010", 190 => "0000001100010110", 191 => "0000011010001100", 
    192 => "1111110110110001", 193 => "0001100100101010", 194 => "0000000001110010", 
    195 => "0000100000111001", 196 => "0000000000100101", 197 => "1111111101101000", 
    198 => "1111111001000110", 199 => "0000000001111100", 200 => "1111110101110000", 
    201 => "0110000110011101", 202 => "0000000101011011", 203 => "1111101001100010", 
    204 => "0000001000011111", 205 => "0000000010101110", 206 => "1111100000011001", 
    207 => "1111001011001100", 208 => "1111111110001100", 209 => "1111111001001100", 
    210 => "0000001011011000", 211 => "1111110110110011", 212 => "1111111000010110", 
    213 => "1111110000011101", 214 => "0000001001000010", 215 => "1111101111011011", 
    216 => "1111101100000000", 217 => "0000001010110101", 218 => "0000000101101101", 
    219 => "0000001011111001", 220 => "1111111101100010", 221 => "1111100000011001", 
    222 => "0000000100101111", 223 => "1111111000001101", 224 => "1111111111001111", 
    225 => "1111110110011010", 226 => "0001000000010000", 227 => "1111110100001111", 
    228 => "1010111010100101", 229 => "1111110001011000", 230 => "1111100011111111", 
    231 => "0000001001010101", 232 => "0000111101011011", 233 => "0000011010010000", 
    234 => "1111011000000110", 235 => "0000001010010100", 236 => "0000000100011010", 
    237 => "0111000000000001", 238 => "1111110011000111", 239 => "1111110100111101", 
    240 => "1111111010001011", 241 => "1110101000001011", 242 => "0000110010111000", 
    243 => "0000010100111100", 244 => "1111110111001100", 245 => "1111111001010001", 
    246 => "1111111111111000", 247 => "1111101101100101", 248 => "1111100100010111", 
    249 => "1111111010010101", 250 => "0001110010011111", 251 => "1111100110111000", 
    252 => "0000000100111000", 253 => "1111110001001010", 254 => "0000010100110111", 
    255 => "0000101000011000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActjbC_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


