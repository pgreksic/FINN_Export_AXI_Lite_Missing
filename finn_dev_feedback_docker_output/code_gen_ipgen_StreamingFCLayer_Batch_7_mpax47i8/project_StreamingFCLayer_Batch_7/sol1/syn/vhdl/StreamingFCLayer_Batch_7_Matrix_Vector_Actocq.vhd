-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actocq_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Actocq_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110111000011111", 1 => "1111110001001011", 2 => "1111111100001001", 
    3 => "1111001000101111", 4 => "0000000010100110", 5 => "1111111110100100", 
    6 => "1111110001111111", 7 => "1111110101010100", 8 => "1111110010100101", 
    9 => "1111101111011110", 10 => "1111111011000011", 11 => "0000100011000111", 
    12 => "1111110011110100", 13 => "1111101101011101", 14 => "0000010101010010", 
    15 => "1111101111011011", 16 => "0000010001100000", 17 => "0001000000010010", 
    18 => "0001110000011011", 19 => "1111101011011110", 20 => "0001000110111001", 
    21 => "0000101000101111", 22 => "1110010010100000", 23 => "1111101010100001", 
    24 => "0000000001100011", 25 => "0000001010100101", 26 => "1111110101010000", 
    27 => "1011100101011111", 28 => "1111111001001000", 29 => "0000000101101011", 
    30 => "0000010011110001", 31 => "1111101100110100", 32 => "1111110100101010", 
    33 => "0000001001101110", 34 => "0000011110010000", 35 => "1111110011011101", 
    36 => "0000010010010111", 37 => "1111101000110111", 38 => "1111111111011001", 
    39 => "0000001100100010", 40 => "1110011101110011", 41 => "0111000000000001", 
    42 => "0000000011101011", 43 => "1100111111110011", 44 => "1111000101100010", 
    45 => "1111110100000110", 46 => "0001011001001111", 47 => "1111101001110111", 
    48 => "1111100001101011", 49 => "0000001011010011", 50 => "0000010110010111", 
    51 => "1111111000101011", 52 => "0000000110110001", 53 => "1110111010101001", 
    54 => "0000000111001110", 55 => "0000110110110010", 56 => "1111011111000110", 
    57 => "0000000000010000", 58 => "1111010011101101", 59 => "1111111000100011", 
    60 => "1111111011011100", 61 => "1111101110011001", 62 => "1111110110011000", 
    63 => "1111110110011011", 64 => "1111111110110100", 65 => "0000000100101100", 
    66 => "0000001000011100", 67 => "1111101110101011", 68 => "0000001011100110", 
    69 => "1111010111100100", 70 => "0000001100010001", 71 => "0000010010000001", 
    72 => "0000000010001100", 73 => "1110001101100000", 74 => "1111100100110001", 
    75 => "0000000011010000", 76 => "0010000001100001", 77 => "0000000011101100", 
    78 => "0000011101000101", 79 => "1111011100010110", 80 => "1111100101001000", 
    81 => "0000011011001100", 82 => "0000010010001110", 83 => "1111110000101100", 
    84 => "0000001110101101", 85 => "1111011100110101", 86 => "0000010010010111", 
    87 => "1111100000111110", 88 => "0000010000111111", 89 => "1111011000011100", 
    90 => "0000000010101001", 91 => "0000000011111100", 92 => "1111010110111000", 
    93 => "0000101101110000", 94 => "0000010101110110", 95 => "0000010110101010", 
    96 => "0010011110101110", 97 => "1111011001010101", 98 => "0000001000000100", 
    99 => "0000000101001110", 100 => "0000011001101010", 101 => "0000100000100010", 
    102 => "1111111101100011", 103 => "1111111110101001", 104 => "1111110000010111", 
    105 => "0001001110011011", 106 => "0000000001110001", 107 => "1111110011100000", 
    108 => "0000010100010101", 109 => "1111110110101001", 110 => "0000010101111110", 
    111 => "1111110001001111", 112 => "1111111111100101", 113 => "1111110011111010", 
    114 => "1111111001101011", 115 => "0000100000101110", 116 => "1111101000110001", 
    117 => "1111111001110101", 118 => "0000000000010111", 119 => "0000100011100110", 
    120 => "0000010100101111", 121 => "0000000010111001", 122 => "1111100100011011", 
    123 => "0000001011010011", 124 => "0000010010000100", 125 => "0000011101000110", 
    126 => "0001011000100001", 127 => "1111110001100011", 128 => "1111000100010110", 
    129 => "1111111100100100", 130 => "0000000010000000", 131 => "0000000100011011", 
    132 => "1111110101001100", 133 => "1111101110001111", 134 => "0000010100111111", 
    135 => "1111111010001110", 136 => "1111111010110101", 137 => "0000010001011111", 
    138 => "0000001011110101", 139 => "0000001101001110", 140 => "1111111111001000", 
    141 => "1111010110010000", 142 => "1111100111000011", 143 => "1111011011011011", 
    144 => "0000001111110011", 145 => "1111110110101101", 146 => "1110110110101001", 
    147 => "1111110010101010", 148 => "1111100101110111", 149 => "1111010110110010", 
    150 => "1111110001110001", 151 => "1101100001001100", 152 => "0000000110011111", 
    153 => "1111011011010001", 154 => "1111111010011010", 155 => "0000110110101000", 
    156 => "1111110111101011", 157 => "1111101110101000", 158 => "0000000010010101", 
    159 => "1111110110111001", 160 => "0000000000000011", 161 => "1111101111010010", 
    162 => "0000001000110001", 163 => "0000000000001101", 164 => "0000000000000111", 
    165 => "1111111101001010", 166 => "1100110101100110", 167 => "1111110100111001", 
    168 => "0000000001111011", 169 => "1111111011111010", 170 => "0000010101011100", 
    171 => "0000000011001001", 172 => "0001011010010100", 173 => "0000001001010000", 
    174 => "0000000110011100", 175 => "0000000011010001", 176 => "0000001111100010", 
    177 => "0000001011100010", 178 => "1111111101101111", 179 => "0000000111101101", 
    180 => "1111110000011111", 181 => "0000001000000100", 182 => "1111001100101101", 
    183 => "0000100101110101", 184 => "0000000000010111", 185 => "1111101100011011", 
    186 => "0000000000100010", 187 => "0001011101001000", 188 => "1111111111011010", 
    189 => "0001100100111101", 190 => "0000001101111011", 191 => "0000011011000101", 
    192 => "1111110111110110", 193 => "0001111000100100", 194 => "0000000010101010", 
    195 => "0000100010001000", 196 => "0000000001111111", 197 => "1111111110010101", 
    198 => "1111111010010001", 199 => "0000000011001000", 200 => "1111110110101100", 
    201 => "0110111110011100", 202 => "0000000110100101", 203 => "1111101011000101", 
    204 => "0000001001011100", 205 => "0000000011101111", 206 => "1111100001011010", 
    207 => "1111001100101101", 208 => "1111111111100100", 209 => "1111111010101000", 
    210 => "0000001100011010", 211 => "1111110111111101", 212 => "1111111001011011", 
    213 => "1111110010000001", 214 => "0000001001111110", 215 => "1111110000110010", 
    216 => "1111101101010011", 217 => "0000001100010111", 218 => "0000000110101010", 
    219 => "0000001100111011", 220 => "1111111110011111", 221 => "1111100001110101", 
    222 => "0000000101110000", 223 => "1111111001000100", 224 => "0000000000010101", 
    225 => "1111110111000100", 226 => "0001000100001100", 227 => "1111110110011110", 
    228 => "1011011111010100", 229 => "1111110010101111", 230 => "1111100101000111", 
    231 => "0000001010110101", 232 => "0001000010100010", 233 => "0000011011100011", 
    234 => "1111011101010100", 235 => "0000001011110011", 236 => "0000000101100001", 
    237 => "0111000000000001", 238 => "1111110100100101", 239 => "1111110110001000", 
    240 => "1111111011001000", 241 => "1110101110010101", 242 => "0000110111011101", 
    243 => "0000010110001000", 244 => "1111111000000110", 245 => "1111111001111101", 
    246 => "0000000001001111", 247 => "1111101110011100", 248 => "1111100101110001", 
    249 => "1111111011101100", 250 => "0001111010011111", 251 => "1111101000000110", 
    252 => "0000000110101000", 253 => "1111110010100100", 254 => "0000010110000101", 
    255 => "0000101001100100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actocq is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Actocq is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Actocq_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Actocq_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Actocq_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


