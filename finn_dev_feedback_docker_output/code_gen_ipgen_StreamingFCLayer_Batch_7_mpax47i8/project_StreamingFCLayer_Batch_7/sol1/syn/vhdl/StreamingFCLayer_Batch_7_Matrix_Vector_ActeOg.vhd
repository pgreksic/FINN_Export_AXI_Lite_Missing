-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110101100101001", 1 => "1111101111001101", 2 => "1111111001001110", 
    3 => "1110110011001010", 4 => "1111111111010011", 5 => "1111111100111010", 
    6 => "1111101111001101", 7 => "1111110010111111", 8 => "1111101111001011", 
    9 => "1111101101111111", 10 => "1111111000110101", 11 => "0000100001011010", 
    12 => "1111110001110111", 13 => "1111101011101010", 14 => "0000010001100000", 
    15 => "1111101101100111", 16 => "0000001111001111", 17 => "0000101100000101", 
    18 => "0001100011011010", 19 => "1111101000110111", 20 => "0000110111111001", 
    21 => "0000100110011111", 22 => "1110000011110000", 23 => "1111101000001011", 
    24 => "1111111110010001", 25 => "0000001000000010", 26 => "1111110000000101", 
    27 => "1010010111011011", 28 => "1111110111010010", 29 => "0000000011100111", 
    30 => "0000010001001011", 31 => "1111101010000100", 32 => "1111110001111000", 
    33 => "0000000111000101", 34 => "0000010101111101", 35 => "1111110000111010", 
    36 => "0000010000101001", 37 => "1111100110110100", 38 => "1111111100100001", 
    39 => "0000001001100011", 40 => "1101000111111100", 41 => "0111000000000001", 
    42 => "0000000001100100", 43 => "1100000110010001", 44 => "1110111000111001", 
    45 => "1111110010001000", 46 => "0001001110111101", 47 => "1111100110111110", 
    48 => "1111011111010000", 49 => "0000001001011011", 50 => "0000010011111101", 
    51 => "1111110110110010", 52 => "0000000100010000", 53 => "1110110100100100", 
    54 => "0000000101110011", 55 => "0000101000111000", 56 => "1111011100111001", 
    57 => "1111111101111111", 58 => "1111000111000000", 59 => "1111110110111011", 
    60 => "1111111001110000", 61 => "1111101100011001", 62 => "1111110011101011", 
    63 => "1111110100011111", 64 => "1111111100000010", 65 => "0000000010101011", 
    66 => "0000000110001100", 67 => "1111101100111000", 68 => "0000001000000101", 
    69 => "1111010101000100", 70 => "0000001001101101", 71 => "0000001111110101", 
    72 => "1111111111111111", 73 => "1101110001110010", 74 => "1111100010110011", 
    75 => "0000000001011000", 76 => "0001101001011001", 77 => "0000000000010011", 
    78 => "0000011010111101", 79 => "1111010001101111", 80 => "1111100010001111", 
    81 => "0000011000001011", 82 => "0000010000001111", 83 => "1111101110110000", 
    84 => "0000001011110001", 85 => "1111011010100001", 86 => "0000001111100000", 
    87 => "1111011110100000", 88 => "0000001101111111", 89 => "1111010110000000", 
    90 => "0000000000011111", 91 => "0000000010001011", 92 => "1111010000101001", 
    93 => "0000101000100111", 94 => "0000010011010110", 95 => "0000010100110000", 
    96 => "0010000001110101", 97 => "1111001011101110", 98 => "0000000101001111", 
    99 => "0000000010011111", 100 => "0000011000000010", 101 => "0000011110110110", 
    102 => "1111111010100010", 103 => "1111111100011101", 104 => "1111101100110111", 
    105 => "0001001000000100", 106 => "1111111110101001", 107 => "1111110001110111", 
    108 => "0000010010011001", 109 => "1111110011001100", 110 => "0000010011010010", 
    111 => "1111101111101011", 112 => "1111111101001101", 113 => "1111110000001111", 
    114 => "1111110111010101", 115 => "0000011110101001", 116 => "1111100110110110", 
    117 => "1111110111111101", 118 => "1111111111010100", 119 => "0000011101110100", 
    120 => "0000010001011110", 121 => "0000000000111001", 122 => "1111011101111000", 
    123 => "0000001001100011", 124 => "0000001110001100", 125 => "0000011010001011", 
    126 => "0001001101001001", 127 => "1111101111001010", 128 => "1110111101010000", 
    129 => "1111111010011110", 130 => "0000000000000111", 131 => "0000000000110111", 
    132 => "1111110010100011", 133 => "1111101011100111", 134 => "0000010100000001", 
    135 => "1111110111101010", 136 => "1111110111111100", 137 => "0000001111010000", 
    138 => "0000001001010000", 139 => "0000001010110110", 140 => "1111111011010110", 
    141 => "1111001001011110", 142 => "1111011000111110", 143 => "1111011000110100", 
    144 => "0000001101110100", 145 => "1111110100111011", 146 => "1110101001110111", 
    147 => "1111110000011010", 148 => "1111100011100100", 149 => "1111001110100000", 
    150 => "1111101111110111", 151 => "1100101110001110", 152 => "0000000100011110", 
    153 => "1111011001010110", 154 => "1111110111101000", 155 => "0000101110010110", 
    156 => "1111110100110101", 157 => "1111101100011111", 158 => "0000000000001111", 
    159 => "1111110011100100", 160 => "1111111101100011", 161 => "1111101100111111", 
    162 => "0000000110101110", 163 => "1111111101101010", 164 => "1111111110010100", 
    165 => "1111111010101000", 166 => "1011111101100001", 167 => "1111110010001101", 
    168 => "1111111111100100", 169 => "1111111001110001", 170 => "0000010011100100", 
    171 => "0000000001100011", 172 => "0001001000000100", 173 => "0000000101111010", 
    174 => "1111111000011110", 175 => "0000000001110110", 176 => "0000001101111110", 
    177 => "0000001000000011", 178 => "1111111010010011", 179 => "0000000100111101", 
    180 => "1111101101011000", 181 => "0000000100101001", 182 => "1110111100110101", 
    183 => "0000010000010000", 184 => "1111111101000101", 185 => "1111100111001101", 
    186 => "1111111101100011", 187 => "0001010101000000", 188 => "1111111011100110", 
    189 => "0001011000011000", 190 => "0000001010110000", 191 => "0000011001010010", 
    192 => "1111110101101101", 193 => "0001010000110001", 194 => "0000000000111011", 
    195 => "0000011111101010", 196 => "1111111111001011", 197 => "1111111100111010", 
    198 => "1111110111111011", 199 => "0000000000110000", 200 => "1111110100110011", 
    201 => "0101001110011110", 202 => "0000000100010010", 203 => "1111100111111111", 
    204 => "0000000111100001", 205 => "0000000001101101", 206 => "1111011111011000", 
    207 => "1111001001101011", 208 => "1111111100110100", 209 => "1111110111101111", 
    210 => "0000001010010110", 211 => "1111110101101001", 212 => "1111110111010001", 
    213 => "1111101110111000", 214 => "0000001000000110", 215 => "1111101110000011", 
    216 => "1111101010101100", 217 => "0000001001010100", 218 => "0000000100110001", 
    219 => "0000001010111000", 220 => "1111111100100101", 221 => "1111011110111101", 
    222 => "0000000011101110", 223 => "1111110111010111", 224 => "1111111110001001", 
    225 => "1111110101110000", 226 => "0000111100010011", 227 => "1111110001111111", 
    228 => "1010010101110110", 229 => "1111110000000001", 230 => "1111100010110111", 
    231 => "0000000111110100", 232 => "0000111000010011", 233 => "0000011000111101", 
    234 => "1111010010111000", 235 => "0000001000110100", 236 => "0000000011010011", 
    237 => "0111000000000001", 238 => "1111110001101001", 239 => "1111110011110010", 
    240 => "1111111001001111", 241 => "1110100010000001", 242 => "0000101110010100", 
    243 => "0000010011101111", 244 => "1111110110010010", 245 => "1111111000100101", 
    246 => "1111111110100010", 247 => "1111101100101110", 248 => "1111100010111110", 
    249 => "1111111000111101", 250 => "0001101010100000", 251 => "1111100101101001", 
    252 => "0000000011001001", 253 => "1111101111101111", 254 => "0000010011101001", 
    255 => "0000100111001011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActeOg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


