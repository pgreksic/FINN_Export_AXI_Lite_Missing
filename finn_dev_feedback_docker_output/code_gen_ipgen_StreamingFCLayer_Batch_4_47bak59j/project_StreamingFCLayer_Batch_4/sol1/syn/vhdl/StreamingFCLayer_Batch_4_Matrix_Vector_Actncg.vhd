-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actncg_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Actncg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00000111101010100", 1 => "11110100110011000", 
    2 => "11111101100100101", 3 => "11111111000101111", 
    4 => "11111110010001011", 5 => "11111110101001111", 
    6 => "11111111010110001", 7 => "00001001110010000", 
    8 => "01001010011101000", 9 => "11111111111001100", 
    10 => "11111010110010110", 11 => "00000001111100111", 
    12 => "11110110100101110", 13 => "00000001001011110", 
    14 => "00010101100011001", 15 => "11100011011110010", 
    16 => "11111110111111000", 17 => "11111101110111111", 
    18 => "00000111000110000", 19 => "11111011000101111", 
    20 => "00000000100010101", 21 => "00000000001010110", 
    22 => "11111000010011101", 23 => "11111111001000100", 
    24 => "00000011001000100", 25 => "11110010001111110", 
    26 => "11111011101001000", 27 => "11111110010111010", 
    28 => "11111010110101101", 29 => "11111110011110101", 
    30 => "01111110000000001", 31 => "11111110110011011", 
    32 => "11111110001110001", 33 => "00000000110111111", 
    34 => "11111110000110111", 35 => "00000000000001010", 
    36 => "11111110101100110", 37 => "00000111111111100", 
    38 => "11111110001101000", 39 => "00000010011100101", 
    40 => "00001010000111010", 41 => "00000000000101110", 
    42 => "11111110011100001", 43 => "00000001010001100", 
    44 => "00000001101110110", 45 => "00001010001110001", 
    46 => "00000010110110101", 47 => "11111111110000101", 
    48 => "00000010010100110", 49 => "11111111111001011", 
    50 => "00000001010100101", 51 => "11111010001101011", 
    52 => "00001100000010001", 53 => "11111100111101100", 
    54 => "00000001101000100", 55 => "00000000001010110", 
    56 => "11111110101000101", 57 => "00000010011110010", 
    58 => "00000000110100000", 59 => "11110111111010100", 
    60 => "00000100111011100", 61 => "11110111110001001", 
    62 => "11111111000110101", 63 => "11110011010011011", 
    64 => "11111111001110010", 65 => "11111100011001111", 
    66 => "00000000110101001", 67 => "00000100101111001", 
    68 => "00000101100101111", 69 => "00000000101000000", 
    70 => "00010110001000000", 71 => "11111100010110000", 
    72 => "00000001000110101", 73 => "11111101111000000", 
    74 => "00000010001111000", 75 => "00000001011011111", 
    76 => "00000001000110010", 77 => "11111111101111110", 
    78 => "11111111001100110", 79 => "00000001010101101", 
    80 => "11111111011100110", 81 => "00000000110111010", 
    82 => "00001000101101101", 83 => "11110001101000010", 
    84 => "00110110010101100", 85 => "00000010010000111", 
    86 => "00000001101101101", 87 => "11111101000101011", 
    88 => "00001000101111101", 89 => "00000001111100110", 
    90 => "00000001001110000", 91 => "11111110101100001", 
    92 => "00000010101100100", 93 => "00000000101100000", 
    94 => "00000110010010011", 95 => "00000000101011001", 
    96 => "11111111000000001", 97 => "11111111111001000", 
    98 => "11111111110111110", 99 => "11111111011001100", 
    100 => "00000001101100001", 101 => "00011101010010100", 
    102 => "00000000011100011", 103 => "00000001010011011", 
    104 => "11111100001000001", 105 => "11111110100011110", 
    106 => "11111111001001000", 107 => "11110101100101011", 
    108 => "11111110010000100", 109 => "00000001000100010", 
    110 => "11111111110001010", 111 => "11111100111010111", 
    112 => "11110101101100101", 113 => "00000000000001001", 
    114 => "11111111111111010", 115 => "00000111000011011", 
    116 => "11111100101000011", 117 => "00000001100010100", 
    118 => "00000001000001110", 119 => "00000000011011010", 
    120 => "00000010000110001", 121 => "11111101111111011", 
    122 => "00000000110101100", 123 => "11111110110100110", 
    124 => "00010010101100001", 125 => "11111111100110111", 
    126 => "00001101101000000", 127 => "11110100100010110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actncg is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Actncg is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Actncg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Actncg_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Actncg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


