-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActBew_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActBew_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111001011101", 1 => "00000000110001001", 
    2 => "00001000110110110", 3 => "00000010111000001", 
    4 => "11111011101001010", 5 => "11111110111011110", 
    6 => "00010001000101001", 7 => "00000000101100010", 
    8 => "00000000001011110", 9 => "11110100100100011", 
    10 => "00000000101001011", 11 => "00000100110011110", 
    12 => "00001100000111111", 13 => "11110101111000101", 
    14 => "00000000000001100", 15 => "00000000001100110", 
    16 => "00000011011100001", 17 => "00000001010110000", 
    18 => "11111110101111101", 19 => "11111111111010111", 
    20 => "11111010010011001", 21 => "11111111101011011", 
    22 => "11111110111010110", 23 => "11111111000000111", 
    24 => "00001000111101000", 25 => "00001010011000100", 
    26 => "11111101000000110", 27 => "01111110000000001", 
    28 => "11111111010100001", 29 => "00000001010100011", 
    30 => "00000010110000110", 31 => "00001001011111001", 
    32 => "11111011010110011", 33 => "11110100100111011", 
    34 => "11111110111110111", 35 => "00000001001110110", 
    36 => "00000011000000010", 37 => "00000001011111111", 
    38 => "00100001000101000", 39 => "00000000001100010", 
    40 => "00000011101111101", 41 => "11111010011011000", 
    42 => "11111000110001000", 43 => "00000000000100000", 
    44 => "00000111110011110", 45 => "00000000111111101", 
    46 => "11111101110111010", 47 => "00000111101100111", 
    48 => "11111111100100011", 49 => "00000001110111101", 
    50 => "00110010100010010", 51 => "01111110000000001", 
    52 => "00000000001001000", 53 => "00000111111000001", 
    54 => "11111111001101110", 55 => "00000000010000011", 
    56 => "00001111010100001", 57 => "00001100000100001", 
    58 => "11111101000100101", 59 => "11111111111101110", 
    60 => "11111100110101010", 61 => "11111111011000110", 
    62 => "11111010100110110", 63 => "00000000110100010", 
    64 => "00000101100100010", 65 => "11110110001010111", 
    66 => "00000000110111100", 67 => "11111101001000010", 
    68 => "11111111000000001", 69 => "11111011100101001", 
    70 => "00000000010001010", 71 => "00000000001111011", 
    72 => "00000001111000101", 73 => "00000101011111001", 
    74 => "00000000011011001", 75 => "11111101100111101", 
    76 => "11111110011000011", 77 => "11111111011001101", 
    78 => "00000000010100100", 79 => "11100110111010010", 
    80 => "00000001000111010", 81 => "00000000100011001", 
    82 => "11111111101011100", 83 => "11111101110001101", 
    84 => "00000000000011010", 85 => "11110011001011001", 
    86 => "11110110011101010", 87 => "00000100101001100", 
    88 => "00000100110110000", 89 => "11111110111111000", 
    90 => "11111110010010010", 91 => "00000001011000101", 
    92 => "11111110001011100", 93 => "11111110110010001", 
    94 => "00000111110001010", 95 => "11111110111000111", 
    96 => "11111111110100010", 97 => "00000001000101101", 
    98 => "00000011001101001", 99 => "11111100111100100", 
    100 => "11111001001001011", 101 => "11111111000001010", 
    102 => "11111111100000010", 103 => "00001011110110110", 
    104 => "00000010010010111", 105 => "11111000000110010", 
    106 => "11111110111000111", 107 => "11010000111001111", 
    108 => "00000011010111111", 109 => "11111010001100111", 
    110 => "11111111011010100", 111 => "00000001001110001", 
    112 => "00000000110111000", 113 => "11110010011101101", 
    114 => "00000000001011000", 115 => "00000000100111011", 
    116 => "11111111111011010", 117 => "11111111110111001", 
    118 => "11110011100101001", 119 => "00000000100011100", 
    120 => "11111100100111110", 121 => "00000000011011010", 
    122 => "00001101101100010", 123 => "00001001010100100", 
    124 => "00000000001010110", 125 => "11111111111010000", 
    126 => "11111111101011101", 127 => "11111111000101010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActBew is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActBew is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActBew_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActBew_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActBew_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


