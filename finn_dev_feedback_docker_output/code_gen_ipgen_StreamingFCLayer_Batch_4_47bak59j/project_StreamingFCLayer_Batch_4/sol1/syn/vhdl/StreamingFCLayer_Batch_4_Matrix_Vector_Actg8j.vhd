-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00000111011010101", 1 => "11110100100010100", 
    2 => "11111101010011101", 3 => "11111110111101110", 
    4 => "11111101010001101", 5 => "11111110100100100", 
    6 => "11111111001110001", 7 => "00001001011111111", 
    8 => "00110100100100100", 9 => "11111111101111011", 
    10 => "11111010000001100", 11 => "00000001110001110", 
    12 => "11110110001001111", 13 => "00000001000001101", 
    14 => "00010011000110000", 15 => "11011101011110110", 
    16 => "11111110110110111", 17 => "11111101100110001", 
    18 => "00000110011000111", 19 => "11111010110110001", 
    20 => "00000000010010011", 21 => "11111111110011100", 
    22 => "11110111111100001", 23 => "11111111000001100", 
    24 => "00000010010111000", 25 => "11110000010000010", 
    26 => "11111011001000101", 27 => "11111110000101000", 
    28 => "11111010100101111", 29 => "11111101001100010", 
    30 => "01011100011110111", 31 => "11111110101000100", 
    32 => "11111011001011111", 33 => "00000000110001101", 
    34 => "11111101111001110", 35 => "11111111110001101", 
    36 => "11111110100111000", 37 => "00000111101011101", 
    38 => "11111011110010100", 39 => "00000010010001000", 
    40 => "00000101111001101", 41 => "11111111110111111", 
    42 => "11111110010011011", 43 => "00000001001001011", 
    44 => "00000001011101001", 45 => "00001001101000110", 
    46 => "00000010101110101", 47 => "11111111100111111", 
    48 => "00000010001101111", 49 => "11111111101111000", 
    50 => "00000000100111011", 51 => "11111000110001100", 
    52 => "00001000000101010", 53 => "11111100110101110", 
    54 => "00000001100000011", 55 => "11111111110100110", 
    56 => "11111110011110110", 57 => "00000010010010001", 
    58 => "00000000101101101", 59 => "11110100010111101", 
    60 => "00000011100011011", 61 => "11110110101000010", 
    62 => "11111110111100100", 63 => "11110011000000001", 
    64 => "11111111000110010", 65 => "11111011100101000", 
    66 => "00000000100010101", 67 => "00000100100100011", 
    68 => "00000101010010010", 69 => "00000000100001100", 
    70 => "00010011010010111", 71 => "11110111101011000", 
    72 => "00000001000000101", 73 => "11111101101000111", 
    74 => "00000001001001010", 75 => "00000000111111011", 
    76 => "00000000111110011", 77 => "11111111101000111", 
    78 => "11111110010101011", 79 => "00000001000111100", 
    80 => "11111111001111101", 81 => "00000000101111100", 
    82 => "00000111011011001", 83 => "11101111100010111", 
    84 => "00100101100100011", 85 => "00000010000111110", 
    86 => "00000001100011000", 87 => "11111011101001011", 
    88 => "00001000001000001", 89 => "00000001110110010", 
    90 => "00000001000100011", 91 => "11111110100111001", 
    92 => "00000010100100000", 93 => "00000000100100110", 
    94 => "00000100111100101", 95 => "00000000100000010", 
    96 => "11111110111000101", 97 => "11111111110001101", 
    98 => "11111111101110100", 99 => "11111111001111100", 
    100 => "00000001011101111", 101 => "00010111100111000", 
    102 => "00000000010100110", 103 => "00000001001011111", 
    104 => "11111011101111010", 105 => "11111110011011111", 
    106 => "11111110111101100", 107 => "11110101010101001", 
    108 => "11111110000111001", 109 => "00000000110101110", 
    110 => "11111111101001011", 111 => "11111100101011001", 
    112 => "11101111011001001", 113 => "11111111111010010", 
    114 => "11111111111000110", 115 => "00000110110000110", 
    116 => "11111100011010101", 117 => "00000001010111101", 
    118 => "11111111101110001", 119 => "00000000010000101", 
    120 => "00000001110101110", 121 => "11111101110101110", 
    122 => "00000000101110110", 123 => "11111110101110010", 
    124 => "00010000111100010", 125 => "11111111011010100", 
    126 => "00001001101111010", 127 => "11110011111101000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Actg8j_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


