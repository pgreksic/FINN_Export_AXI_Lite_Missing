-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111010110100", 1 => "0000000100000000", 2 => "0001110100101111", 
    3 => "1111111010010111", 4 => "0011011111110100", 5 => "1111100110111101", 
    6 => "0000011011001101", 7 => "1111100011011001", 8 => "1111100001011110", 
    9 => "0000001110011010", 10 => "0000000100110010", 11 => "1111111110101110", 
    12 => "1111111101010110", 13 => "0000011110101101", 14 => "1111101100001000", 
    15 => "0000000001011101", 16 => "1111111001000000", 17 => "1111111110100111", 
    18 => "0000001110010000", 19 => "1111101011011100", 20 => "1111110100010001", 
    21 => "1111110011100000", 22 => "1111101000101011", 23 => "1111101111000111", 
    24 => "0000011010000100", 25 => "0000000010110100", 26 => "1111110101011100", 
    27 => "0000000010100010", 28 => "1111111111111110", 29 => "0000000001111011", 
    30 => "0000001001011110", 31 => "1100110100110001", 32 => "0000000111001100", 
    33 => "1111111011111110", 34 => "1111111101100011", 35 => "1111111100001101", 
    36 => "0000001000000011", 37 => "0000101100000100", 38 => "0000010010101100", 
    39 => "1111110101011011", 40 => "0000001011100001", 41 => "1111011111011010", 
    42 => "1111011110100101", 43 => "0000010010100011", 44 => "1111110110011010", 
    45 => "1111110001001011", 46 => "1111110010111001", 47 => "1100100010001000", 
    48 => "0000001100001010", 49 => "0000011111101100", 50 => "0000001111001010", 
    51 => "0000001000000101", 52 => "0000001011111001", 53 => "1111110010111101", 
    54 => "1111100110010111", 55 => "0000101101100011", 56 => "0000000110101110", 
    57 => "0000000010011000", 58 => "1101001001000000", 59 => "0000001010011010", 
    60 => "1111101000110000", 61 => "0111000000000001", 62 => "0000010001000101", 
    63 => "0000001101110100", 64 => "1111110110101111", 65 => "1111110000101010", 
    66 => "0000000000000010", 67 => "0000001010110000", 68 => "1111000111101011", 
    69 => "1111111100110000", 70 => "1111111010010011", 71 => "0000100000000110", 
    72 => "0000000101000010", 73 => "0000010001000000", 74 => "1110110101010111", 
    75 => "1111011111101010", 76 => "0000001010011111", 77 => "1110111010111100", 
    78 => "0000000010111110", 79 => "0111000000000001", 80 => "0001010001010101", 
    81 => "0000010011110000", 82 => "1111000111010011", 83 => "1111111010111011", 
    84 => "0000000011011101", 85 => "0000111011010100", 86 => "1111110111000111", 
    87 => "0000010010011110", 88 => "0001100101011011", 89 => "0000001101010000", 
    90 => "0000010110011010", 91 => "0000010000010000", 92 => "1111111010110001", 
    93 => "0000100100010110", 94 => "0000010011011010", 95 => "0000101001110011", 
    96 => "0000000001001011", 97 => "0000000010100101", 98 => "1011001001011000", 
    99 => "0000010000111101", 100 => "1111101000011100", 101 => "1111111111000111", 
    102 => "1111001111011001", 103 => "1111111101111100", 104 => "1110000011011011", 
    105 => "0000000010100111", 106 => "1111110110010010", 107 => "1111011000100010", 
    108 => "0000100100000111", 109 => "0000001100100010", 110 => "0000000010100111", 
    111 => "0000010101001100", 112 => "0000011110000001", 113 => "1111111000100110", 
    114 => "1111101000010000", 115 => "1111101011101110", 116 => "0000000111011100", 
    117 => "1111011110100111", 118 => "1111101010001111", 119 => "1111110011001011", 
    120 => "1111111110111110", 121 => "0000001010000011", 122 => "1111011100010111", 
    123 => "0000100101111010", 124 => "0000001000001111", 125 => "0000010000110001", 
    126 => "0000000100101010", 127 => "0000001011111111", 128 => "0000001101101101", 
    129 => "0000100000000110", 130 => "0000001010101110", 131 => "1111101101100111", 
    132 => "0000001111011011", 133 => "0000111111111100", 134 => "0000011010101100", 
    135 => "0000000100010010", 136 => "1111110110111000", 137 => "1111110110111111", 
    138 => "0000000111101101", 139 => "0000001001110000", 140 => "0000010100100000", 
    141 => "0000100110000101", 142 => "0001001101011000", 143 => "0000001011000111", 
    144 => "0000000100101000", 145 => "0000001100101101", 146 => "1111101010101110", 
    147 => "1111111000011111", 148 => "0000000101101111", 149 => "1111101010101110", 
    150 => "1111111100010111", 151 => "0000100011100011", 152 => "1110110110001101", 
    153 => "0000001110110111", 154 => "0000000011111001", 155 => "0000011100001011", 
    156 => "1111111011010011", 157 => "0000100011001010", 158 => "1111100111010001", 
    159 => "1111111110101101", 160 => "0000010111101010", 161 => "0000001100011000", 
    162 => "1111110101000011", 163 => "0000111001111100", 164 => "0000010100000000", 
    165 => "0000001010101101", 166 => "0000001010100000", 167 => "0000000110000000", 
    168 => "0000000000000001", 169 => "0000000000110010", 170 => "0000001100101100", 
    171 => "1111101110100011", 172 => "1111011110101011", 173 => "0000000000110111", 
    174 => "0000010000000001", 175 => "0000001111001111", 176 => "0000011011001011", 
    177 => "0000010011010001", 178 => "0000000010100010", 179 => "1110111001110010", 
    180 => "0000000111100000", 181 => "0001000011111000", 182 => "0000000100011011", 
    183 => "0000001111001111", 184 => "1111111111010101", 185 => "0000000010010011", 
    186 => "0000000011110001", 187 => "0000011110001101", 188 => "1110111100110111", 
    189 => "0000001101101100", 190 => "1111110011111101", 191 => "0001100100110010", 
    192 => "1111111100010110", 193 => "1111000101100100", 194 => "1111111100001000", 
    195 => "1111001100110001", 196 => "1111111010000010", 197 => "1111111000100011", 
    198 => "1111100011010101", 199 => "1111110101011000", 200 => "0000000001001010", 
    201 => "0010100011110111", 202 => "1111010111000111", 203 => "1111101010110011", 
    204 => "0000000110001110", 205 => "0000000000001000", 206 => "0000100111100001", 
    207 => "1111101011110111", 208 => "0000000011001101", 209 => "1111110111000101", 
    210 => "0000000000000000", 211 => "0000010011111011", 212 => "0000010101000010", 
    213 => "0000011100001011", 214 => "0000001011001100", 215 => "1111110111110001", 
    216 => "0000010100011010", 217 => "0000000001110011", 218 => "0000011000011101", 
    219 => "1111110111110111", 220 => "1110101000101101", 221 => "0000011000010110", 
    222 => "0000000011001011", 223 => "0000011001101001", 224 => "1110000111010000", 
    225 => "1111111001110110", 226 => "0000001011011100", 227 => "0000110101100101", 
    228 => "0000001011010001", 229 => "1111111111001100", 230 => "0000010101011001", 
    231 => "0000000001001110", 232 => "1111010011000000", 233 => "0000000101010011", 
    234 => "0100100110101000", 235 => "0000000010100110", 236 => "1111111111110011", 
    237 => "0000000001010010", 238 => "1111110100000111", 239 => "0000000001101000", 
    240 => "1111111111110101", 241 => "1111101001111011", 242 => "0000001001010000", 
    243 => "1111111011010000", 244 => "1111100100110111", 245 => "0000001101001111", 
    246 => "1111110011110011", 247 => "0000001110110100", 248 => "0111000000000001", 
    249 => "0101000011100000", 250 => "0000110100011011", 251 => "0000000011101001", 
    252 => "0001101111011000", 253 => "0000001111111100", 254 => "1111111111000110", 
    255 => "1111111000001011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActCeG_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


