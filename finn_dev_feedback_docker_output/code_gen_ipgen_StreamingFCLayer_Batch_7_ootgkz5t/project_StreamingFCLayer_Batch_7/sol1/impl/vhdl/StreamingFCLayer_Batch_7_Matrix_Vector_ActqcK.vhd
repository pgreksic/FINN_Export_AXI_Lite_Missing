-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111000100100", 1 => "0000000001100011", 2 => "0001011011000100", 
    3 => "1111110111110111", 4 => "0010110101100101", 5 => "1111100101001010", 
    6 => "0000010111110011", 7 => "1111100000001111", 8 => "1111011000010100", 
    9 => "0000001100001010", 10 => "0000000010000000", 11 => "1111111011000010", 
    12 => "1111101100110110", 13 => "0000011011000110", 14 => "1111101001101100", 
    15 => "1111111101110100", 16 => "1111110110111110", 17 => "1111111011001101", 
    18 => "0000001001101001", 19 => "1111101001001001", 20 => "1111110010010000", 
    21 => "1111101111110110", 22 => "1111100110000011", 23 => "1111101100001110", 
    24 => "0000010110001000", 25 => "1111111111111000", 26 => "1111110010011010", 
    27 => "0000000000010000", 28 => "1111111100010000", 29 => "1111111110101111", 
    30 => "0000000101111001", 31 => "1011111111111100", 32 => "0000000100011111", 
    33 => "1111111001101111", 34 => "1111111001010000", 35 => "1111111001111110", 
    36 => "0000000101100111", 37 => "0000100101110110", 38 => "0000010000010000", 
    39 => "1111110001111111", 40 => "0000001001001100", 41 => "1111011100111101", 
    42 => "1111011011110000", 43 => "0000001111110010", 44 => "1111110010101001", 
    45 => "1111101110010111", 46 => "1111101110110110", 47 => "1011110011110011", 
    48 => "0000001000110010", 49 => "0000011100001010", 50 => "0000001100100111", 
    51 => "0000000101111000", 52 => "0000001001100101", 53 => "1111110000001110", 
    54 => "1111100011101000", 55 => "0000011110010010", 56 => "0000000100110101", 
    57 => "1111111111010001", 58 => "1100100000100000", 59 => "0000000111111100", 
    60 => "1111100110101001", 61 => "0111000000000001", 62 => "0000001110000111", 
    63 => "0000001010001001", 64 => "1111110011011111", 65 => "1111101110011110", 
    66 => "1111111101011001", 67 => "0000000111101101", 68 => "1110111010110000", 
    69 => "1111111001000001", 70 => "1111110111011101", 71 => "0000011101100100", 
    72 => "0000000001011110", 73 => "0000001101001111", 74 => "1110101001101000", 
    75 => "1111011100101100", 76 => "0000000110111011", 77 => "1110101110000010", 
    78 => "0000000000001110", 79 => "0110110101011101", 80 => "0001000011010111", 
    81 => "0000010000110111", 82 => "1110111001110010", 83 => "1111111000001111", 
    84 => "1111111111011110", 85 => "0000101001101101", 86 => "1111110100001111", 
    87 => "0000001111000011", 88 => "0001010001110100", 89 => "0000001010101110", 
    90 => "0000010011010101", 91 => "0000001100001011", 92 => "1111111000000000", 
    93 => "0000100001101101", 94 => "0000010000011010", 95 => "0000100111001000", 
    96 => "1111111110010110", 97 => "0000000000000110", 98 => "1010000011011000", 
    99 => "0000001101111011", 100 => "1111100101110001", 101 => "1111111100011101", 
    102 => "1110100111001110", 103 => "1111111011000000", 104 => "1101011000100000", 
    105 => "1111111111101100", 106 => "1111110100011010", 107 => "1111010110001110", 
    108 => "0000100001110101", 109 => "0000001001101100", 110 => "0000000000010100", 
    111 => "0000010010000100", 112 => "0000011101010000", 113 => "1111110010011111", 
    114 => "1111100101111001", 115 => "1111101000110011", 116 => "0000000101001011", 
    117 => "1111010111000001", 118 => "1111100111000110", 119 => "1111101111011101", 
    120 => "1111111101001100", 121 => "0000000111101000", 122 => "1111011001101010", 
    123 => "0000100011100110", 124 => "0000000101011000", 125 => "0000001101010101", 
    126 => "0000000001110011", 127 => "0000001001100100", 128 => "0000001010110101", 
    129 => "0000011100110101", 130 => "0000000111010111", 131 => "1111011100111101", 
    132 => "0000001011011010", 133 => "0000110001011011", 134 => "0000010110111000", 
    135 => "0000000010001011", 136 => "1111110011011000", 137 => "1111110100000000", 
    138 => "0000000100111010", 139 => "0000000110010100", 140 => "0000010010010101", 
    141 => "0000100011101110", 142 => "0001000011000010", 143 => "0000000110100001", 
    144 => "0000000000111110", 145 => "0000001010001000", 146 => "1111011111111111", 
    147 => "1111110101100100", 148 => "0000000010000100", 149 => "1111100101110100", 
    150 => "1111111000101111", 151 => "0000100001000100", 152 => "1110101001001000", 
    153 => "0000001000111100", 154 => "0000000001010101", 155 => "0000001100001010", 
    156 => "1111111000010000", 157 => "0000100001000011", 158 => "1111100100110011", 
    159 => "1111111010010010", 160 => "0000010101010001", 161 => "0000001000010110", 
    162 => "1111110011000011", 163 => "0000101111000001", 164 => "0000001110110001", 
    165 => "0000000111100001", 166 => "0000001000000011", 167 => "0000000001011010", 
    168 => "1111111011111111", 169 => "1111111110001100", 170 => "0000001010010010", 
    171 => "1111101011001011", 172 => "1111011011111100", 173 => "1111111110101110", 
    174 => "0000001100010000", 175 => "0000001100011101", 176 => "0000011000100011", 
    177 => "0000010001001101", 178 => "1111111101100010", 179 => "1110011101011011", 
    180 => "0000000101000001", 181 => "0000111000011100", 182 => "0000000001010110", 
    183 => "0000001011100010", 184 => "1111111100101011", 185 => "0000000000001001", 
    186 => "0000000000011111", 187 => "0000011011010100", 188 => "1110100010111111", 
    189 => "0000001010110011", 190 => "1111110000011110", 191 => "0001010101000100", 
    192 => "1111111001000011", 193 => "1110111101100000", 194 => "1111111000100001", 
    195 => "1110111010010101", 196 => "1111110110000000", 197 => "1111110101011010", 
    198 => "1111100000000000", 199 => "1111110011000110", 200 => "1111111110100110", 
    201 => "0001111011011000", 202 => "1111010100111011", 203 => "1111101000111101", 
    204 => "0000000011111110", 205 => "1111111110101011", 206 => "0000011001111000", 
    207 => "1111101001010100", 208 => "0000000000101011", 209 => "1111110100011010", 
    210 => "1111111101010110", 211 => "0000010001001101", 212 => "0000010010101001", 
    213 => "0000011001001111", 214 => "0000001001000110", 215 => "1111110100011101", 
    216 => "0000010010001100", 217 => "1111111110110101", 218 => "0000010101101100", 
    219 => "1111110100011001", 220 => "1110000010001111", 221 => "0000010101010100", 
    222 => "0000000001001100", 223 => "0000010110001100", 224 => "1101101000101001", 
    225 => "1111110111101010", 226 => "0000001001011101", 227 => "0000101100111111", 
    228 => "0000001000011100", 229 => "1111111011000010", 230 => "0000010011001010", 
    231 => "1111111100011000", 232 => "1111001111100010", 233 => "0000000010101100", 
    234 => "0011011001111101", 235 => "1111111111110001", 236 => "1111111101000100", 
    237 => "1111111111001011", 238 => "1111110000111000", 239 => "1111111110100100", 
    240 => "1111111101000011", 241 => "1111100111000100", 242 => "0000000101010110", 
    243 => "1111110110000010", 244 => "1111100010110011", 245 => "0000001010000101", 
    246 => "1111110000101011", 247 => "0000001100010001", 248 => "0111000000000001", 
    249 => "0010110011111000", 250 => "0000101000000000", 251 => "0000000001100001", 
    252 => "0001001101111110", 253 => "0000001100101000", 254 => "1111111101000101", 
    255 => "1111110101111110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


