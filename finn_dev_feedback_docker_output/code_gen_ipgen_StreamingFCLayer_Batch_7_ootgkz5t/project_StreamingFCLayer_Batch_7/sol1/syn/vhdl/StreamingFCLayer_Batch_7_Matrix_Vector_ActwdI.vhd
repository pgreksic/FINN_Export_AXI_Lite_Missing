-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111001101100", 1 => "0000000010110010", 2 => "0001100111111010", 
    3 => "1111111001000111", 4 => "0011001010101100", 5 => "1111100110000100", 
    6 => "0000011001100000", 7 => "1111100001110100", 8 => "1111011100111001", 
    9 => "0000001101010010", 10 => "0000000011011001", 11 => "1111111100111000", 
    12 => "1111110101000110", 13 => "0000011100111001", 14 => "1111101010111010", 
    15 => "1111111111101000", 16 => "1111110111111111", 17 => "1111111100111010", 
    18 => "0000001011111101", 19 => "1111101010010010", 20 => "1111110011010001", 
    21 => "1111110001101011", 22 => "1111100111010111", 23 => "1111101101101011", 
    24 => "0000011000000110", 25 => "0000000001010110", 26 => "1111110011111011", 
    27 => "0000000001011001", 28 => "1111111110000111", 29 => "0000000000010101", 
    30 => "0000000111101100", 31 => "1100011010010111", 32 => "0000000101110101", 
    33 => "1111111010110110", 34 => "1111111011011001", 35 => "1111111011000101", 
    36 => "0000000110110101", 37 => "0000101000111101", 38 => "0000010001011110", 
    39 => "1111110011101101", 40 => "0000001010010110", 41 => "1111011110001100", 
    42 => "1111011101001010", 43 => "0000010001001010", 44 => "1111110100100001", 
    45 => "1111101111110001", 46 => "1111110000110111", 47 => "1100001010111101", 
    48 => "0000001010011110", 49 => "0000011101111011", 50 => "0000001101111000", 
    51 => "0000000110111111", 52 => "0000001010101111", 53 => "1111110001100101", 
    54 => "1111100100111111", 55 => "0000100101111011", 56 => "0000000101110010", 
    57 => "0000000000110100", 58 => "1100110100110000", 59 => "0000001001001011", 
    60 => "1111100111101100", 61 => "0111000000000001", 62 => "0000001111100110", 
    63 => "0000001011111111", 64 => "1111110101000111", 65 => "1111101111100100", 
    66 => "1111111110101101", 67 => "0000001001001111", 68 => "1111000001001101", 
    69 => "1111111010111001", 70 => "1111111000111000", 71 => "0000011110110101", 
    72 => "0000000011010000", 73 => "0000001111001000", 74 => "1110101111100000", 
    75 => "1111011110001011", 76 => "0000001000101101", 77 => "1110110100011111", 
    78 => "0000000001100110", 79 => "0111000000000001", 80 => "0001001010010110", 
    81 => "0000010010010011", 82 => "1111000000100011", 83 => "1111111001100101", 
    84 => "0000000001011101", 85 => "0000110010100001", 86 => "1111110101101011", 
    87 => "0000010000110001", 88 => "0001011011100111", 89 => "0000001011111111", 
    90 => "0000010100111000", 91 => "0000001110001110", 92 => "1111111001011000", 
    93 => "0000100011000001", 94 => "0000010001111010", 95 => "0000101000011101", 
    96 => "1111111111110000", 97 => "0000000001010101", 98 => "1010100110011000", 
    99 => "0000001111011100", 100 => "1111100111000111", 101 => "1111111101110010", 
    102 => "1110111011010011", 103 => "1111111100011110", 104 => "1101101101111101", 
    105 => "0000000001001010", 106 => "1111110101010110", 107 => "1111010111011000", 
    108 => "0000100010111110", 109 => "0000001011000111", 110 => "0000000001011101", 
    111 => "0000010011101000", 112 => "0000011101101001", 113 => "1111110101100010", 
    114 => "1111100111000101", 115 => "1111101010010001", 116 => "0000000110010100", 
    117 => "1111011010110100", 118 => "1111101000101010", 119 => "1111110001010100", 
    120 => "1111111110000101", 121 => "0000001000110110", 122 => "1111011011000001", 
    123 => "0000100100110000", 124 => "0000000110110011", 125 => "0000001111000011", 
    126 => "0000000011001110", 127 => "0000001010110010", 128 => "0000001100010001", 
    129 => "0000011110011101", 130 => "0000001001000010", 131 => "1111100101010010", 
    132 => "0000001101011011", 133 => "0000111000101011", 134 => "0000011000110010", 
    135 => "0000000011001111", 136 => "1111110101001000", 137 => "1111110101100000", 
    138 => "0000000110010100", 139 => "0000001000000010", 140 => "0000010011011011", 
    141 => "0000100100111010", 142 => "0001001000001101", 143 => "0000001000110100", 
    144 => "0000000010110011", 145 => "0000001011011010", 146 => "1111100101010110", 
    147 => "1111110111000001", 148 => "0000000011111001", 149 => "1111101000010001", 
    150 => "1111111010100011", 151 => "0000100010010011", 152 => "1110101111101011", 
    153 => "0000001011111010", 154 => "0000000010100111", 155 => "0000010100001011", 
    156 => "1111111001110001", 157 => "0000100010000111", 158 => "1111100110000010", 
    159 => "1111111100100000", 160 => "0000010110011110", 161 => "0000001010010111", 
    162 => "1111110100000011", 163 => "0000110100011110", 164 => "0000010001011001", 
    165 => "0000001001000111", 166 => "0000001001010010", 167 => "0000000011101101", 
    168 => "1111111110000000", 169 => "1111111111011111", 170 => "0000001011011111", 
    171 => "1111101100110111", 172 => "1111011101010100", 173 => "1111111111110010", 
    174 => "0000001110001001", 175 => "0000001101110110", 176 => "0000011001110111", 
    177 => "0000010010001111", 178 => "0000000000000010", 179 => "1110101011100111", 
    180 => "0000000110010001", 181 => "0000111110001010", 182 => "0000000010111000", 
    183 => "0000001101011000", 184 => "1111111110000000", 185 => "0000000001001110", 
    186 => "0000000010001000", 187 => "0000011100110001", 188 => "1110101111111011", 
    189 => "0000001100010000", 190 => "1111110010001110", 191 => "0001011100111011", 
    192 => "1111111010101100", 193 => "1111000001100010", 194 => "1111111010010101", 
    195 => "1111000011100011", 196 => "1111111000000001", 197 => "1111110110111111", 
    198 => "1111100001101011", 199 => "1111110100001111", 200 => "1111111111111000", 
    201 => "0010001111100111", 202 => "1111010110000001", 203 => "1111101001111000", 
    204 => "0000000101000110", 205 => "1111111111011001", 206 => "0000100000101100", 
    207 => "1111101010100110", 208 => "0000000001111100", 209 => "1111110101110000", 
    210 => "1111111110101011", 211 => "0000010010100100", 212 => "0000010011110101", 
    213 => "0000011010101101", 214 => "0000001010001001", 215 => "1111110110000111", 
    216 => "0000010011010011", 217 => "0000000000010100", 218 => "0000010111000100", 
    219 => "1111110110001000", 220 => "1110010101011110", 221 => "0000010110110101", 
    222 => "0000000010001011", 223 => "0000010111111011", 224 => "1101110111111101", 
    225 => "1111111000110000", 226 => "0000001010011100", 227 => "0000110001010010", 
    228 => "0000001001110111", 229 => "1111111101000111", 230 => "0000010100010010", 
    231 => "1111111110110011", 232 => "1111010001010001", 233 => "0000000011111111", 
    234 => "0100000000010010", 235 => "0000000001001011", 236 => "1111111110011100", 
    237 => "0000000000001110", 238 => "1111110010100000", 239 => "0000000000000110", 
    240 => "1111111110011100", 241 => "1111101000011111", 242 => "0000000111010011", 
    243 => "1111111000101001", 244 => "1111100011110101", 245 => "0000001011101010", 
    246 => "1111110010001111", 247 => "0000001101100010", 248 => "0111000000000001", 
    249 => "0011111011101100", 250 => "0000101110001101", 251 => "0000000010100101", 
    252 => "0001011110101011", 253 => "0000001110010010", 254 => "1111111110000101", 
    255 => "1111110111000101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI is
    component StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_ActwdI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


