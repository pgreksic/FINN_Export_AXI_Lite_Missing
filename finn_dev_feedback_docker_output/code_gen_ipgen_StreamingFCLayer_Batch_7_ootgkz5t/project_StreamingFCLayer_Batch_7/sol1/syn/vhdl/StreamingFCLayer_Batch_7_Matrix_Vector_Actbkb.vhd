-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110101001000110", 1 => "1111101110100111", 2 => "1111111000010110", 
    3 => "1110101100101011", 4 => "1111111110010100", 5 => "1111111100011010", 
    6 => "1111101110011000", 7 => "1111110010010011", 8 => "1111101110001001", 
    9 => "1111101101100010", 10 => "1111111000001010", 11 => "0000100000111001", 
    12 => "1111110001010001", 13 => "1111101011000111", 14 => "0000010000010111", 
    15 => "1111101101000011", 16 => "0000001110100011", 17 => "0000100110000001", 
    18 => "0001011111100000", 19 => "1111101000000101", 20 => "0000110011011001", 
    21 => "0000100101110100", 22 => "1101111111010100", 23 => "1111100111011110", 
    24 => "1111111101010010", 25 => "0000000111010001", 26 => "1111101110100010", 
    27 => "1010000000000000", 28 => "1111110110101111", 29 => "0000000011000000", 
    30 => "0000010000011001", 31 => "1111101001001111", 32 => "1111110001000011", 
    33 => "0000000110010011", 34 => "0000010011011110", 35 => "1111110000001010", 
    36 => "0000010000001000", 37 => "1111100110001100", 38 => "1111111011101010", 
    39 => "0000001000101010", 40 => "1100101110001100", 41 => "0111000000000001", 
    42 => "0000000000111011", 43 => "1011110101000001", 44 => "1110110101000110", 
    45 => "1111110001100011", 46 => "0001001011111000", 47 => "1111100110000111", 
    48 => "1111011110100001", 49 => "0000001000110111", 50 => "0000010011001111", 
    51 => "1111110110001110", 52 => "0000000011011111", 53 => "1110110010101111", 
    54 => "0000000101011000", 55 => "0000100100101101", 56 => "1111011100001111", 
    57 => "1111111101010011", 58 => "1111000011001100", 59 => "1111110110011100", 
    60 => "1111111001010000", 61 => "1111101011110011", 62 => "1111110010110111", 
    63 => "1111110011111001", 64 => "1111111011001101", 65 => "0000000010000100", 
    66 => "0000000101100001", 67 => "1111101100010101", 68 => "0000000111000001", 
    69 => "1111010100010101", 70 => "0000001000111011", 71 => "0000001111001100", 
    72 => "1111111111010100", 73 => "1101101001011110", 74 => "1111100010001110", 
    75 => "0000000000110100", 76 => "0001100010001010", 77 => "1111111111010010", 
    78 => "0000011010010100", 79 => "1111001110100100", 80 => "1111100001011000", 
    81 => "0000010111010000", 82 => "0000001111101000", 83 => "1111101110001011", 
    84 => "0000001010111001", 85 => "1111011001110101", 86 => "0000001110101010", 
    87 => "1111011101110000", 88 => "0000001101000101", 89 => "1111010101010010", 
    90 => "1111111111110101", 91 => "0000000001101001", 92 => "1111001110110001", 
    93 => "0000100111000100", 94 => "0000010010100110", 95 => "0000010100001011", 
    96 => "0001111001001010", 97 => "1111000111101000", 98 => "0000000100011000", 
    99 => "0000000001101011", 100 => "0000010111100010", 101 => "0000011110010110", 
    102 => "1111111001101000", 103 => "1111111011110011", 104 => "1111101011110011", 
    105 => "0001000110001010", 106 => "1111111101101100", 107 => "1111110001011000", 
    108 => "0000010001110011", 109 => "1111110010001010", 110 => "0000010010011110", 
    111 => "1111101111001101", 112 => "1111111100100000", 113 => "1111101111001001", 
    114 => "1111110110101001", 115 => "0000011110000001", 116 => "1111100110010001", 
    117 => "1111110111011010", 118 => "1111111111000000", 119 => "0000011100000101", 
    120 => "0000010000011111", 121 => "0000000000010011", 122 => "1111011011111011", 
    123 => "0000001001000001", 124 => "0000001101000001", 125 => "0000011001010011", 
    126 => "0001001001101111", 127 => "1111101110011100", 128 => "1110111011001000", 
    129 => "1111111001110110", 130 => "1111111111100011", 131 => "1111111111110010", 
    132 => "1111110001110001", 133 => "1111101010110100", 134 => "0000010011101111", 
    135 => "1111110110111001", 136 => "1111110111000100", 137 => "0000001110100101", 
    138 => "0000001000011110", 139 => "0000001010001001", 140 => "1111111010001110", 
    141 => "1111000101101000", 142 => "1111010100101111", 143 => "1111011000000010", 
    144 => "0000001101001110", 145 => "1111110100011001", 146 => "1110100110000010", 
    147 => "1111101111101110", 148 => "1111100010111000", 149 => "1111001100000001", 
    150 => "1111101111010011", 151 => "1100011110111011", 152 => "0000000011111000", 
    153 => "1111011000110010", 154 => "1111110110110011", 155 => "0000101011110111", 
    156 => "1111110011111110", 157 => "1111101011110111", 158 => "1111111111100111", 
    159 => "1111110010100100", 160 => "1111111100110011", 161 => "1111101100010010", 
    162 => "0000000110000111", 163 => "1111111100111001", 164 => "1111111101110001", 
    165 => "1111111001111000", 166 => "1011101100101101", 167 => "1111110001011001", 
    168 => "1111111110110111", 169 => "1111111001001000", 170 => "0000010010111111", 
    171 => "0000000001000100", 172 => "0001000010100110", 173 => "0000000100111010", 
    174 => "1111110100010010", 175 => "0000000001011011", 176 => "0000001101100000", 
    177 => "0000000111000000", 178 => "1111111001010001", 179 => "0000000100001000", 
    180 => "1111101100011100", 181 => "0000000011100111", 182 => "1110111000000101", 
    183 => "0000001001110001", 184 => "1111111100000110", 185 => "1111100101101001", 
    186 => "1111111100101010", 187 => "0001010010100011", 188 => "1111111010011101", 
    189 => "0001010100100111", 190 => "0000001001110100", 191 => "0000011000101111", 
    192 => "1111110101000100", 193 => "0001000100110100", 194 => "0000000000011010", 
    195 => "0000011110111011", 196 => "1111111110010101", 197 => "1111111100011111", 
    198 => "1111110111001110", 199 => "0000000000000010", 200 => "1111110100001111", 
    201 => "0100101100111001", 202 => "0000000011100111", 203 => "1111100111000011", 
    204 => "0000000110111101", 205 => "0000000001000110", 206 => "1111011110110001", 
    207 => "1111001000110001", 208 => "1111111011111111", 209 => "1111110110110111", 
    210 => "0000001001101110", 211 => "1111110100111101", 212 => "1111110110100111", 
    213 => "1111101101111011", 214 => "0000000111100010", 215 => "1111101101001111", 
    216 => "1111101001111010", 217 => "0000001000011001", 218 => "0000000100001100", 
    219 => "0000001010010001", 220 => "1111111100000000", 221 => "1111011110000110", 
    222 => "0000000011000111", 223 => "1111110110110111", 224 => "1111111101011111", 
    225 => "1111110101010111", 226 => "0000111001111100", 227 => "1111110000101001", 
    228 => "1001111111110011", 229 => "1111101111001101", 230 => "1111100010001100", 
    231 => "0000000110111011", 232 => "0000110101001111", 233 => "0000011000001011", 
    234 => "1111001111101111", 235 => "0000000111111011", 236 => "0000000010101000", 
    237 => "0111000000000001", 238 => "1111110000110001", 239 => "1111110011000101", 
    240 => "1111111000101010", 241 => "1110011110010101", 242 => "0000101011100100", 
    243 => "0000010011000001", 244 => "1111110101101111", 245 => "1111111000001011", 
    246 => "1111111101101101", 247 => "1111101100001101", 248 => "1111100010001000", 
    249 => "1111111000001000", 250 => "0001100101101101", 251 => "1111100100111001", 
    252 => "0000000010000110", 253 => "1111101110111000", 254 => "0000010010111011", 
    255 => "0000100110011101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Actbkb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


