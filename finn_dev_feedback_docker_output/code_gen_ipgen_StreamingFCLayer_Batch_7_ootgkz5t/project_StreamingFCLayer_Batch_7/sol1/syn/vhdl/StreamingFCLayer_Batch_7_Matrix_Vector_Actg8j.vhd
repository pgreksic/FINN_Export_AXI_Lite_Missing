-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110101111000001", 1 => "1111101111100110", 2 => "1111111001110011", 
    3 => "1110110111011110", 4 => "1111111111111101", 5 => "1111111101001111", 
    6 => "1111101111110001", 7 => "1111110011011101", 8 => "1111101111110110", 
    9 => "1111101110010010", 10 => "1111111001010001", 11 => "0000100001110000", 
    12 => "1111110010010000", 13 => "1111101100000001", 14 => "0000010010010000", 
    15 => "1111101101111110", 16 => "0000001111101100", 17 => "0000110000001000", 
    18 => "0001100110000000", 19 => "1111101001011000", 20 => "0000111010111001", 
    21 => "0000100110111100", 22 => "1110000110101101", 23 => "1111101000101001", 
    24 => "1111111110111011", 25 => "0000001000100011", 26 => "1111110001000111", 
    27 => "1010100111000010", 28 => "1111110111101001", 29 => "0000000100000010", 
    30 => "0000010001101100", 31 => "1111101010100111", 32 => "1111110010011011", 
    33 => "0000000111100111", 34 => "0000010111100111", 35 => "1111110001011011", 
    36 => "0000010000111111", 37 => "1111100111001110", 38 => "1111111101000110", 
    39 => "0000001010001001", 40 => "1101011001000111", 41 => "0111000000000001", 
    42 => "0000000001111111", 43 => "1100010001110010", 44 => "1110111011011011", 
    45 => "1111110010100001", 46 => "0001010001000001", 47 => "1111100111100011", 
    48 => "1111011111101111", 49 => "0000001001110011", 50 => "0000010100011100", 
    51 => "1111110111001010", 52 => "0000000100110000", 53 => "1110110101110001", 
    54 => "0000000110000101", 55 => "0000101011101010", 56 => "1111011101010101", 
    57 => "1111111110011100", 58 => "1111001001100010", 59 => "1111110111010000", 
    60 => "1111111010000110", 61 => "1111101100110011", 62 => "1111110100001101", 
    63 => "1111110100110111", 64 => "1111111100100110", 65 => "0000000011000101", 
    66 => "0000000110101001", 67 => "1111101101001111", 68 => "0000001000110010", 
    69 => "1111010101100100", 70 => "0000001010001101", 71 => "0000010000010001", 
    72 => "0000000000011011", 73 => "1101110111010101", 74 => "1111100011001100", 
    75 => "0000000001110000", 76 => "0001101110001110", 77 => "0000000000111111", 
    78 => "0000011011011000", 79 => "1111010011110111", 80 => "1111100010110100", 
    81 => "0000011000110001", 82 => "0000010000101000", 83 => "1111101111001001", 
    84 => "0000001100010111", 85 => "1111011010111111", 86 => "0000010000000101", 
    87 => "1111011111000000", 88 => "0000001110100101", 89 => "1111010110011111", 
    90 => "0000000000111010", 91 => "0000000010100001", 92 => "1111010001111001", 
    93 => "0000101001101001", 94 => "0000010011110110", 95 => "0000010101001000", 
    96 => "0010000111100111", 97 => "1111001110011100", 98 => "0000000101110011", 
    99 => "0000000011000010", 100 => "0000011000010111", 101 => "0000011111001100", 
    102 => "1111111011001000", 103 => "1111111100111001", 104 => "1111101101100100", 
    105 => "0001001001010101", 106 => "1111111111010001", 107 => "1111110010001100", 
    108 => "0000010010110001", 109 => "1111110011111000", 110 => "0000010011110100", 
    111 => "1111101111111111", 112 => "1111111101101100", 113 => "1111110000111110", 
    114 => "1111110111110011", 115 => "0000011111000011", 116 => "1111100111001110", 
    117 => "1111111000010101", 118 => "1111111111100010", 119 => "0000011110111110", 
    120 => "0000010010000111", 121 => "0000000001010010", 122 => "1111011111001100", 
    123 => "0000001001111001", 124 => "0000001110111101", 125 => "0000011010110000", 
    126 => "0001001111011011", 127 => "1111101111101000", 128 => "1110111110101011", 
    129 => "1111111010111001", 130 => "0000000000100000", 131 => "0000000001100100", 
    132 => "1111110011000101", 133 => "1111101100001000", 134 => "0000010100001110", 
    135 => "1111111000001011", 136 => "1111111000100001", 137 => "0000001111101101", 
    138 => "0000001001110001", 139 => "0000001011010100", 140 => "1111111100000111", 
    141 => "1111001100000001", 142 => "1111011011110010", 143 => "1111011001010101", 
    144 => "0000001110001110", 145 => "1111110101010010", 146 => "1110101100011011", 
    147 => "1111110000110110", 148 => "1111100100000010", 149 => "1111010000001010", 
    150 => "1111110000010000", 151 => "1100111000011010", 152 => "0000000100111000", 
    153 => "1111011001101111", 154 => "1111111000001100", 155 => "0000110000000000", 
    156 => "1111110101011001", 157 => "1111101100111011", 158 => "0000000000101010", 
    159 => "1111110100001111", 160 => "1111111110000011", 161 => "1111101101011100", 
    162 => "0000000111001000", 163 => "1111111110001011", 164 => "1111111110101011", 
    165 => "1111111011001000", 166 => "1100001000101111", 167 => "1111110010101111", 
    168 => "0000000000000010", 169 => "1111111010001101", 170 => "0000010011111100", 
    171 => "0000000001110111", 172 => "0001001011101110", 173 => "0000000110100101", 
    174 => "1111111011010001", 175 => "0000000010001000", 176 => "0000001110010010", 
    177 => "0000001000101111", 178 => "1111111010111111", 179 => "0000000101100000", 
    180 => "1111101110000000", 181 => "0000000101010101", 182 => "1111000000000001", 
    183 => "0000010100100100", 184 => "1111111101101111", 185 => "1111101000010000", 
    186 => "1111111110001001", 187 => "0001010110101000", 188 => "1111111100010111", 
    189 => "0001011010111001", 190 => "0000001011011001", 191 => "0000011001101001", 
    192 => "1111110110001000", 193 => "0001011000101110", 194 => "0000000001010001", 
    195 => "0000100000001010", 196 => "1111111111101111", 197 => "1111111101001101", 
    198 => "1111111000011001", 199 => "0000000001001110", 200 => "1111110101001011", 
    201 => "0101100100110111", 202 => "0000000100110000", 203 => "1111101000100110", 
    204 => "0000000111111010", 205 => "0000000010000111", 206 => "1111011111110010", 
    207 => "1111001010010010", 208 => "1111111101010111", 209 => "1111111000010100", 
    210 => "0000001010110000", 211 => "1111110110000111", 212 => "1111110111101100", 
    213 => "1111101111100000", 214 => "0000001000011110", 215 => "1111101110100110", 
    216 => "1111101011001101", 217 => "0000001001111011", 218 => "0000000101001001", 
    219 => "0000001011010010", 220 => "1111111100111101", 221 => "1111011111100010", 
    222 => "0000000100001000", 223 => "1111110111101101", 224 => "1111111110100101", 
    225 => "1111110110000001", 226 => "0000111101111000", 227 => "1111110010111000", 
    228 => "1010100100100010", 229 => "1111110000100100", 230 => "1111100011010100", 
    231 => "0000001000011011", 232 => "0000111010010110", 233 => "0000011001011110", 
    234 => "1111010100111101", 235 => "0000001001011010", 236 => "0000000011101111", 
    237 => "0111000000000001", 238 => "1111110010001111", 239 => "1111110100010000", 
    240 => "1111111001100111", 241 => "1110100100011110", 242 => "0000110000001001", 
    243 => "0000010100001110", 244 => "1111110110101001", 245 => "1111111000110111", 
    246 => "1111111111000100", 247 => "1111101101000100", 248 => "1111100011100010", 
    249 => "1111111001100000", 250 => "0001101101101100", 251 => "1111100110001000", 
    252 => "0000000011110110", 253 => "1111110000010011", 254 => "0000010100001000", 
    255 => "0000100111101010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Actg8j_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


