-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Acttde_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_7_Matrix_Vector_Acttde_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111001001000", 1 => "0000000010001010", 2 => "0001100001011111", 
    3 => "1111111000011111", 4 => "0011000000001001", 5 => "1111100101100111", 
    6 => "0000011000101010", 7 => "1111100001000001", 8 => "1111011010100110", 
    9 => "0000001100101110", 10 => "0000000010101101", 11 => "1111111011111101", 
    12 => "1111110000111110", 13 => "0000011011111111", 14 => "1111101010010011", 
    15 => "1111111110101110", 16 => "1111110111011111", 17 => "1111111100000011", 
    18 => "0000001010110011", 19 => "1111101001101110", 20 => "1111110010110001", 
    21 => "1111110000110000", 22 => "1111100110101101", 23 => "1111101100111100", 
    24 => "0000010111000111", 25 => "0000000000100111", 26 => "1111110011001010", 
    27 => "0000000000110101", 28 => "1111111101001100", 29 => "1111111111100010", 
    30 => "0000000110110010", 31 => "1100001101001001", 32 => "0000000101001010", 
    33 => "1111111010010011", 34 => "1111111010010100", 35 => "1111111010100010", 
    36 => "0000000110001110", 37 => "0000100111011010", 38 => "0000010000110111", 
    39 => "1111110010110110", 40 => "0000001001110001", 41 => "1111011101100101", 
    42 => "1111011100011101", 43 => "0000010000011110", 44 => "1111110011100101", 
    45 => "1111101111000100", 46 => "1111101111110110", 47 => "1011111111011000", 
    48 => "0000001001101000", 49 => "0000011101000011", 50 => "0000001101010000", 
    51 => "0000000110011100", 52 => "0000001010001010", 53 => "1111110000111010", 
    54 => "1111100100010011", 55 => "0000100010000111", 56 => "0000000101010100", 
    57 => "0000000000000011", 58 => "1100101010101000", 59 => "0000001000100100", 
    60 => "1111100111001011", 61 => "0111000000000001", 62 => "0000001110110111", 
    63 => "0000001011000100", 64 => "1111110100010011", 65 => "1111101111000001", 
    66 => "1111111110000011", 67 => "0000001000011110", 68 => "1110111101111111", 
    69 => "1111111001111101", 70 => "1111111000001011", 71 => "0000011110001101", 
    72 => "0000000010010111", 73 => "0000001110001100", 74 => "1110101100100100", 
    75 => "1111011101011011", 76 => "0000000111110100", 77 => "1110110001010001", 
    78 => "0000000000111010", 79 => "0111000000000001", 80 => "0001000110110110", 
    81 => "0000010001100101", 82 => "1110111101001010", 83 => "1111111000111010", 
    84 => "0000000000011110", 85 => "0000101110000111", 86 => "1111110100111101", 
    87 => "0000001111111010", 88 => "0001010110101101", 89 => "0000001011010110", 
    90 => "0000010100000110", 91 => "0000001101001101", 92 => "1111111000101100", 
    93 => "0000100010010111", 94 => "0000010001001010", 95 => "0000100111110011", 
    96 => "1111111111000011", 97 => "0000000000101110", 98 => "1010010100111000", 
    99 => "0000001110101100", 100 => "1111100110011100", 101 => "1111111101001000", 
    102 => "1110110001010000", 103 => "1111111011101111", 104 => "1101100011001111", 
    105 => "0000000000011011", 106 => "1111110100111000", 107 => "1111010110110011", 
    108 => "0000100010011001", 109 => "0000001010011010", 110 => "0000000000111001", 
    111 => "0000010010110110", 112 => "0000011101011100", 113 => "1111110100000001", 
    114 => "1111100110011111", 115 => "1111101001100010", 116 => "0000000101101111", 
    117 => "1111011000111010", 118 => "1111100111111000", 119 => "1111110000011000", 
    120 => "1111111101101001", 121 => "0000001000001111", 122 => "1111011010010101", 
    123 => "0000100100001011", 124 => "0000000110000110", 125 => "0000001110001100", 
    126 => "0000000010100001", 127 => "0000001010001011", 128 => "0000001011100011", 
    129 => "0000011101101001", 130 => "0000001000001101", 131 => "1111100001000111", 
    132 => "0000001100011011", 133 => "0000110101000011", 134 => "0000010111110101", 
    135 => "0000000010101101", 136 => "1111110100010000", 137 => "1111110100110000", 
    138 => "0000000101100111", 139 => "0000000111001011", 140 => "0000010010111000", 
    141 => "0000100100010100", 142 => "0001000101101000", 143 => "0000000111101011", 
    144 => "0000000001111000", 145 => "0000001010110001", 146 => "1111100010101010", 
    147 => "1111110110010011", 148 => "0000000010111110", 149 => "1111100111000010", 
    150 => "1111111001101001", 151 => "0000100001101011", 152 => "1110101100011010", 
    153 => "0000001010011011", 154 => "0000000001111110", 155 => "0000010000001010", 
    156 => "1111111001000000", 157 => "0000100001100101", 158 => "1111100101011010", 
    159 => "1111111011011001", 160 => "0000010101110111", 161 => "0000001001010110", 
    162 => "1111110011100011", 163 => "0000110001101111", 164 => "0000010000000101", 
    165 => "0000001000010100", 166 => "0000001000101010", 167 => "0000000010100011", 
    168 => "1111111100111111", 169 => "1111111110110110", 170 => "0000001010111000", 
    171 => "1111101100000001", 172 => "1111011100101000", 173 => "1111111111010000", 
    174 => "0000001101001100", 175 => "0000001101001001", 176 => "0000011001001101", 
    177 => "0000010001101110", 178 => "1111111110110010", 179 => "1110100100100001", 
    180 => "0000000101101001", 181 => "0000111011010011", 182 => "0000000010000111", 
    183 => "0000001100011101", 184 => "1111111101010110", 185 => "0000000000101011", 
    186 => "0000000001010100", 187 => "0000011100000010", 188 => "1110101001011101", 
    189 => "0000001011100010", 190 => "1111110001010110", 191 => "0001011000111111", 
    192 => "1111111001111000", 193 => "1110111111100001", 194 => "1111111001011011", 
    195 => "1110111110111100", 196 => "1111110111000001", 197 => "1111110110001100", 
    198 => "1111100000110101", 199 => "1111110011101011", 200 => "1111111111001111", 
    201 => "0010000101011111", 202 => "1111010101011110", 203 => "1111101001011010", 
    204 => "0000000100100010", 205 => "1111111111000010", 206 => "0000011101010010", 
    207 => "1111101001111101", 208 => "0000000001010011", 209 => "1111110101000101", 
    210 => "1111111110000000", 211 => "0000010001111000", 212 => "0000010011001111", 
    213 => "0000011001111110", 214 => "0000001001101000", 215 => "1111110101010010", 
    216 => "0000010010101111", 217 => "1111111111100100", 218 => "0000010110011000", 
    219 => "1111110101010000", 220 => "1110001011110111", 221 => "0000010110000100", 
    222 => "0000000001101100", 223 => "0000010111000011", 224 => "1101110000010011", 
    225 => "1111111000001101", 226 => "0000001001111100", 227 => "0000101111001001", 
    228 => "0000001001001001", 229 => "1111111100000101", 230 => "0000010011101110", 
    231 => "1111111101100101", 232 => "1111010000011001", 233 => "0000000011010110", 
    234 => "0011101101001000", 235 => "0000000000011110", 236 => "1111111101110000", 
    237 => "1111111111101100", 238 => "1111110001101100", 239 => "1111111111010101", 
    240 => "1111111101101111", 241 => "1111100111110001", 242 => "0000000110010100", 
    243 => "1111110111010110", 244 => "1111100011010100", 245 => "0000001010111000", 
    246 => "1111110001011101", 247 => "0000001100111001", 248 => "0111000000000001", 
    249 => "0011010111110010", 250 => "0000101011000111", 251 => "0000000010000011", 
    252 => "0001010110010101", 253 => "0000001101011101", 254 => "1111111101100101", 
    255 => "1111110110100001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_7_Matrix_Vector_Acttde is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_7_Matrix_Vector_Acttde is
    component StreamingFCLayer_Batch_7_Matrix_Vector_Acttde_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_7_Matrix_Vector_Acttde_rom_U :  component StreamingFCLayer_Batch_7_Matrix_Vector_Acttde_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


