// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_ST_fsm_state1 = "1";
const sc_lv<3> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_ST_fsm_state5 = "100";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_boolean_1 = true;
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_1 = "1";
const bool StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_boolean_0 = false;
const sc_lv<1> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv1_0 = "0";
const sc_lv<1> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv1_1 = "1";
const sc_lv<56> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv56_0 = "00000000000000000000000000000000000000000000000000000000";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_C = "1100";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_A = "1010";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_8 = "1000";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_3F = "111111";
const sc_lv<32> StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::ap_const_lv32_2 = "10";

StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_out_V_V_U = new StreamingDataflowPartition_0_IODMA_0_regslice_both<8>("regslice_both_out_V_V_U");
    regslice_both_out_V_V_U->ap_clk(ap_clk);
    regslice_both_out_V_V_U->ap_rst(ap_rst);
    regslice_both_out_V_V_U->data_in(out_V_V_TDATA_int);
    regslice_both_out_V_V_U->vld_in(out_V_V_TVALID_int);
    regslice_both_out_V_V_U->ack_in(out_V_V_TREADY_int);
    regslice_both_out_V_V_U->data_out(out_V_V_TDATA);
    regslice_both_out_V_V_U->vld_out(regslice_both_out_V_V_U_vld_out);
    regslice_both_out_V_V_U->ack_out(out_V_V_TREADY);
    regslice_both_out_V_V_U->apdone_blk(regslice_both_out_V_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op26_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op26_read_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_predicate_op26_read_state3 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( out_V_V_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_predicate_op26_read_state3 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( icmp_ln476_reg_217_pp0_iter1_reg );
    sensitive << ( out_V_V_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln476_fu_155_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_out_V_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_p_025_0_i_phi_fu_97_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln476_reg_217_pp0_iter1_reg );
    sensitive << ( p_025_0_i_reg_93 );
    sensitive << ( trunc_ln_reg_240 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_130_p4);
    sensitive << ( in_V_V_dout );
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( icmp_ln479_reg_226 );
    sensitive << ( ap_phi_reg_pp0_iter1_p_Val2_s_reg_127 );
    sensitive << ( zext_ln476_fu_192_p1 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_p_Val2_s_reg_127);

    SC_METHOD(thread_ap_predicate_op26_read_state3);
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( icmp_ln479_reg_226 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_out_V_V_U_apdone_blk );

    SC_METHOD(thread_icmp_ln476_fu_155_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_0_i_reg_116 );
    sensitive << ( totalIters_reg_212 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln479_fu_166_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( o_0_i_reg_105 );
    sensitive << ( icmp_ln476_fu_155_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln490_fu_178_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln476_fu_155_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( o_fu_172_p2 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( icmp_ln479_reg_226 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op26_read_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_numReps_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_numReps_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_o_fu_172_p2);
    sensitive << ( o_0_i_reg_105 );

    SC_METHOD(thread_out_V_V_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln476_reg_217_pp0_iter1_reg );
    sensitive << ( out_V_V_TREADY_int );

    SC_METHOD(thread_out_V_V_TDATA_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_130_p4 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_V_TVALID);
    sensitive << ( regslice_both_out_V_V_U_vld_out );

    SC_METHOD(thread_out_V_V_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln476_reg_217 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln490_fu_184_p3);
    sensitive << ( o_fu_172_p2 );
    sensitive << ( icmp_ln490_fu_178_p2 );

    SC_METHOD(thread_shl_ln473_1_fu_143_p2);
    sensitive << ( numReps_dout );

    SC_METHOD(thread_shl_ln473_fu_137_p2);
    sensitive << ( numReps_dout );

    SC_METHOD(thread_t_fu_160_p2);
    sensitive << ( t_0_i_reg_116 );

    SC_METHOD(thread_totalIters_fu_149_p2);
    sensitive << ( shl_ln473_fu_137_p2 );
    sensitive << ( shl_ln473_1_fu_143_p2 );

    SC_METHOD(thread_zext_ln476_fu_192_p1);
    sensitive << ( ap_phi_mux_p_025_0_i_phi_fu_97_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln476_fu_155_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_out_V_V_U_apdone_blk );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_TDATA, "(port)out_V_V_TDATA");
    sc_trace(mVcdFile, out_V_V_TVALID, "(port)out_V_V_TVALID");
    sc_trace(mVcdFile, out_V_V_TREADY, "(port)out_V_V_TREADY");
    sc_trace(mVcdFile, numReps_dout, "(port)numReps_dout");
    sc_trace(mVcdFile, numReps_empty_n, "(port)numReps_empty_n");
    sc_trace(mVcdFile, numReps_read, "(port)numReps_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln476_reg_217, "icmp_ln476_reg_217");
    sc_trace(mVcdFile, icmp_ln479_reg_226, "icmp_ln479_reg_226");
    sc_trace(mVcdFile, out_V_V_TDATA_blk_n, "out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln476_reg_217_pp0_iter1_reg, "icmp_ln476_reg_217_pp0_iter1_reg");
    sc_trace(mVcdFile, numReps_blk_n, "numReps_blk_n");
    sc_trace(mVcdFile, p_025_0_i_reg_93, "p_025_0_i_reg_93");
    sc_trace(mVcdFile, o_0_i_reg_105, "o_0_i_reg_105");
    sc_trace(mVcdFile, t_0_i_reg_116, "t_0_i_reg_116");
    sc_trace(mVcdFile, totalIters_fu_149_p2, "totalIters_fu_149_p2");
    sc_trace(mVcdFile, totalIters_reg_212, "totalIters_reg_212");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln476_fu_155_p2, "icmp_ln476_fu_155_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op26_read_state3, "ap_predicate_op26_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, t_fu_160_p2, "t_fu_160_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln479_fu_166_p2, "icmp_ln479_fu_166_p2");
    sc_trace(mVcdFile, select_ln490_fu_184_p3, "select_ln490_fu_184_p3");
    sc_trace(mVcdFile, trunc_ln_reg_240, "trunc_ln_reg_240");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_p_025_0_i_phi_fu_97_p4, "ap_phi_mux_p_025_0_i_phi_fu_97_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_130_p4, "ap_phi_mux_p_Val2_s_phi_fu_130_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_Val2_s_reg_127, "ap_phi_reg_pp0_iter1_p_Val2_s_reg_127");
    sc_trace(mVcdFile, zext_ln476_fu_192_p1, "zext_ln476_fu_192_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, shl_ln473_fu_137_p2, "shl_ln473_fu_137_p2");
    sc_trace(mVcdFile, shl_ln473_1_fu_143_p2, "shl_ln473_1_fu_143_p2");
    sc_trace(mVcdFile, o_fu_172_p2, "o_fu_172_p2");
    sc_trace(mVcdFile, icmp_ln490_fu_178_p2, "icmp_ln490_fu_178_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, regslice_both_out_V_V_U_apdone_blk, "regslice_both_out_V_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, out_V_V_TDATA_int, "out_V_V_TDATA_int");
    sc_trace(mVcdFile, out_V_V_TVALID_int, "out_V_V_TVALID_int");
    sc_trace(mVcdFile, out_V_V_TREADY_int, "out_V_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_V_V_U_vld_out, "regslice_both_out_V_V_U_vld_out");
#endif

    }
}

StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::~StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_out_V_V_U;
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(regslice_both_out_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_fu_155_p2.read()))) {
        o_0_i_reg_105 = select_ln490_fu_184_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        o_0_i_reg_105 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_217_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_025_0_i_reg_93 = trunc_ln_reg_240.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        p_025_0_i_reg_93 = ap_const_lv56_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_fu_155_p2.read()))) {
        t_0_i_reg_116 = t_fu_160_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        t_0_i_reg_116 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln476_reg_217 = icmp_ln476_fu_155_p2.read();
        icmp_ln476_reg_217_pp0_iter1_reg = icmp_ln476_reg_217.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_fu_155_p2.read()))) {
        icmp_ln479_reg_226 = icmp_ln479_fu_166_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        totalIters_reg_212 = totalIters_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln_reg_240 = ap_phi_mux_p_Val2_s_phi_fu_130_p4.read().range(63, 8);
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_TREADY_int.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_217_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_TREADY_int.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln476_fu_155_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_phi_mux_p_025_0_i_phi_fu_97_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_217_pp0_iter1_reg.read()))) {
        ap_phi_mux_p_025_0_i_phi_fu_97_p4 = trunc_ln_reg_240.read();
    } else {
        ap_phi_mux_p_025_0_i_phi_fu_97_p4 = p_025_0_i_reg_93.read();
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_phi_mux_p_Val2_s_phi_fu_130_p4() {
    if (esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln479_reg_226.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_130_p4 = zext_ln476_fu_192_p1.read();
        } else if (esl_seteq<1,1,1>(icmp_ln479_reg_226.read(), ap_const_lv1_1)) {
            ap_phi_mux_p_Val2_s_phi_fu_130_p4 = in_V_V_dout.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_130_p4 = ap_phi_reg_pp0_iter1_p_Val2_s_reg_127.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_130_p4 = ap_phi_reg_pp0_iter1_p_Val2_s_reg_127.read();
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_phi_reg_pp0_iter1_p_Val2_s_reg_127() {
    ap_phi_reg_pp0_iter1_p_Val2_s_reg_127 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_predicate_op26_read_state3() {
    ap_predicate_op26_read_state3 = (esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln479_reg_226.read(), ap_const_lv1_1));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(regslice_both_out_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_icmp_ln476_fu_155_p2() {
    icmp_ln476_fu_155_p2 = (!t_0_i_reg_116.read().is_01() || !totalIters_reg_212.read().is_01())? sc_lv<1>(): sc_lv<1>(t_0_i_reg_116.read() == totalIters_reg_212.read());
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_icmp_ln479_fu_166_p2() {
    icmp_ln479_fu_166_p2 = (!o_0_i_reg_105.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(o_0_i_reg_105.read() == ap_const_lv32_0);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_icmp_ln490_fu_178_p2() {
    icmp_ln490_fu_178_p2 = (!o_fu_172_p2.read().is_01() || !ap_const_lv32_8.is_01())? sc_lv<1>(): sc_lv<1>(o_fu_172_p2.read() == ap_const_lv32_8);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln479_reg_226.read(), ap_const_lv1_1))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_numReps_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        numReps_blk_n = numReps_empty_n.read();
    } else {
        numReps_blk_n = ap_const_logic_1;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_numReps_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        numReps_read = ap_const_logic_1;
    } else {
        numReps_read = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_o_fu_172_p2() {
    o_fu_172_p2 = (!ap_const_lv32_1.is_01() || !o_0_i_reg_105.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(o_0_i_reg_105.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_out_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln476_reg_217_pp0_iter1_reg.read())))) {
        out_V_V_TDATA_blk_n = out_V_V_TREADY_int.read();
    } else {
        out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_out_V_V_TDATA_int() {
    out_V_V_TDATA_int = ap_phi_mux_p_Val2_s_phi_fu_130_p4.read().range(8-1, 0);
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_out_V_V_TVALID() {
    out_V_V_TVALID = regslice_both_out_V_V_U_vld_out.read();
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_out_V_V_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln476_reg_217.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_TVALID_int = ap_const_logic_1;
    } else {
        out_V_V_TVALID_int = ap_const_logic_0;
    }
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_select_ln490_fu_184_p3() {
    select_ln490_fu_184_p3 = (!icmp_ln490_fu_178_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln490_fu_178_p2.read()[0].to_bool())? ap_const_lv32_0: o_fu_172_p2.read());
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_shl_ln473_1_fu_143_p2() {
    shl_ln473_1_fu_143_p2 = (!ap_const_lv32_A.is_01())? sc_lv<32>(): numReps_dout.read() << (unsigned short)ap_const_lv32_A.to_uint();
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_shl_ln473_fu_137_p2() {
    shl_ln473_fu_137_p2 = (!ap_const_lv32_C.is_01())? sc_lv<32>(): numReps_dout.read() << (unsigned short)ap_const_lv32_C.to_uint();
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_t_fu_160_p2() {
    t_fu_160_p2 = (!t_0_i_reg_116.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_0_i_reg_116.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_totalIters_fu_149_p2() {
    totalIters_fu_149_p2 = (!shl_ln473_fu_137_p2.read().is_01() || !shl_ln473_1_fu_143_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln473_fu_137_p2.read()) - sc_biguint<32>(shl_ln473_1_fu_143_p2.read()));
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_zext_ln476_fu_192_p1() {
    zext_ln476_fu_192_p1 = esl_zext<64,56>(ap_phi_mux_p_025_0_i_phi_fu_97_p4.read());
}

void StreamingDataflowPartition_0_IODMA_0_StreamingDataWidthCo::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln476_fu_155_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln476_fu_155_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(regslice_both_out_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

