// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingDataflowPartition_0_IODMA_0_Mem2Stream_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY,
        m_axi_in_V_AWADDR,
        m_axi_in_V_AWID,
        m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID,
        m_axi_in_V_WREADY,
        m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST,
        m_axi_in_V_WID,
        m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR,
        m_axi_in_V_ARID,
        m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID,
        m_axi_in_V_RREADY,
        m_axi_in_V_RDATA,
        m_axi_in_V_RLAST,
        m_axi_in_V_RID,
        m_axi_in_V_RUSER,
        m_axi_in_V_RRESP,
        m_axi_in_V_BVALID,
        m_axi_in_V_BREADY,
        m_axi_in_V_BRESP,
        m_axi_in_V_BID,
        m_axi_in_V_BUSER,
        in_V_offset,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_in_V_AWVALID;
input   m_axi_in_V_AWREADY;
output  [63:0] m_axi_in_V_AWADDR;
output  [0:0] m_axi_in_V_AWID;
output  [31:0] m_axi_in_V_AWLEN;
output  [2:0] m_axi_in_V_AWSIZE;
output  [1:0] m_axi_in_V_AWBURST;
output  [1:0] m_axi_in_V_AWLOCK;
output  [3:0] m_axi_in_V_AWCACHE;
output  [2:0] m_axi_in_V_AWPROT;
output  [3:0] m_axi_in_V_AWQOS;
output  [3:0] m_axi_in_V_AWREGION;
output  [0:0] m_axi_in_V_AWUSER;
output   m_axi_in_V_WVALID;
input   m_axi_in_V_WREADY;
output  [63:0] m_axi_in_V_WDATA;
output  [7:0] m_axi_in_V_WSTRB;
output   m_axi_in_V_WLAST;
output  [0:0] m_axi_in_V_WID;
output  [0:0] m_axi_in_V_WUSER;
output   m_axi_in_V_ARVALID;
input   m_axi_in_V_ARREADY;
output  [63:0] m_axi_in_V_ARADDR;
output  [0:0] m_axi_in_V_ARID;
output  [31:0] m_axi_in_V_ARLEN;
output  [2:0] m_axi_in_V_ARSIZE;
output  [1:0] m_axi_in_V_ARBURST;
output  [1:0] m_axi_in_V_ARLOCK;
output  [3:0] m_axi_in_V_ARCACHE;
output  [2:0] m_axi_in_V_ARPROT;
output  [3:0] m_axi_in_V_ARQOS;
output  [3:0] m_axi_in_V_ARREGION;
output  [0:0] m_axi_in_V_ARUSER;
input   m_axi_in_V_RVALID;
output   m_axi_in_V_RREADY;
input  [63:0] m_axi_in_V_RDATA;
input   m_axi_in_V_RLAST;
input  [0:0] m_axi_in_V_RID;
input  [0:0] m_axi_in_V_RUSER;
input  [1:0] m_axi_in_V_RRESP;
input   m_axi_in_V_BVALID;
output   m_axi_in_V_BREADY;
input  [1:0] m_axi_in_V_BRESP;
input  [0:0] m_axi_in_V_BID;
input  [0:0] m_axi_in_V_BUSER;
input  [63:0] in_V_offset;
output  [63:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_in_V_ARVALID;
reg[63:0] m_axi_in_V_ARADDR;
reg[0:0] m_axi_in_V_ARID;
reg[31:0] m_axi_in_V_ARLEN;
reg[2:0] m_axi_in_V_ARSIZE;
reg[1:0] m_axi_in_V_ARBURST;
reg[1:0] m_axi_in_V_ARLOCK;
reg[3:0] m_axi_in_V_ARCACHE;
reg[2:0] m_axi_in_V_ARPROT;
reg[3:0] m_axi_in_V_ARQOS;
reg[3:0] m_axi_in_V_ARREGION;
reg[0:0] m_axi_in_V_ARUSER;
reg m_axi_in_V_RREADY;
reg[63:0] out_V_V_din;
reg out_V_V_write;
reg numReps_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    numReps_out_blk_n;
reg    ap_block_state1;
reg   [60:0] in_V_offset1_reg_214;
wire   [0:0] icmp_ln168_fu_152_p2;
reg   [0:0] icmp_ln168_reg_223;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln166_fu_138_p2;
wire   [31:0] sub_ln170_fu_170_p2;
reg   [31:0] sub_ln170_reg_227;
wire    grp_Mem2Stream_fu_100_ap_start;
wire    grp_Mem2Stream_fu_100_ap_done;
wire    grp_Mem2Stream_fu_100_ap_idle;
wire    grp_Mem2Stream_fu_100_ap_ready;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_AWVALID;
wire   [63:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWADDR;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWID;
wire   [31:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWLEN;
wire   [2:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWSIZE;
wire   [1:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWBURST;
wire   [1:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWLOCK;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWCACHE;
wire   [2:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWPROT;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWQOS;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWREGION;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_AWUSER;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_WVALID;
wire   [63:0] grp_Mem2Stream_fu_100_m_axi_in_V_WDATA;
wire   [7:0] grp_Mem2Stream_fu_100_m_axi_in_V_WSTRB;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_WLAST;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_WID;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_WUSER;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_ARVALID;
wire   [63:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARADDR;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARID;
wire   [31:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARLEN;
wire   [2:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARSIZE;
wire   [1:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARBURST;
wire   [1:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARLOCK;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARCACHE;
wire   [2:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARPROT;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARQOS;
wire   [3:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARREGION;
wire   [0:0] grp_Mem2Stream_fu_100_m_axi_in_V_ARUSER;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_RREADY;
wire    grp_Mem2Stream_fu_100_m_axi_in_V_BREADY;
wire   [63:0] grp_Mem2Stream_fu_100_out_V_V_din;
wire    grp_Mem2Stream_fu_100_out_V_V_write;
wire    grp_Mem2Stream_1_fu_110_ap_start;
wire    grp_Mem2Stream_1_fu_110_ap_done;
wire    grp_Mem2Stream_1_fu_110_ap_idle;
wire    grp_Mem2Stream_1_fu_110_ap_ready;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_AWVALID;
wire   [63:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWADDR;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWID;
wire   [31:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWLEN;
wire   [2:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWSIZE;
wire   [1:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWBURST;
wire   [1:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWLOCK;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWCACHE;
wire   [2:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWPROT;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWQOS;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWREGION;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_AWUSER;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_WVALID;
wire   [63:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_WDATA;
wire   [7:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_WSTRB;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_WLAST;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_WID;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_WUSER;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_ARVALID;
wire   [63:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARADDR;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARID;
wire   [31:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLEN;
wire   [2:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARSIZE;
wire   [1:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARBURST;
wire   [1:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLOCK;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARCACHE;
wire   [2:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARPROT;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARQOS;
wire   [3:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARREGION;
wire   [0:0] grp_Mem2Stream_1_fu_110_m_axi_in_V_ARUSER;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_RREADY;
wire    grp_Mem2Stream_1_fu_110_m_axi_in_V_BREADY;
wire   [63:0] grp_Mem2Stream_1_fu_110_out_V_V_din;
wire    grp_Mem2Stream_1_fu_110_out_V_V_write;
reg    grp_Mem2Stream_fu_100_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_Mem2Stream_1_fu_110_ap_start_reg;
reg   [31:0] rep_2_fu_76;
wire   [31:0] rep_3_fu_178_p2;
wire   [31:0] rep_fu_189_p2;
wire   [31:0] repsLeft_fu_143_p2;
wire   [3:0] trunc_ln167_fu_148_p1;
wire   [31:0] shl_ln170_fu_158_p2;
wire   [31:0] shl_ln170_1_fu_164_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_block_state3_on_subcall_done;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_Mem2Stream_fu_100_ap_start_reg = 1'b0;
#0 grp_Mem2Stream_1_fu_110_ap_start_reg = 1'b0;
end

StreamingDataflowPartition_0_IODMA_0_Mem2Stream grp_Mem2Stream_fu_100(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mem2Stream_fu_100_ap_start),
    .ap_done(grp_Mem2Stream_fu_100_ap_done),
    .ap_idle(grp_Mem2Stream_fu_100_ap_idle),
    .ap_ready(grp_Mem2Stream_fu_100_ap_ready),
    .m_axi_in_V_AWVALID(grp_Mem2Stream_fu_100_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(grp_Mem2Stream_fu_100_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(grp_Mem2Stream_fu_100_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(grp_Mem2Stream_fu_100_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(grp_Mem2Stream_fu_100_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(grp_Mem2Stream_fu_100_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(grp_Mem2Stream_fu_100_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(grp_Mem2Stream_fu_100_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(grp_Mem2Stream_fu_100_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(grp_Mem2Stream_fu_100_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(grp_Mem2Stream_fu_100_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(grp_Mem2Stream_fu_100_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(grp_Mem2Stream_fu_100_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(grp_Mem2Stream_fu_100_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(grp_Mem2Stream_fu_100_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(grp_Mem2Stream_fu_100_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(grp_Mem2Stream_fu_100_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(grp_Mem2Stream_fu_100_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(grp_Mem2Stream_fu_100_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(m_axi_in_V_ARREADY),
    .m_axi_in_V_ARADDR(grp_Mem2Stream_fu_100_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(grp_Mem2Stream_fu_100_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(grp_Mem2Stream_fu_100_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(grp_Mem2Stream_fu_100_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(grp_Mem2Stream_fu_100_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(grp_Mem2Stream_fu_100_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(grp_Mem2Stream_fu_100_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(grp_Mem2Stream_fu_100_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(grp_Mem2Stream_fu_100_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(grp_Mem2Stream_fu_100_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(grp_Mem2Stream_fu_100_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(m_axi_in_V_RVALID),
    .m_axi_in_V_RREADY(grp_Mem2Stream_fu_100_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(m_axi_in_V_RDATA),
    .m_axi_in_V_RLAST(m_axi_in_V_RLAST),
    .m_axi_in_V_RID(m_axi_in_V_RID),
    .m_axi_in_V_RUSER(m_axi_in_V_RUSER),
    .m_axi_in_V_RRESP(m_axi_in_V_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(grp_Mem2Stream_fu_100_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(2'd0),
    .m_axi_in_V_BID(1'd0),
    .m_axi_in_V_BUSER(1'd0),
    .in_V_offset(in_V_offset1_reg_214),
    .in_V_offset1(sub_ln170_reg_227),
    .out_V_V_din(grp_Mem2Stream_fu_100_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(grp_Mem2Stream_fu_100_out_V_V_write)
);

StreamingDataflowPartition_0_IODMA_0_Mem2Stream_1 grp_Mem2Stream_1_fu_110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mem2Stream_1_fu_110_ap_start),
    .ap_done(grp_Mem2Stream_1_fu_110_ap_done),
    .ap_idle(grp_Mem2Stream_1_fu_110_ap_idle),
    .ap_ready(grp_Mem2Stream_1_fu_110_ap_ready),
    .m_axi_in_V_AWVALID(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(grp_Mem2Stream_1_fu_110_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(grp_Mem2Stream_1_fu_110_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(grp_Mem2Stream_1_fu_110_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(grp_Mem2Stream_1_fu_110_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(grp_Mem2Stream_1_fu_110_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(grp_Mem2Stream_1_fu_110_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(grp_Mem2Stream_1_fu_110_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(m_axi_in_V_ARREADY),
    .m_axi_in_V_ARADDR(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(grp_Mem2Stream_1_fu_110_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(m_axi_in_V_RVALID),
    .m_axi_in_V_RREADY(grp_Mem2Stream_1_fu_110_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(m_axi_in_V_RDATA),
    .m_axi_in_V_RLAST(m_axi_in_V_RLAST),
    .m_axi_in_V_RID(m_axi_in_V_RID),
    .m_axi_in_V_RUSER(m_axi_in_V_RUSER),
    .m_axi_in_V_RRESP(m_axi_in_V_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(grp_Mem2Stream_1_fu_110_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(2'd0),
    .m_axi_in_V_BID(1'd0),
    .m_axi_in_V_BUSER(1'd0),
    .in_V_offset(in_V_offset1_reg_214),
    .in_V_offset1(sub_ln170_reg_227),
    .out_V_V_din(grp_Mem2Stream_1_fu_110_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(grp_Mem2Stream_1_fu_110_out_V_V_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln166_fu_138_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Mem2Stream_1_fu_110_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_Mem2Stream_1_fu_110_ap_start_reg <= 1'b1;
        end else if ((grp_Mem2Stream_1_fu_110_ap_ready == 1'b1)) begin
            grp_Mem2Stream_1_fu_110_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Mem2Stream_fu_100_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1))) begin
            grp_Mem2Stream_fu_100_ap_start_reg <= 1'b1;
        end else if ((grp_Mem2Stream_fu_100_ap_ready == 1'b1)) begin
            grp_Mem2Stream_fu_100_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1))) begin
        rep_2_fu_76 <= rep_fu_189_p2;
    end else if (((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rep_2_fu_76 <= rep_3_fu_178_p2;
    end else if ((~((real_start == 1'b0) | (numReps_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rep_2_fu_76 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln168_reg_223 <= icmp_ln168_fu_152_p2;
        sub_ln170_reg_227[31 : 7] <= sub_ln170_fu_170_p2[31 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (numReps_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_V_offset1_reg_214 <= {{in_V_offset[63:3]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln166_fu_138_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln166_fu_138_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARADDR = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARADDR;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARADDR = grp_Mem2Stream_fu_100_m_axi_in_V_ARADDR;
    end else begin
        m_axi_in_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARBURST = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARBURST;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARBURST = grp_Mem2Stream_fu_100_m_axi_in_V_ARBURST;
    end else begin
        m_axi_in_V_ARBURST = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARCACHE = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARCACHE;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARCACHE = grp_Mem2Stream_fu_100_m_axi_in_V_ARCACHE;
    end else begin
        m_axi_in_V_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARID = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARID = grp_Mem2Stream_fu_100_m_axi_in_V_ARID;
    end else begin
        m_axi_in_V_ARID = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARLEN = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLEN;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARLEN = grp_Mem2Stream_fu_100_m_axi_in_V_ARLEN;
    end else begin
        m_axi_in_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARLOCK = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARLOCK;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARLOCK = grp_Mem2Stream_fu_100_m_axi_in_V_ARLOCK;
    end else begin
        m_axi_in_V_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARPROT = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARPROT;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARPROT = grp_Mem2Stream_fu_100_m_axi_in_V_ARPROT;
    end else begin
        m_axi_in_V_ARPROT = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARQOS = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARQOS;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARQOS = grp_Mem2Stream_fu_100_m_axi_in_V_ARQOS;
    end else begin
        m_axi_in_V_ARQOS = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARREGION = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARREGION;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARREGION = grp_Mem2Stream_fu_100_m_axi_in_V_ARREGION;
    end else begin
        m_axi_in_V_ARREGION = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARSIZE = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARSIZE;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARSIZE = grp_Mem2Stream_fu_100_m_axi_in_V_ARSIZE;
    end else begin
        m_axi_in_V_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARUSER = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARUSER;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARUSER = grp_Mem2Stream_fu_100_m_axi_in_V_ARUSER;
    end else begin
        m_axi_in_V_ARUSER = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_ARVALID = grp_Mem2Stream_1_fu_110_m_axi_in_V_ARVALID;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_ARVALID = grp_Mem2Stream_fu_100_m_axi_in_V_ARVALID;
    end else begin
        m_axi_in_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln168_reg_223 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (icmp_ln168_fu_152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_in_V_RREADY = grp_Mem2Stream_1_fu_110_m_axi_in_V_RREADY;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln168_reg_223 == 1'd1)) | ((icmp_ln166_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_152_p2 == 1'd1)))) begin
        m_axi_in_V_RREADY = grp_Mem2Stream_fu_100_m_axi_in_V_RREADY;
    end else begin
        m_axi_in_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (numReps_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((icmp_ln168_reg_223 == 1'd0)) begin
            out_V_V_din = grp_Mem2Stream_1_fu_110_out_V_V_din;
        end else if ((icmp_ln168_reg_223 == 1'd1)) begin
            out_V_V_din = grp_Mem2Stream_fu_100_out_V_V_din;
        end else begin
            out_V_V_din = grp_Mem2Stream_1_fu_110_out_V_V_din;
        end
    end else begin
        out_V_V_din = grp_Mem2Stream_1_fu_110_out_V_V_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((icmp_ln168_reg_223 == 1'd0)) begin
            out_V_V_write = grp_Mem2Stream_1_fu_110_out_V_V_write;
        end else if ((icmp_ln168_reg_223 == 1'd1)) begin
            out_V_V_write = grp_Mem2Stream_fu_100_out_V_V_write;
        end else begin
            out_V_V_write = 1'b0;
        end
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (numReps_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln166_fu_138_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (numReps_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = (((icmp_ln168_reg_223 == 1'd0) & (grp_Mem2Stream_1_fu_110_ap_done == 1'b0)) | ((grp_Mem2Stream_fu_100_ap_done == 1'b0) & (icmp_ln168_reg_223 == 1'd1)));
end

assign ap_ready = internal_ap_ready;

assign grp_Mem2Stream_1_fu_110_ap_start = grp_Mem2Stream_1_fu_110_ap_start_reg;

assign grp_Mem2Stream_fu_100_ap_start = grp_Mem2Stream_fu_100_ap_start_reg;

assign icmp_ln166_fu_138_p2 = ((rep_2_fu_76 == numReps) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_152_p2 = ((trunc_ln167_fu_148_p1 == 4'd0) ? 1'b1 : 1'b0);

assign m_axi_in_V_AWADDR = 64'd0;

assign m_axi_in_V_AWBURST = 2'd0;

assign m_axi_in_V_AWCACHE = 4'd0;

assign m_axi_in_V_AWID = 1'd0;

assign m_axi_in_V_AWLEN = 32'd0;

assign m_axi_in_V_AWLOCK = 2'd0;

assign m_axi_in_V_AWPROT = 3'd0;

assign m_axi_in_V_AWQOS = 4'd0;

assign m_axi_in_V_AWREGION = 4'd0;

assign m_axi_in_V_AWSIZE = 3'd0;

assign m_axi_in_V_AWUSER = 1'd0;

assign m_axi_in_V_AWVALID = 1'b0;

assign m_axi_in_V_BREADY = 1'b0;

assign m_axi_in_V_WDATA = 64'd0;

assign m_axi_in_V_WID = 1'd0;

assign m_axi_in_V_WLAST = 1'b0;

assign m_axi_in_V_WSTRB = 8'd0;

assign m_axi_in_V_WUSER = 1'd0;

assign m_axi_in_V_WVALID = 1'b0;

assign numReps_out_din = numReps;

assign rep_3_fu_178_p2 = (rep_2_fu_76 + 32'd1);

assign rep_fu_189_p2 = (rep_2_fu_76 + 32'd16);

assign repsLeft_fu_143_p2 = (numReps - rep_2_fu_76);

assign shl_ln170_1_fu_164_p2 = rep_2_fu_76 << 32'd7;

assign shl_ln170_fu_158_p2 = rep_2_fu_76 << 32'd9;

assign start_out = real_start;

assign sub_ln170_fu_170_p2 = (shl_ln170_fu_158_p2 - shl_ln170_1_fu_164_p2);

assign trunc_ln167_fu_148_p1 = repsLeft_fu_143_p2[3:0];

always @ (posedge ap_clk) begin
    sub_ln170_reg_227[6:0] <= 7'b0000000;
end

endmodule //StreamingDataflowPartition_0_IODMA_0_Mem2Stream_Batch
