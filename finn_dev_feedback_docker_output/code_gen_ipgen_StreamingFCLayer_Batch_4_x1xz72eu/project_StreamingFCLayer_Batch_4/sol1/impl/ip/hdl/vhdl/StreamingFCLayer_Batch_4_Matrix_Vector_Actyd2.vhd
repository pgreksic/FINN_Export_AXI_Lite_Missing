-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111001000110", 1 => "00000000101101001", 
    2 => "00001000100110110", 3 => "00000010110000111", 
    4 => "11111011000111011", 5 => "11111110110111100", 
    6 => "00001110001001001", 7 => "00000000101001001", 
    8 => "00000000000111111", 9 => "11100110000100001", 
    10 => "00000000100101101", 11 => "00000100101010101", 
    12 => "00001011111100000", 13 => "11110101000110000", 
    14 => "11111111111110101", 15 => "11111111101001101", 
    16 => "00000011011001110", 17 => "00000001010011000", 
    18 => "11111110100100001", 19 => "11111111110110100", 
    20 => "11111010000110111", 21 => "11111111100101101", 
    22 => "11111110110110010", 23 => "11111110111101110", 
    24 => "00001000100111000", 25 => "00001010001000011", 
    26 => "11111100111101011", 27 => "01111110000000001", 
    28 => "11111111010000001", 29 => "00000001010000011", 
    30 => "00000010101010111", 31 => "00001001001000100", 
    32 => "11111011001011101", 33 => "11110011001110010", 
    34 => "11111110110110110", 35 => "00000001001001100", 
    36 => "00000010111100001", 37 => "00000001011101001", 
    38 => "00011011000101001", 39 => "00000000001000111", 
    40 => "00000011101011011", 41 => "11111001010011011", 
    42 => "11111000100110010", 43 => "00000000000000110", 
    44 => "00000111011110011", 45 => "00000000111000111", 
    46 => "11111101110011111", 47 => "00000111011100010", 
    48 => "11111111011110011", 49 => "00000001110101001", 
    50 => "00101001010100010", 51 => "01111110000000001", 
    52 => "00000000000110010", 53 => "00000111011011010", 
    54 => "11111111001010010", 55 => "00000000001100110", 
    56 => "00001110001100100", 57 => "00001011111011101", 
    58 => "11111101000001100", 59 => "11111111110110110", 
    60 => "11111100110000111", 61 => "11111111010101000", 
    62 => "11111001111001011", 63 => "00000000101111111", 
    64 => "00000101001010010", 65 => "11110101010101000", 
    66 => "00000000110001101", 67 => "11111100111111010", 
    68 => "11111110111010011", 69 => "11111010100011011", 
    70 => "00000000001011000", 71 => "00000000001100010", 
    72 => "00000001110101111", 73 => "00000101010011010", 
    74 => "00000000010101111", 75 => "11111101100100010", 
    76 => "11111110010100000", 77 => "11111111010101011", 
    78 => "00000000001111110", 79 => "11100101000110100", 
    80 => "00000001000100110", 81 => "00000000011110101", 
    82 => "11111111100101000", 83 => "11111101101101110", 
    84 => "11111111111111100", 85 => "11110010110110111", 
    86 => "11110101001111111", 87 => "00000100011110001", 
    88 => "00000100101111100", 89 => "11111110111001101", 
    90 => "11111110001111000", 91 => "00000001010101110", 
    92 => "11111110001000101", 93 => "11111110101101110", 
    94 => "00000111100101110", 95 => "11111110110101001", 
    96 => "11111111101111101", 97 => "00000000001100011", 
    98 => "00000010010101110", 99 => "11111001100110100", 
    100 => "11111000111111101", 101 => "11111110111110101", 
    102 => "11111111011010001", 103 => "00001010101000101", 
    104 => "00000010001110101", 105 => "11110111111101001", 
    106 => "11111110110011111", 107 => "11001101001101110", 
    108 => "00000011010101001", 109 => "11111001101100011", 
    110 => "11111111010101001", 111 => "00000001001001001", 
    112 => "00000000110000001", 113 => "11110001011100010", 
    114 => "00000000000101111", 115 => "00000000100011110", 
    116 => "11111111110111100", 117 => "11111111110011100", 
    118 => "11110011001011010", 119 => "00000000011110100", 
    120 => "11111100100100111", 121 => "00000000010011010", 
    122 => "00001101011001001", 123 => "00001001001011000", 
    124 => "00000000000111100", 125 => "11111111110110001", 
    126 => "11111111100110100", 127 => "11111110111101101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2 is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2 is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Actyd2_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


