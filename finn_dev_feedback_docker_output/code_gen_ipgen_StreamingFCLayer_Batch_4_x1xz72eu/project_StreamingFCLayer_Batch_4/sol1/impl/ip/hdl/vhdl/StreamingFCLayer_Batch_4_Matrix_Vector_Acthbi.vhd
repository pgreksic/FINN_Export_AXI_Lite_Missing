-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00000111011100111", 1 => "11110100100100111", 
    2 => "11111101010110001", 3 => "11111110111110111", 
    4 => "11111101011010110", 5 => "11111110100101010", 
    6 => "11111111001111010", 7 => "00001001100010100", 
    8 => "00110111101100100", 9 => "11111111110000110", 
    10 => "11111010001000100", 11 => "00000001110011011", 
    12 => "11110110001101111", 13 => "00000001000011000", 
    14 => "00010011011100100", 15 => "11011110010101100", 
    16 => "11111110111000000", 17 => "11111101101000101", 
    18 => "00000110011111011", 19 => "11111010111000011", 
    20 => "00000000010100101", 21 => "11111111110110111", 
    22 => "11110111111111100", 23 => "11111111000010100", 
    24 => "00000010011110000", 25 => "11110000100010100", 
    26 => "11111011001101010", 27 => "11111110000111101", 
    28 => "11111010101000001", 29 => "11111101011000000", 
    30 => "01100111101001101", 31 => "11111110101010001", 
    32 => "11111011100111101", 33 => "00000000110010100", 
    34 => "11111101111011101", 35 => "11111111110011111", 
    36 => "11111110100111110", 37 => "00000111101110100", 
    38 => "11111100001000101", 39 => "00000010010010101", 
    40 => "00000110100000001", 41 => "11111111111001111", 
    42 => "11111110010100101", 43 => "00000001001010100", 
    44 => "00000001011111101", 45 => "00001001101110001", 
    46 => "00000010101111110", 47 => "11111111101001001", 
    48 => "00000010001110111", 49 => "11111111110000100", 
    50 => "00000000101101111", 51 => "11111000111110101", 
    52 => "00001000101001011", 53 => "11111100110110111", 
    54 => "00000001100001101", 55 => "11111111111000000", 
    56 => "11111110100000001", 57 => "00000010010011111", 
    58 => "00000000101110100", 59 => "11110100111000000", 
    60 => "00000011110000000", 61 => "11110110110010101", 
    62 => "11111110111101111", 63 => "11110011000010111", 
    64 => "11111111000111011", 65 => "11111011101100100", 
    66 => "00000000100101010", 67 => "00000100100101111", 
    68 => "00000101010101000", 69 => "00000000100010011", 
    70 => "00010011101100110", 71 => "11111000010101110", 
    72 => "00000001000001100", 73 => "11111101101011000", 
    74 => "00000001010011010", 75 => "00000001000011011", 
    76 => "00000000111111100", 77 => "11111111101001111", 
    78 => "11111110011101010", 79 => "00000001001001100", 
    80 => "11111111010001100", 81 => "00000000110000101", 
    82 => "00000111100110111", 83 => "11101111110101111", 
    84 => "00100111111101110", 85 => "00000010001001000", 
    86 => "00000001100100100", 87 => "11111011110110100", 
    88 => "00001000001101110", 89 => "00000001110111001", 
    90 => "00000001000101110", 91 => "11111110100111111", 
    92 => "00000010100101001", 93 => "00000000100101110", 
    94 => "00000101001000111", 95 => "00000000100001110", 
    96 => "11111110111001101", 97 => "11111111110010101", 
    98 => "11111111101111110", 99 => "11111111010001000", 
    100 => "00000001011111111", 101 => "00011000011010111", 
    102 => "00000000010101111", 103 => "00000001001101000", 
    104 => "11111011110010110", 105 => "11111110011101000", 
    106 => "11111110111111010", 107 => "11110101010111011", 
    108 => "11111110001000100", 109 => "00000000110111111", 
    110 => "11111111101010100", 111 => "11111100101101011", 
    112 => "11110000010010110", 113 => "11111111111011001", 
    114 => "11111111111001110", 115 => "00000110110011011", 
    116 => "11111100011100101", 117 => "00000001011001001", 
    118 => "11111111111010001", 119 => "00000000010010001", 
    120 => "00000001111000001", 121 => "11111101110111001", 
    122 => "00000000101111110", 123 => "11111110101111001", 
    124 => "00010001001100010", 125 => "11111111011100010", 
    126 => "00001010010010110", 127 => "11110100000010011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Acthbi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


