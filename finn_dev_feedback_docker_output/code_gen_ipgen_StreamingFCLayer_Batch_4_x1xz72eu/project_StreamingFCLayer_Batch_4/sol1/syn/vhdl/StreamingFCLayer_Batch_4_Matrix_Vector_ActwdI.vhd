-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111000111000", 1 => "00000000101010101", 
    2 => "00001000011100001", 3 => "00000010101100000", 
    4 => "11111010110000110", 5 => "11111110110100110", 
    6 => "00001100001011110", 7 => "00000000100111000", 
    8 => "00000000000101010", 9 => "11011100011001010", 
    10 => "00000000100011010", 11 => "00000100100100100", 
    12 => "00001011110100001", 13 => "11110100100100010", 
    14 => "11111111111100111", 15 => "11111111010010010", 
    16 => "00000011011000010", 17 => "00000001010001000", 
    18 => "11111110011100100", 19 => "11111111110011101", 
    20 => "11111001111110101", 21 => "11111111100001111", 
    22 => "11111110110011010", 23 => "11111110111011101", 
    24 => "00001000011000011", 25 => "00001001111101101", 
    26 => "11111100111011010", 27 => "01111110000000001", 
    28 => "11111111001101011", 29 => "00000001001101110", 
    30 => "00000010100111000", 31 => "00001000111001100", 
    32 => "11111011000100011", 33 => "11110010010010110", 
    34 => "11111110110001011", 35 => "00000001000110000", 
    36 => "00000010111001010", 37 => "00000001011011011", 
    38 => "00010111000101001", 39 => "00000000000110101", 
    40 => "00000011101000100", 41 => "11111000100011101", 
    42 => "11111000011111001", 43 => "11111111111110101", 
    44 => "00000111010000001", 45 => "00000000110100010", 
    46 => "11111101110001101", 47 => "00000111010001001", 
    48 => "11111111011010100", 49 => "00000001110011011", 
    50 => "00100011001010111", 51 => "01110101100100101", 
    52 => "00000000000100100", 53 => "00000111001000000", 
    54 => "11111111000111111", 55 => "00000000001010011", 
    56 => "00001101011100101", 57 => "00001011110101111", 
    58 => "11111100111111010", 59 => "11111111110010001", 
    60 => "11111100101101111", 61 => "11111111010010101", 
    62 => "11111001011011001", 63 => "00000000101100111", 
    64 => "00000100111001000", 65 => "11110100110001001", 
    66 => "00000000101101101", 67 => "11111100111001011", 
    68 => "11111110110110100", 69 => "11111001110111101", 
    70 => "00000000000110110", 71 => "00000000001010001", 
    72 => "00000001110100000", 73 => "00000101001011010", 
    74 => "00000000010010011", 75 => "11111101100010000", 
    76 => "11111110010001000", 77 => "11111111010010100", 
    78 => "00000000001100101", 79 => "11100011111001010", 
    80 => "00000001000011000", 81 => "00000000011011100", 
    82 => "11111111100000110", 83 => "11111101101011001", 
    84 => "11111111111101000", 85 => "11110010101001011", 
    86 => "11110100011100011", 87 => "00000100010110101", 
    88 => "00000100101011001", 89 => "11111110110110000", 
    90 => "11111110001101000", 91 => "00000001010011111", 
    92 => "11111110000110101", 93 => "11111110101011000", 
    94 => "00000111011110000", 95 => "11111110110010101", 
    96 => "11111111101100100", 97 => "11111111100110010", 
    98 => "00000001110000111", 99 => "11110111010111111", 
    100 => "11111000111001001", 101 => "11111110111100111", 
    102 => "11111111010110000", 103 => "00001001110100100", 
    104 => "00000010001011110", 105 => "11110111110111001", 
    106 => "11111110110000101", 107 => "11001010110000011", 
    108 => "00000011010011001", 109 => "11111001010110101", 
    110 => "11111111010001101", 111 => "00000001000101111", 
    112 => "00000000101011100", 113 => "11110000110000101", 
    114 => "00000000000010011", 115 => "00000000100001010", 
    116 => "11111111110101000", 117 => "11111111110001000", 
    118 => "11110010111010000", 119 => "00000000011011001", 
    120 => "11111100100011000", 121 => "00000000001110000", 
    122 => "00001101001100100", 123 => "00001001000100101", 
    124 => "00000000000101011", 125 => "11111111110011100", 
    126 => "11111111100011001", 127 => "11111110111000100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActwdI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


