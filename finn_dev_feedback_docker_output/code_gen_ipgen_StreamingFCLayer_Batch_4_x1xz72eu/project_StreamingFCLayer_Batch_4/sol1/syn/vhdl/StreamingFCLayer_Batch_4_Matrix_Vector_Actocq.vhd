-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actocq_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Actocq_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00000111101100110", 1 => "11110100110101011", 
    2 => "11111101100111001", 3 => "11111111000111000", 
    4 => "11111110011010100", 5 => "11111110101010110", 
    6 => "11111111010111011", 7 => "00001001110100100", 
    8 => "01001101100101000", 9 => "11111111111011000", 
    10 => "11111010111001111", 11 => "00000001111110100", 
    12 => "11110110101001110", 13 => "00000001001101001", 
    14 => "00010101111001100", 15 => "11100100010101000", 
    16 => "11111111000000010", 17 => "11111101111010011", 
    18 => "00000111001100011", 19 => "11111011001000000", 
    20 => "00000000100100111", 21 => "00000000001110001", 
    22 => "11111000010111000", 23 => "11111111001001100", 
    24 => "00000011001111101", 25 => "11110010100010000", 
    26 => "11111011101101101", 27 => "11111110011001110", 
    28 => "11111010110111111", 29 => "11111110101010011", 
    30 => "01111110000000001", 31 => "11111110110100111", 
    32 => "11111110101001111", 33 => "00000000111000110", 
    34 => "11111110001000110", 35 => "00000000000011100", 
    36 => "11111110101101100", 37 => "00001000000010011", 
    38 => "11111110100011000", 39 => "00000010011110010", 
    40 => "00001010101101110", 41 => "00000000000111110", 
    42 => "11111110011101011", 43 => "00000001010010101", 
    44 => "00000001110001010", 45 => "00001010010011011", 
    46 => "00000010110111110", 47 => "11111111110001111", 
    48 => "00000010010101110", 49 => "11111111111010111", 
    50 => "00000001011011001", 51 => "11111010011010100", 
    52 => "00001100100110010", 53 => "11111100111110101", 
    54 => "00000001101001110", 55 => "00000000001110000", 
    56 => "11111110101010000", 57 => "00000010100000000", 
    58 => "00000000110100111", 59 => "11111000011010111", 
    60 => "00000101001000001", 61 => "11110111111011101", 
    62 => "11111111001000001", 63 => "11110011010110001", 
    64 => "11111111001111011", 65 => "11111100100001011", 
    66 => "00000000110111110", 67 => "00000100110000101", 
    68 => "00000101101000101", 69 => "00000000101001000", 
    70 => "00010110100001111", 71 => "11111101000000110", 
    72 => "00000001000111011", 73 => "11111101111010010", 
    74 => "00000010011001000", 75 => "00000001100000000", 
    76 => "00000001000111011", 77 => "11111111110000110", 
    78 => "11111111010100101", 79 => "00000001010111101", 
    80 => "11111111011110101", 81 => "00000000111000010", 
    82 => "00001000111001011", 83 => "11110001111011011", 
    84 => "00111000101110111", 85 => "00000010010010001", 
    86 => "00000001101111001", 87 => "11111101010010100", 
    88 => "00001000110101010", 89 => "00000001111101101", 
    90 => "00000001001111011", 91 => "11111110101100111", 
    92 => "00000010101101101", 93 => "00000000101101000", 
    94 => "00000110011110101", 95 => "00000000101100101", 
    96 => "11111111000001010", 97 => "11111111111010000", 
    98 => "11111111111001001", 99 => "11111111011010111", 
    100 => "00000001101110001", 101 => "00011110000110011", 
    102 => "00000000011101100", 103 => "00000001010100100", 
    104 => "11111100001011101", 105 => "11111110100100111", 
    106 => "11111111001010101", 107 => "11110101100111101", 
    108 => "11111110010001111", 109 => "00000001000110011", 
    110 => "11111111110010011", 111 => "11111100111101001", 
    112 => "11110110100110010", 113 => "00000000000010000", 
    114 => "00000000000000010", 115 => "00000111000110000", 
    116 => "11111100101010011", 117 => "00000001100100001", 
    118 => "00000001001101110", 119 => "00000000011100110", 
    120 => "00000010001000100", 121 => "11111110000000101", 
    122 => "00000000110110011", 123 => "11111110110101110", 
    124 => "00010010111100001", 125 => "11111111101000101", 
    126 => "00001110001011100", 127 => "11110100101000001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actocq is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Actocq is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Actocq_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Actocq_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Actocq_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


