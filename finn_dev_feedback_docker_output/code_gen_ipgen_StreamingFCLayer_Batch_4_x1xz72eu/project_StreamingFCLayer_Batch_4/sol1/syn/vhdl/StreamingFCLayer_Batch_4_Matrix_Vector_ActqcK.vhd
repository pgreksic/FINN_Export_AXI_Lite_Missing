-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111000001011", 1 => "00000000100010111", 
    2 => "00000111111100000", 3 => "00000010011101101", 
    4 => "11111001101101000", 5 => "11111110101100010", 
    6 => "00000110010011111", 7 => "00000000100000110", 
    8 => "11111111111101100", 9 => "10111111011000100", 
    10 => "00000000011011111", 11 => "00000100010010010", 
    12 => "00001011011100011", 13 => "11110010111111001", 
    14 => "11111111110111010", 15 => "11111110001100000", 
    16 => "00000011010011100", 17 => "00000001001011000", 
    18 => "11111110000101101", 19 => "11111111101010111", 
    20 => "11111001100110001", 21 => "11111111010110100", 
    22 => "11111110101010011", 23 => "11111110110101010", 
    24 => "00000111101100011", 25 => "00001001011101011", 
    26 => "11111100110100110", 27 => "01111110000000001", 
    28 => "11111111000101011", 29 => "00000001000101101", 
    30 => "00000010011011010", 31 => "00001000001100011", 
    32 => "11111010101110111", 33 => "11101111100000100", 
    34 => "11111110100001001", 35 => "00000000111011101", 
    36 => "00000010110000111", 37 => "00000001010101111", 
    38 => "00001011000101010", 39 => "11111111111111111", 
    40 => "00000011011111110", 41 => "11110110010100011", 
    42 => "11111000001001101", 43 => "11111111111000000", 
    44 => "00000110100101011", 45 => "00000000100110110", 
    46 => "11111101101010111", 47 => "00000110101111111", 
    48 => "11111111001110100", 49 => "00000001101110001", 
    50 => "00010000101111000", 51 => "01000101001101000", 
    52 => "11111111111110111", 53 => "00000110001110010", 
    54 => "11111111000000111", 55 => "00000000000011010", 
    56 => "00001011001101010", 57 => "00001011100100101", 
    58 => "11111100111000111", 59 => "11111111100100010", 
    60 => "11111100100101001", 61 => "11111111001011011", 
    62 => "11111000000000100", 63 => "00000000100100000", 
    64 => "00000100000101000", 65 => "11110011000101100", 
    66 => "00000000100001110", 67 => "11111100100111011", 
    68 => "11111110101010111", 69 => "11110111110100001", 
    70 => "11111111111010001", 71 => "00000000000011101", 
    72 => "00000001101110100", 73 => "00000100110011011", 
    74 => "00000000001000000", 75 => "11111101011011010", 
    76 => "11111110001000001", 77 => "11111111001010000", 
    78 => "00000000000011010", 79 => "11100000010001110", 
    80 => "00000000111101111", 81 => "00000000010010011", 
    82 => "11111111010011111", 83 => "11111101100011011", 
    84 => "11111111110101011", 85 => "11110010000000110", 
    86 => "11110010000001100", 87 => "00000100000000000", 
    88 => "00000100011110001", 89 => "11111110101011001", 
    90 => "11111110000110101", 91 => "00000001001110001", 
    92 => "11111110000000110", 93 => "11111110100010011", 
    94 => "00000111000110111", 95 => "11111110101011001", 
    96 => "11111111100011000", 97 => "11111101110011101", 
    98 => "00000000000010000", 99 => "11110000101011111", 
    100 => "11111000100101101", 101 => "11111110110111100", 
    102 => "11111111001001101", 103 => "00000111011000010", 
    104 => "00000010000011011", 105 => "11110111100100111", 
    106 => "11111110100110101", 107 => "11000011011000001", 
    108 => "00000011001101100", 109 => "11111000010101101", 
    110 => "11111111000111000", 111 => "00000000111100000", 
    112 => "00000000011101100", 113 => "11101110101101110", 
    114 => "11111111111000000", 115 => "00000000011010000", 
    116 => "11111111101101101", 117 => "11111111101001101", 
    118 => "11110010000110011", 119 => "00000000010001010", 
    120 => "11111100011101010", 121 => "11111111111110001", 
    122 => "00001100100110011", 123 => "00001000110001101", 
    124 => "11111111111111000", 125 => "11111111101011110", 
    126 => "11111111011000111", 127 => "11111110101001010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


