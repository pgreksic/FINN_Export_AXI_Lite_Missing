-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS_rom is 
    generic(
             DWIDTH     : integer := 17; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111000111111", 1 => "00000000101011111", 
    2 => "00001000100001011", 3 => "00000010101110100", 
    4 => "11111010111100000", 5 => "11111110110110001", 
    6 => "00001101001010100", 7 => "00000000101000001", 
    8 => "00000000000110101", 9 => "11100001001110101", 
    10 => "00000000100100011", 11 => "00000100100111100", 
    12 => "00001011111000000", 13 => "11110100110101001", 
    14 => "11111111111101110", 15 => "11111111011110000", 
    16 => "00000011011001000", 17 => "00000001010010000", 
    18 => "11111110100000011", 19 => "11111111110101001", 
    20 => "11111010000010110", 21 => "11111111100011110", 
    22 => "11111110110100110", 23 => "11111110111100101", 
    24 => "00001000011111101", 25 => "00001010000011000", 
    26 => "11111100111100011", 27 => "01111110000000001", 
    28 => "11111111001110110", 29 => "00000001001111000", 
    30 => "00000010101001000", 31 => "00001001000001000", 
    32 => "11111011001000000", 33 => "11110010110000100", 
    34 => "11111110110100000", 35 => "00000001000111110", 
    36 => "00000010111010101", 37 => "00000001011100010", 
    38 => "00011001000101001", 39 => "00000000000111110", 
    40 => "00000011101001111", 41 => "11111000111011100", 
    42 => "11111000100010101", 43 => "11111111111111101", 
    44 => "00000111010111010", 45 => "00000000110110101", 
    46 => "11111101110010110", 47 => "00000111010110101", 
    48 => "11111111011100011", 49 => "00000001110100010", 
    50 => "00100110001111101", 51 => "01111101101000101", 
    52 => "00000000000101011", 53 => "00000111010001101", 
    54 => "11111111001001001", 55 => "00000000001011101", 
    56 => "00001101110100101", 57 => "00001011111000110", 
    58 => "11111101000000011", 59 => "11111111110100100", 
    60 => "11111100101111011", 61 => "11111111010011111", 
    62 => "11111001101010010", 63 => "00000000101110011", 
    64 => "00000101000001101", 65 => "11110101000011001", 
    66 => "00000000101111101", 67 => "11111100111100010", 
    68 => "11111110111000011", 69 => "11111010001101100", 
    70 => "00000000001000111", 71 => "00000000001011001", 
    72 => "00000001110100111", 73 => "00000101001111010", 
    74 => "00000000010100001", 75 => "11111101100011001", 
    76 => "11111110010010100", 77 => "11111111010100000", 
    78 => "00000000001110010", 79 => "11100100011111111", 
    80 => "00000001000011111", 81 => "00000000011101001", 
    82 => "11111111100010111", 83 => "11111101101100011", 
    84 => "11111111111110010", 85 => "11110010110000001", 
    86 => "11110100110110001", 87 => "00000100011010011", 
    88 => "00000100101101011", 89 => "11111110110111110", 
    90 => "11111110001110000", 91 => "00000001010100110", 
    92 => "11111110000111101", 93 => "11111110101100011", 
    94 => "00000111100001111", 95 => "11111110110011111", 
    96 => "11111111101110000", 97 => "11111111111001010", 
    98 => "00000010000011011", 99 => "11111000011111001", 
    100 => "11111000111100011", 101 => "11111110111101110", 
    102 => "11111111011000000", 103 => "00001010001110101", 
    104 => "00000010001101010", 105 => "11110111111010001", 
    106 => "11111110110010010", 107 => "11001011111111001", 
    108 => "00000011010100001", 109 => "11111001100001100", 
    110 => "11111111010011011", 111 => "00000001000111100", 
    112 => "00000000101101110", 113 => "11110001000110011", 
    114 => "00000000000100001", 115 => "00000000100010100", 
    116 => "11111111110110010", 117 => "11111111110010010", 
    118 => "11110011000010101", 119 => "00000000011100111", 
    120 => "11111100100100000", 121 => "00000000010000101", 
    122 => "00001101010010111", 123 => "00001001000111110", 
    124 => "00000000000110100", 125 => "11111111110100110", 
    126 => "11111111100100111", 127 => "11111110111011001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS is
    generic (
        DataWidth : INTEGER := 17;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActxdS_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


