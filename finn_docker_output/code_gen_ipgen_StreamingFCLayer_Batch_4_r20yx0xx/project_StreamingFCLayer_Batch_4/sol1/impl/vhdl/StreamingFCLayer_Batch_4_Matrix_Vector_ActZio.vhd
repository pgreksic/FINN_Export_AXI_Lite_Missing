-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActZio_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActZio_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000010111111", 1 => "1111111001010100", 2 => "1111100110001101", 
    3 => "1111100010000101", 4 => "0000001101011110", 5 => "1111111101001100", 
    6 => "0000011101001101", 7 => "1111111111111100", 8 => "1111111101001100", 
    9 => "1111101010011111", 10 => "1111110001111111", 11 => "1111101101111010", 
    12 => "0000000001100110", 13 => "0000000001100101", 14 => "0000000000100110", 
    15 => "1100011110110000", 16 => "1111111011000010", 17 => "1111111011010001", 
    18 => "0000101001011110", 19 => "1111110011111111", 20 => "1111011110011001", 
    21 => "0000010001011001", 22 => "1111110000000000", 23 => "1100001110110100", 
    24 => "0000011110001110", 25 => "0000000111001011", 26 => "1111110001110100", 
    27 => "0000100111001100", 28 => "0000000001000101", 29 => "0000001001011000", 
    30 => "0111000000000001", 31 => "0000001100010010", 32 => "1111101111101111", 
    33 => "0000001001011111", 34 => "1111111011001101", 35 => "0000011111000011", 
    36 => "0000001111011100", 37 => "1111011110011011", 38 => "1110110101100100", 
    39 => "0111000000000001", 40 => "0000010010100011", 41 => "1111111001110011", 
    42 => "0000110011111111", 43 => "0000010001000011", 44 => "0000001100001100", 
    45 => "0000001110100100", 46 => "0000100011010000", 47 => "0000101000101011", 
    48 => "0000000001100011", 49 => "0000001111101100", 50 => "1111111110000000", 
    51 => "1111111100101110", 52 => "0000000001011001", 53 => "1111010111100100", 
    54 => "0000001011010110", 55 => "0000010011111001", 56 => "1111110110000011", 
    57 => "1111101010100000", 58 => "1111011011011100", 59 => "1111110001101000", 
    60 => "0000001001000011", 61 => "0000100100111100", 62 => "0000001111010101", 
    63 => "0000001010111111", 64 => "0000011110101111", 65 => "1111100110101011", 
    66 => "0000111001111001", 67 => "0000000011011010", 68 => "1111110101110000", 
    69 => "0000001000010100", 70 => "0000100101000110", 71 => "0000001001001101", 
    72 => "0000001011101000", 73 => "1111110111010001", 74 => "1111101000101011", 
    75 => "0000100010100000", 76 => "0000001100011001", 77 => "0000010101100000", 
    78 => "0000100010010010", 79 => "1111111100110111", 80 => "0000001010101100", 
    81 => "0000110101011000", 82 => "0000001001011000", 83 => "0000000100000110", 
    84 => "1111111111101101", 85 => "1111101101001001", 86 => "1111111111111110", 
    87 => "0000001110000100", 88 => "0000010010011010", 89 => "1110101101111110", 
    90 => "0000111111000111", 91 => "0000001101101100", 92 => "0000000001011001", 
    93 => "0000011101000000", 94 => "0000001100011111", 95 => "0001011110001111", 
    96 => "1111000010001101", 97 => "1111000101000101", 98 => "1111110111001111", 
    99 => "1111110100011011", 100 => "0010010010111111", 101 => "1111101010000010", 
    102 => "1111111111100001", 103 => "1111101010110011", 104 => "1111110101111110", 
    105 => "0000010010110011", 106 => "0000011010111101", 107 => "1111110110011001", 
    108 => "0000000000100100", 109 => "1111110110011010", 110 => "0000010111000101", 
    111 => "0000011000001101", 112 => "1111111000111011", 113 => "0000110010000000", 
    114 => "1111111101011101", 115 => "1111111111001101", 116 => "0000000100001101", 
    117 => "0000000001011010", 118 => "0000000000011010", 119 => "0000000000010110", 
    120 => "1111101000101110", 121 => "1111111001000101", 122 => "0000001011111011", 
    123 => "0000001101110000", 124 => "0100000111101010", 125 => "0000000010110000", 
    126 => "0000001110100100", 127 => "1111110111010000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActZio is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActZio is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActZio_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActZio_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActZio_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


