-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111010110100", 1 => "0001110100101111", 2 => "0011011111110100", 
    3 => "0000011011001101", 4 => "1111100001011110", 5 => "0000000100110010", 
    6 => "1111111101010110", 7 => "1111101100001000", 8 => "1111111001000000", 
    9 => "0000001110010000", 10 => "1111110100010001", 11 => "1111101000101011", 
    12 => "0000011010000100", 13 => "1111110101011100", 14 => "1111111111111110", 
    15 => "0000001001011110", 16 => "0000000111001100", 17 => "1111111101100011", 
    18 => "0000001000000011", 19 => "0000010010101100", 20 => "0000001011100001", 
    21 => "1111011110100101", 22 => "1111110110011010", 23 => "1111110010111001", 
    24 => "0000001100001010", 25 => "0000001111001010", 26 => "0000001011111001", 
    27 => "1111100110010111", 28 => "0000000110101110", 29 => "1101001001000000", 
    30 => "1111101000110000", 31 => "0000010001000101", 32 => "1111110110101111", 
    33 => "0000000000000010", 34 => "1111000111101011", 35 => "1111111010010011", 
    36 => "0000000101000010", 37 => "1110110101010111", 38 => "0000001010011111", 
    39 => "0000000010111110", 40 => "0001010001010101", 41 => "1111000111010011", 
    42 => "0000000011011101", 43 => "1111110111000111", 44 => "0001100101011011", 
    45 => "0000010110011010", 46 => "1111111010110001", 47 => "0000010011011010", 
    48 => "0000000001001011", 49 => "1011001001011000", 50 => "1111101000011100", 
    51 => "1111001111011001", 52 => "1110000011011011", 53 => "1111110110010010", 
    54 => "0000100100000111", 55 => "0000000010100111", 56 => "0000011110000001", 
    57 => "1111101000010000", 58 => "0000000111011100", 59 => "1111101010001111", 
    60 => "1111111110111110", 61 => "1111011100010111", 62 => "0000001000001111", 
    63 => "0000000100101010", 64 => "0000001101101101", 65 => "0000001010101110", 
    66 => "0000001111011011", 67 => "0000011010101100", 68 => "1111110110111000", 
    69 => "0000000111101101", 70 => "0000010100100000", 71 => "0001001101011000", 
    72 => "0000000100101000", 73 => "1111101010101110", 74 => "0000000101101111", 
    75 => "1111111100010111", 76 => "1110110110001101", 77 => "0000000011111001", 
    78 => "1111111011010011", 79 => "1111100111010001", 80 => "0000010111101010", 
    81 => "1111110101000011", 82 => "0000010100000000", 83 => "0000001010100000", 
    84 => "0000000000000001", 85 => "0000001100101100", 86 => "1111011110101011", 
    87 => "0000010000000001", 88 => "0000011011001011", 89 => "0000000010100010", 
    90 => "0000000111100000", 91 => "0000000100011011", 92 => "1111111111010101", 
    93 => "0000000011110001", 94 => "1110111100110111", 95 => "1111110011111101", 
    96 => "1111111100010110", 97 => "1111111100001000", 98 => "1111111010000010", 
    99 => "1111100011010101", 100 => "0000000001001010", 101 => "1111010111000111", 
    102 => "0000000110001110", 103 => "0000100111100001", 104 => "0000000011001101", 
    105 => "0000000000000000", 106 => "0000010101000010", 107 => "0000001011001100", 
    108 => "0000010100011010", 109 => "0000011000011101", 110 => "1110101000101101", 
    111 => "0000000011001011", 112 => "1110000111010000", 113 => "0000001011011100", 
    114 => "0000001011010001", 115 => "0000010101011001", 116 => "1111010011000000", 
    117 => "0100100110101000", 118 => "1111111111110011", 119 => "1111110100000111", 
    120 => "1111111111110101", 121 => "0000001001010000", 122 => "1111100100110111", 
    123 => "1111110011110011", 124 => "0111000000000001", 125 => "0000110100011011", 
    126 => "0001101111011000", 127 => "1111111111000110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActCeG_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


