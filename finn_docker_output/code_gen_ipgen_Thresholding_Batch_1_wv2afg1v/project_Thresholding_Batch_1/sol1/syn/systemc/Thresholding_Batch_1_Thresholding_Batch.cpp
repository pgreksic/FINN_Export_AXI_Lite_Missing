// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Thresholding_Batch_1_Thresholding_Batch.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Thresholding_Batch_1_Thresholding_Batch::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Thresholding_Batch_1_Thresholding_Batch::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Thresholding_Batch_1_Thresholding_Batch::ap_ST_fsm_state1 = "1";
const sc_lv<3> Thresholding_Batch_1_Thresholding_Batch::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Thresholding_Batch_1_Thresholding_Batch::ap_ST_fsm_state5 = "100";
const bool Thresholding_Batch_1_Thresholding_Batch::ap_const_boolean_1 = true;
const sc_lv<32> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv32_1 = "1";
const bool Thresholding_Batch_1_Thresholding_Batch::ap_const_boolean_0 = false;
const sc_lv<1> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv1_0 = "0";
const sc_lv<1> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv1_1 = "1";
const sc_lv<14> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv14_0 = "00000000000000";
const sc_lv<14> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv14_3200 = "11001000000000";
const sc_lv<14> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv14_1 = "1";
const sc_lv<32> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv32_80 = "10000000";
const sc_lv<4> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv4_A = "1010";
const sc_lv<4> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv4_9 = "1001";
const sc_lv<32> Thresholding_Batch_1_Thresholding_Batch::ap_const_lv32_2 = "10";

Thresholding_Batch_1_Thresholding_Batch::Thresholding_Batch_1_Thresholding_Batch(sc_module_name name) : sc_module(name), mVcdFile(0) {
    threshs_m_thresholds_13_U = new Thresholding_Batch_1_Thresholding_Batcbkb("threshs_m_thresholds_13_U");
    threshs_m_thresholds_13_U->clk(ap_clk);
    threshs_m_thresholds_13_U->reset(ap_rst);
    threshs_m_thresholds_13_U->address0(threshs_m_thresholds_13_address0);
    threshs_m_thresholds_13_U->ce0(threshs_m_thresholds_13_ce0);
    threshs_m_thresholds_13_U->q0(threshs_m_thresholds_13_q0);
    threshs_m_thresholds_12_U = new Thresholding_Batch_1_Thresholding_Batccud("threshs_m_thresholds_12_U");
    threshs_m_thresholds_12_U->clk(ap_clk);
    threshs_m_thresholds_12_U->reset(ap_rst);
    threshs_m_thresholds_12_U->address0(threshs_m_thresholds_12_address0);
    threshs_m_thresholds_12_U->ce0(threshs_m_thresholds_12_ce0);
    threshs_m_thresholds_12_U->q0(threshs_m_thresholds_12_q0);
    threshs_m_thresholds_7_U = new Thresholding_Batch_1_Thresholding_BatcdEe("threshs_m_thresholds_7_U");
    threshs_m_thresholds_7_U->clk(ap_clk);
    threshs_m_thresholds_7_U->reset(ap_rst);
    threshs_m_thresholds_7_U->address0(threshs_m_thresholds_7_address0);
    threshs_m_thresholds_7_U->ce0(threshs_m_thresholds_7_ce0);
    threshs_m_thresholds_7_U->q0(threshs_m_thresholds_7_q0);
    threshs_m_thresholds_6_U = new Thresholding_Batch_1_Thresholding_BatceOg("threshs_m_thresholds_6_U");
    threshs_m_thresholds_6_U->clk(ap_clk);
    threshs_m_thresholds_6_U->reset(ap_rst);
    threshs_m_thresholds_6_U->address0(threshs_m_thresholds_6_address0);
    threshs_m_thresholds_6_U->ce0(threshs_m_thresholds_6_ce0);
    threshs_m_thresholds_6_U->q0(threshs_m_thresholds_6_q0);
    threshs_m_thresholds_5_U = new Thresholding_Batch_1_Thresholding_BatcfYi("threshs_m_thresholds_5_U");
    threshs_m_thresholds_5_U->clk(ap_clk);
    threshs_m_thresholds_5_U->reset(ap_rst);
    threshs_m_thresholds_5_U->address0(threshs_m_thresholds_5_address0);
    threshs_m_thresholds_5_U->ce0(threshs_m_thresholds_5_ce0);
    threshs_m_thresholds_5_U->q0(threshs_m_thresholds_5_q0);
    threshs_m_thresholds_4_U = new Thresholding_Batch_1_Thresholding_Batcg8j("threshs_m_thresholds_4_U");
    threshs_m_thresholds_4_U->clk(ap_clk);
    threshs_m_thresholds_4_U->reset(ap_rst);
    threshs_m_thresholds_4_U->address0(threshs_m_thresholds_4_address0);
    threshs_m_thresholds_4_U->ce0(threshs_m_thresholds_4_ce0);
    threshs_m_thresholds_4_U->q0(threshs_m_thresholds_4_q0);
    threshs_m_thresholds_3_U = new Thresholding_Batch_1_Thresholding_Batchbi("threshs_m_thresholds_3_U");
    threshs_m_thresholds_3_U->clk(ap_clk);
    threshs_m_thresholds_3_U->reset(ap_rst);
    threshs_m_thresholds_3_U->address0(threshs_m_thresholds_3_address0);
    threshs_m_thresholds_3_U->ce0(threshs_m_thresholds_3_ce0);
    threshs_m_thresholds_3_U->q0(threshs_m_thresholds_3_q0);
    threshs_m_thresholds_2_U = new Thresholding_Batch_1_Thresholding_Batcibs("threshs_m_thresholds_2_U");
    threshs_m_thresholds_2_U->clk(ap_clk);
    threshs_m_thresholds_2_U->reset(ap_rst);
    threshs_m_thresholds_2_U->address0(threshs_m_thresholds_2_address0);
    threshs_m_thresholds_2_U->ce0(threshs_m_thresholds_2_ce0);
    threshs_m_thresholds_2_U->q0(threshs_m_thresholds_2_q0);
    threshs_m_thresholds_1_U = new Thresholding_Batch_1_Thresholding_BatcjbC("threshs_m_thresholds_1_U");
    threshs_m_thresholds_1_U->clk(ap_clk);
    threshs_m_thresholds_1_U->reset(ap_rst);
    threshs_m_thresholds_1_U->address0(threshs_m_thresholds_1_address0);
    threshs_m_thresholds_1_U->ce0(threshs_m_thresholds_1_ce0);
    threshs_m_thresholds_1_U->q0(threshs_m_thresholds_1_q0);
    threshs_m_thresholds_U = new Thresholding_Batch_1_Thresholding_BatckbM("threshs_m_thresholds_U");
    threshs_m_thresholds_U->clk(ap_clk);
    threshs_m_thresholds_U->reset(ap_rst);
    threshs_m_thresholds_U->address0(threshs_m_thresholds_address0);
    threshs_m_thresholds_U->ce0(threshs_m_thresholds_ce0);
    threshs_m_thresholds_U->q0(threshs_m_thresholds_q0);
    threshs_m_thresholds_11_U = new Thresholding_Batch_1_Thresholding_BatclbW("threshs_m_thresholds_11_U");
    threshs_m_thresholds_11_U->clk(ap_clk);
    threshs_m_thresholds_11_U->reset(ap_rst);
    threshs_m_thresholds_11_U->address0(threshs_m_thresholds_11_address0);
    threshs_m_thresholds_11_U->ce0(threshs_m_thresholds_11_ce0);
    threshs_m_thresholds_11_U->q0(threshs_m_thresholds_11_q0);
    threshs_m_thresholds_10_U = new Thresholding_Batch_1_Thresholding_Batcmb6("threshs_m_thresholds_10_U");
    threshs_m_thresholds_10_U->clk(ap_clk);
    threshs_m_thresholds_10_U->reset(ap_rst);
    threshs_m_thresholds_10_U->address0(threshs_m_thresholds_10_address0);
    threshs_m_thresholds_10_U->ce0(threshs_m_thresholds_10_ce0);
    threshs_m_thresholds_10_U->q0(threshs_m_thresholds_10_q0);
    threshs_m_thresholds_9_U = new Thresholding_Batch_1_Thresholding_Batcncg("threshs_m_thresholds_9_U");
    threshs_m_thresholds_9_U->clk(ap_clk);
    threshs_m_thresholds_9_U->reset(ap_rst);
    threshs_m_thresholds_9_U->address0(threshs_m_thresholds_9_address0);
    threshs_m_thresholds_9_U->ce0(threshs_m_thresholds_9_ce0);
    threshs_m_thresholds_9_U->q0(threshs_m_thresholds_9_q0);
    threshs_m_thresholds_8_U = new Thresholding_Batch_1_Thresholding_Batcocq("threshs_m_thresholds_8_U");
    threshs_m_thresholds_8_U->clk(ap_clk);
    threshs_m_thresholds_8_U->reset(ap_rst);
    threshs_m_thresholds_8_U->address0(threshs_m_thresholds_8_address0);
    threshs_m_thresholds_8_U->ce0(threshs_m_thresholds_8_ce0);
    threshs_m_thresholds_8_U->q0(threshs_m_thresholds_8_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln700_10_fu_693_p2);
    sensitive << ( zext_ln700_7_fu_689_p1 );
    sensitive << ( zext_ln700_6_fu_679_p1 );

    SC_METHOD(thread_add_ln700_11_fu_699_p2);
    sensitive << ( add_ln700_10_fu_693_p2 );
    sensitive << ( zext_ln700_5_fu_669_p1 );

    SC_METHOD(thread_add_ln700_1_fu_615_p2);
    sensitive << ( zext_ln700_1_fu_611_p1 );
    sensitive << ( select_ln700_fu_498_p3 );

    SC_METHOD(thread_add_ln700_2_fu_621_p2);
    sensitive << ( zext_ln142_3_fu_529_p1 );
    sensitive << ( zext_ln142_4_fu_538_p1 );

    SC_METHOD(thread_add_ln700_3_fu_631_p2);
    sensitive << ( zext_ln142_5_fu_547_p1 );
    sensitive << ( zext_ln142_6_fu_556_p1 );

    SC_METHOD(thread_add_ln700_4_fu_641_p2);
    sensitive << ( zext_ln700_3_fu_637_p1 );
    sensitive << ( zext_ln700_2_fu_627_p1 );

    SC_METHOD(thread_add_ln700_5_fu_651_p2);
    sensitive << ( zext_ln700_4_fu_647_p1 );
    sensitive << ( add_ln700_1_fu_615_p2 );

    SC_METHOD(thread_add_ln700_6_fu_657_p2);
    sensitive << ( zext_ln142_8_fu_563_p1 );
    sensitive << ( zext_ln142_9_fu_566_p1 );

    SC_METHOD(thread_add_ln700_7_fu_663_p2);
    sensitive << ( add_ln700_6_fu_657_p2 );
    sensitive << ( zext_ln142_7_fu_560_p1 );

    SC_METHOD(thread_add_ln700_8_fu_673_p2);
    sensitive << ( zext_ln142_10_fu_574_p1 );
    sensitive << ( zext_ln142_11_fu_583_p1 );

    SC_METHOD(thread_add_ln700_9_fu_683_p2);
    sensitive << ( zext_ln142_12_fu_592_p1 );
    sensitive << ( zext_ln700_fu_601_p1 );

    SC_METHOD(thread_add_ln700_fu_605_p2);
    sensitive << ( zext_ln142_1_fu_511_p1 );
    sensitive << ( zext_ln142_2_fu_520_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( icmp_ln221_fu_299_p2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( out_V_V_TREADY );
    sensitive << ( icmp_ln221_reg_720_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln221_fu_299_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_305_p2);
    sensitive << ( i_0_reg_288 );

    SC_METHOD(thread_icmp_ln221_fu_299_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_reg_288 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln235_fu_335_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( nf_fu_329_p2 );

    SC_METHOD(thread_icmp_ln899_10_fu_461_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_10_fu_457_p1 );

    SC_METHOD(thread_icmp_ln899_11_fu_470_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_11_fu_466_p1 );

    SC_METHOD(thread_icmp_ln899_12_fu_479_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_12_fu_475_p1 );

    SC_METHOD(thread_icmp_ln899_13_fu_488_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_13_fu_484_p1 );

    SC_METHOD(thread_icmp_ln899_1_fu_362_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_1_fu_358_p1 );

    SC_METHOD(thread_icmp_ln899_2_fu_371_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_2_fu_367_p1 );

    SC_METHOD(thread_icmp_ln899_3_fu_380_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_3_fu_376_p1 );

    SC_METHOD(thread_icmp_ln899_4_fu_389_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_4_fu_385_p1 );

    SC_METHOD(thread_icmp_ln899_5_fu_398_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_5_fu_394_p1 );

    SC_METHOD(thread_icmp_ln899_6_fu_407_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_6_fu_403_p1 );

    SC_METHOD(thread_icmp_ln899_7_fu_416_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_7_fu_412_p1 );

    SC_METHOD(thread_icmp_ln899_8_fu_431_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_8_fu_427_p1 );

    SC_METHOD(thread_icmp_ln899_9_fu_446_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_9_fu_442_p1 );

    SC_METHOD(thread_icmp_ln899_fu_353_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln221_reg_720 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_1_reg_729 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln142_fu_349_p1 );

    SC_METHOD(thread_in_V_V_TDATA_blk_n);
    sensitive << ( in_V_V_TVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln221_fu_299_p2 );

    SC_METHOD(thread_in_V_V_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_nf_1_fu_341_p3);
    sensitive << ( nf_fu_329_p2 );
    sensitive << ( icmp_ln235_fu_335_p2 );

    SC_METHOD(thread_nf_fu_329_p2);
    sensitive << ( nf_assign_reg_277 );

    SC_METHOD(thread_out_V_V_TDATA);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln221_reg_720_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_V_fu_709_p2 );

    SC_METHOD(thread_out_V_V_TDATA_blk_n);
    sensitive << ( out_V_V_TREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln221_reg_720_pp0_iter1_reg );

    SC_METHOD(thread_out_V_V_TVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln221_reg_720_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln700_fu_498_p3);
    sensitive << ( xor_ln899_fu_493_p2 );

    SC_METHOD(thread_sext_ln142_10_fu_457_p1);
    sensitive << ( threshs_m_thresholds_11_q0 );

    SC_METHOD(thread_sext_ln142_11_fu_466_p1);
    sensitive << ( threshs_m_thresholds_10_q0 );

    SC_METHOD(thread_sext_ln142_12_fu_475_p1);
    sensitive << ( threshs_m_thresholds_9_q0 );

    SC_METHOD(thread_sext_ln142_13_fu_484_p1);
    sensitive << ( threshs_m_thresholds_8_q0 );

    SC_METHOD(thread_sext_ln142_1_fu_358_p1);
    sensitive << ( threshs_m_thresholds_12_q0 );

    SC_METHOD(thread_sext_ln142_2_fu_367_p1);
    sensitive << ( threshs_m_thresholds_7_q0 );

    SC_METHOD(thread_sext_ln142_3_fu_376_p1);
    sensitive << ( threshs_m_thresholds_6_q0 );

    SC_METHOD(thread_sext_ln142_4_fu_385_p1);
    sensitive << ( threshs_m_thresholds_5_q0 );

    SC_METHOD(thread_sext_ln142_5_fu_394_p1);
    sensitive << ( threshs_m_thresholds_4_q0 );

    SC_METHOD(thread_sext_ln142_6_fu_403_p1);
    sensitive << ( threshs_m_thresholds_3_q0 );

    SC_METHOD(thread_sext_ln142_7_fu_412_p1);
    sensitive << ( threshs_m_thresholds_2_q0 );

    SC_METHOD(thread_sext_ln142_8_fu_427_p1);
    sensitive << ( threshs_m_thresholds_1_q0 );

    SC_METHOD(thread_sext_ln142_9_fu_442_p1);
    sensitive << ( threshs_m_thresholds_q0 );

    SC_METHOD(thread_sext_ln142_fu_349_p1);
    sensitive << ( threshs_m_thresholds_13_q0 );

    SC_METHOD(thread_threshs_m_thresholds_10_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_10_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_11_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_12_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_13_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_13_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_8_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_9_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshs_m_thresholds_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln142_fu_311_p1 );

    SC_METHOD(thread_threshs_m_thresholds_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_V_fu_709_p2);
    sensitive << ( zext_ln700_8_fu_705_p1 );
    sensitive << ( add_ln700_5_fu_651_p2 );

    SC_METHOD(thread_xor_ln899_10_fu_569_p2);
    sensitive << ( icmp_ln899_10_reg_872 );

    SC_METHOD(thread_xor_ln899_11_fu_578_p2);
    sensitive << ( icmp_ln899_11_reg_877 );

    SC_METHOD(thread_xor_ln899_12_fu_587_p2);
    sensitive << ( icmp_ln899_12_reg_882 );

    SC_METHOD(thread_xor_ln899_13_fu_596_p2);
    sensitive << ( icmp_ln899_13_reg_887 );

    SC_METHOD(thread_xor_ln899_1_fu_506_p2);
    sensitive << ( icmp_ln899_1_reg_827 );

    SC_METHOD(thread_xor_ln899_2_fu_515_p2);
    sensitive << ( icmp_ln899_2_reg_832 );

    SC_METHOD(thread_xor_ln899_3_fu_524_p2);
    sensitive << ( icmp_ln899_3_reg_837 );

    SC_METHOD(thread_xor_ln899_4_fu_533_p2);
    sensitive << ( icmp_ln899_4_reg_842 );

    SC_METHOD(thread_xor_ln899_5_fu_542_p2);
    sensitive << ( icmp_ln899_5_reg_847 );

    SC_METHOD(thread_xor_ln899_6_fu_551_p2);
    sensitive << ( icmp_ln899_6_reg_852 );

    SC_METHOD(thread_xor_ln899_7_fu_421_p2);
    sensitive << ( icmp_ln899_7_fu_416_p2 );

    SC_METHOD(thread_xor_ln899_8_fu_436_p2);
    sensitive << ( icmp_ln899_8_fu_431_p2 );

    SC_METHOD(thread_xor_ln899_9_fu_451_p2);
    sensitive << ( icmp_ln899_9_fu_446_p2 );

    SC_METHOD(thread_xor_ln899_fu_493_p2);
    sensitive << ( icmp_ln899_reg_822 );

    SC_METHOD(thread_zext_ln142_10_fu_574_p1);
    sensitive << ( xor_ln899_10_fu_569_p2 );

    SC_METHOD(thread_zext_ln142_11_fu_583_p1);
    sensitive << ( xor_ln899_11_fu_578_p2 );

    SC_METHOD(thread_zext_ln142_12_fu_592_p1);
    sensitive << ( xor_ln899_12_fu_587_p2 );

    SC_METHOD(thread_zext_ln142_1_fu_511_p1);
    sensitive << ( xor_ln899_1_fu_506_p2 );

    SC_METHOD(thread_zext_ln142_2_fu_520_p1);
    sensitive << ( xor_ln899_2_fu_515_p2 );

    SC_METHOD(thread_zext_ln142_3_fu_529_p1);
    sensitive << ( xor_ln899_3_fu_524_p2 );

    SC_METHOD(thread_zext_ln142_4_fu_538_p1);
    sensitive << ( xor_ln899_4_fu_533_p2 );

    SC_METHOD(thread_zext_ln142_5_fu_547_p1);
    sensitive << ( xor_ln899_5_fu_542_p2 );

    SC_METHOD(thread_zext_ln142_6_fu_556_p1);
    sensitive << ( xor_ln899_6_fu_551_p2 );

    SC_METHOD(thread_zext_ln142_7_fu_560_p1);
    sensitive << ( xor_ln899_7_reg_857 );

    SC_METHOD(thread_zext_ln142_8_fu_563_p1);
    sensitive << ( xor_ln899_8_reg_862 );

    SC_METHOD(thread_zext_ln142_9_fu_566_p1);
    sensitive << ( xor_ln899_9_reg_867 );

    SC_METHOD(thread_zext_ln142_fu_311_p1);
    sensitive << ( nf_assign_reg_277 );

    SC_METHOD(thread_zext_ln700_1_fu_611_p1);
    sensitive << ( add_ln700_fu_605_p2 );

    SC_METHOD(thread_zext_ln700_2_fu_627_p1);
    sensitive << ( add_ln700_2_fu_621_p2 );

    SC_METHOD(thread_zext_ln700_3_fu_637_p1);
    sensitive << ( add_ln700_3_fu_631_p2 );

    SC_METHOD(thread_zext_ln700_4_fu_647_p1);
    sensitive << ( add_ln700_4_fu_641_p2 );

    SC_METHOD(thread_zext_ln700_5_fu_669_p1);
    sensitive << ( add_ln700_7_fu_663_p2 );

    SC_METHOD(thread_zext_ln700_6_fu_679_p1);
    sensitive << ( add_ln700_8_fu_673_p2 );

    SC_METHOD(thread_zext_ln700_7_fu_689_p1);
    sensitive << ( add_ln700_9_fu_683_p2 );

    SC_METHOD(thread_zext_ln700_8_fu_705_p1);
    sensitive << ( add_ln700_11_fu_699_p2 );

    SC_METHOD(thread_zext_ln700_fu_601_p1);
    sensitive << ( xor_ln899_13_fu_596_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln221_fu_299_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Thresholding_Batch_1_Thresholding_Batch_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_TDATA, "(port)in_V_V_TDATA");
    sc_trace(mVcdFile, in_V_V_TVALID, "(port)in_V_V_TVALID");
    sc_trace(mVcdFile, in_V_V_TREADY, "(port)in_V_V_TREADY");
    sc_trace(mVcdFile, out_V_V_TDATA, "(port)out_V_V_TDATA");
    sc_trace(mVcdFile, out_V_V_TVALID, "(port)out_V_V_TVALID");
    sc_trace(mVcdFile, out_V_V_TREADY, "(port)out_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, threshs_m_thresholds_13_address0, "threshs_m_thresholds_13_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_13_ce0, "threshs_m_thresholds_13_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_13_q0, "threshs_m_thresholds_13_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_12_address0, "threshs_m_thresholds_12_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_12_ce0, "threshs_m_thresholds_12_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_12_q0, "threshs_m_thresholds_12_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_7_address0, "threshs_m_thresholds_7_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_7_ce0, "threshs_m_thresholds_7_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_7_q0, "threshs_m_thresholds_7_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_6_address0, "threshs_m_thresholds_6_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_6_ce0, "threshs_m_thresholds_6_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_6_q0, "threshs_m_thresholds_6_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_5_address0, "threshs_m_thresholds_5_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_5_ce0, "threshs_m_thresholds_5_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_5_q0, "threshs_m_thresholds_5_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_4_address0, "threshs_m_thresholds_4_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_4_ce0, "threshs_m_thresholds_4_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_4_q0, "threshs_m_thresholds_4_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_3_address0, "threshs_m_thresholds_3_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_3_ce0, "threshs_m_thresholds_3_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_3_q0, "threshs_m_thresholds_3_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_2_address0, "threshs_m_thresholds_2_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_2_ce0, "threshs_m_thresholds_2_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_2_q0, "threshs_m_thresholds_2_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_1_address0, "threshs_m_thresholds_1_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_1_ce0, "threshs_m_thresholds_1_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_1_q0, "threshs_m_thresholds_1_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_address0, "threshs_m_thresholds_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_ce0, "threshs_m_thresholds_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_q0, "threshs_m_thresholds_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_11_address0, "threshs_m_thresholds_11_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_11_ce0, "threshs_m_thresholds_11_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_11_q0, "threshs_m_thresholds_11_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_10_address0, "threshs_m_thresholds_10_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_10_ce0, "threshs_m_thresholds_10_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_10_q0, "threshs_m_thresholds_10_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_9_address0, "threshs_m_thresholds_9_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_9_ce0, "threshs_m_thresholds_9_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_9_q0, "threshs_m_thresholds_9_q0");
    sc_trace(mVcdFile, threshs_m_thresholds_8_address0, "threshs_m_thresholds_8_address0");
    sc_trace(mVcdFile, threshs_m_thresholds_8_ce0, "threshs_m_thresholds_8_ce0");
    sc_trace(mVcdFile, threshs_m_thresholds_8_q0, "threshs_m_thresholds_8_q0");
    sc_trace(mVcdFile, in_V_V_TDATA_blk_n, "in_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln221_fu_299_p2, "icmp_ln221_fu_299_p2");
    sc_trace(mVcdFile, out_V_V_TDATA_blk_n, "out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln221_reg_720, "icmp_ln221_reg_720");
    sc_trace(mVcdFile, icmp_ln221_reg_720_pp0_iter1_reg, "icmp_ln221_reg_720_pp0_iter1_reg");
    sc_trace(mVcdFile, nf_assign_reg_277, "nf_assign_reg_277");
    sc_trace(mVcdFile, i_0_reg_288, "i_0_reg_288");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_305_p2, "i_fu_305_p2");
    sc_trace(mVcdFile, tmp_V_1_reg_729, "tmp_V_1_reg_729");
    sc_trace(mVcdFile, nf_1_fu_341_p3, "nf_1_fu_341_p3");
    sc_trace(mVcdFile, icmp_ln899_fu_353_p2, "icmp_ln899_fu_353_p2");
    sc_trace(mVcdFile, icmp_ln899_reg_822, "icmp_ln899_reg_822");
    sc_trace(mVcdFile, icmp_ln899_1_fu_362_p2, "icmp_ln899_1_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln899_1_reg_827, "icmp_ln899_1_reg_827");
    sc_trace(mVcdFile, icmp_ln899_2_fu_371_p2, "icmp_ln899_2_fu_371_p2");
    sc_trace(mVcdFile, icmp_ln899_2_reg_832, "icmp_ln899_2_reg_832");
    sc_trace(mVcdFile, icmp_ln899_3_fu_380_p2, "icmp_ln899_3_fu_380_p2");
    sc_trace(mVcdFile, icmp_ln899_3_reg_837, "icmp_ln899_3_reg_837");
    sc_trace(mVcdFile, icmp_ln899_4_fu_389_p2, "icmp_ln899_4_fu_389_p2");
    sc_trace(mVcdFile, icmp_ln899_4_reg_842, "icmp_ln899_4_reg_842");
    sc_trace(mVcdFile, icmp_ln899_5_fu_398_p2, "icmp_ln899_5_fu_398_p2");
    sc_trace(mVcdFile, icmp_ln899_5_reg_847, "icmp_ln899_5_reg_847");
    sc_trace(mVcdFile, icmp_ln899_6_fu_407_p2, "icmp_ln899_6_fu_407_p2");
    sc_trace(mVcdFile, icmp_ln899_6_reg_852, "icmp_ln899_6_reg_852");
    sc_trace(mVcdFile, xor_ln899_7_fu_421_p2, "xor_ln899_7_fu_421_p2");
    sc_trace(mVcdFile, xor_ln899_7_reg_857, "xor_ln899_7_reg_857");
    sc_trace(mVcdFile, xor_ln899_8_fu_436_p2, "xor_ln899_8_fu_436_p2");
    sc_trace(mVcdFile, xor_ln899_8_reg_862, "xor_ln899_8_reg_862");
    sc_trace(mVcdFile, xor_ln899_9_fu_451_p2, "xor_ln899_9_fu_451_p2");
    sc_trace(mVcdFile, xor_ln899_9_reg_867, "xor_ln899_9_reg_867");
    sc_trace(mVcdFile, icmp_ln899_10_fu_461_p2, "icmp_ln899_10_fu_461_p2");
    sc_trace(mVcdFile, icmp_ln899_10_reg_872, "icmp_ln899_10_reg_872");
    sc_trace(mVcdFile, icmp_ln899_11_fu_470_p2, "icmp_ln899_11_fu_470_p2");
    sc_trace(mVcdFile, icmp_ln899_11_reg_877, "icmp_ln899_11_reg_877");
    sc_trace(mVcdFile, icmp_ln899_12_fu_479_p2, "icmp_ln899_12_fu_479_p2");
    sc_trace(mVcdFile, icmp_ln899_12_reg_882, "icmp_ln899_12_reg_882");
    sc_trace(mVcdFile, icmp_ln899_13_fu_488_p2, "icmp_ln899_13_fu_488_p2");
    sc_trace(mVcdFile, icmp_ln899_13_reg_887, "icmp_ln899_13_reg_887");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, zext_ln142_fu_311_p1, "zext_ln142_fu_311_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, nf_fu_329_p2, "nf_fu_329_p2");
    sc_trace(mVcdFile, icmp_ln235_fu_335_p2, "icmp_ln235_fu_335_p2");
    sc_trace(mVcdFile, sext_ln142_fu_349_p1, "sext_ln142_fu_349_p1");
    sc_trace(mVcdFile, sext_ln142_1_fu_358_p1, "sext_ln142_1_fu_358_p1");
    sc_trace(mVcdFile, sext_ln142_2_fu_367_p1, "sext_ln142_2_fu_367_p1");
    sc_trace(mVcdFile, sext_ln142_3_fu_376_p1, "sext_ln142_3_fu_376_p1");
    sc_trace(mVcdFile, sext_ln142_4_fu_385_p1, "sext_ln142_4_fu_385_p1");
    sc_trace(mVcdFile, sext_ln142_5_fu_394_p1, "sext_ln142_5_fu_394_p1");
    sc_trace(mVcdFile, sext_ln142_6_fu_403_p1, "sext_ln142_6_fu_403_p1");
    sc_trace(mVcdFile, sext_ln142_7_fu_412_p1, "sext_ln142_7_fu_412_p1");
    sc_trace(mVcdFile, icmp_ln899_7_fu_416_p2, "icmp_ln899_7_fu_416_p2");
    sc_trace(mVcdFile, sext_ln142_8_fu_427_p1, "sext_ln142_8_fu_427_p1");
    sc_trace(mVcdFile, icmp_ln899_8_fu_431_p2, "icmp_ln899_8_fu_431_p2");
    sc_trace(mVcdFile, sext_ln142_9_fu_442_p1, "sext_ln142_9_fu_442_p1");
    sc_trace(mVcdFile, icmp_ln899_9_fu_446_p2, "icmp_ln899_9_fu_446_p2");
    sc_trace(mVcdFile, sext_ln142_10_fu_457_p1, "sext_ln142_10_fu_457_p1");
    sc_trace(mVcdFile, sext_ln142_11_fu_466_p1, "sext_ln142_11_fu_466_p1");
    sc_trace(mVcdFile, sext_ln142_12_fu_475_p1, "sext_ln142_12_fu_475_p1");
    sc_trace(mVcdFile, sext_ln142_13_fu_484_p1, "sext_ln142_13_fu_484_p1");
    sc_trace(mVcdFile, xor_ln899_fu_493_p2, "xor_ln899_fu_493_p2");
    sc_trace(mVcdFile, xor_ln899_1_fu_506_p2, "xor_ln899_1_fu_506_p2");
    sc_trace(mVcdFile, xor_ln899_2_fu_515_p2, "xor_ln899_2_fu_515_p2");
    sc_trace(mVcdFile, xor_ln899_3_fu_524_p2, "xor_ln899_3_fu_524_p2");
    sc_trace(mVcdFile, xor_ln899_4_fu_533_p2, "xor_ln899_4_fu_533_p2");
    sc_trace(mVcdFile, xor_ln899_5_fu_542_p2, "xor_ln899_5_fu_542_p2");
    sc_trace(mVcdFile, xor_ln899_6_fu_551_p2, "xor_ln899_6_fu_551_p2");
    sc_trace(mVcdFile, xor_ln899_10_fu_569_p2, "xor_ln899_10_fu_569_p2");
    sc_trace(mVcdFile, xor_ln899_11_fu_578_p2, "xor_ln899_11_fu_578_p2");
    sc_trace(mVcdFile, xor_ln899_12_fu_587_p2, "xor_ln899_12_fu_587_p2");
    sc_trace(mVcdFile, xor_ln899_13_fu_596_p2, "xor_ln899_13_fu_596_p2");
    sc_trace(mVcdFile, zext_ln142_1_fu_511_p1, "zext_ln142_1_fu_511_p1");
    sc_trace(mVcdFile, zext_ln142_2_fu_520_p1, "zext_ln142_2_fu_520_p1");
    sc_trace(mVcdFile, add_ln700_fu_605_p2, "add_ln700_fu_605_p2");
    sc_trace(mVcdFile, zext_ln700_1_fu_611_p1, "zext_ln700_1_fu_611_p1");
    sc_trace(mVcdFile, select_ln700_fu_498_p3, "select_ln700_fu_498_p3");
    sc_trace(mVcdFile, zext_ln142_3_fu_529_p1, "zext_ln142_3_fu_529_p1");
    sc_trace(mVcdFile, zext_ln142_4_fu_538_p1, "zext_ln142_4_fu_538_p1");
    sc_trace(mVcdFile, add_ln700_2_fu_621_p2, "add_ln700_2_fu_621_p2");
    sc_trace(mVcdFile, zext_ln142_5_fu_547_p1, "zext_ln142_5_fu_547_p1");
    sc_trace(mVcdFile, zext_ln142_6_fu_556_p1, "zext_ln142_6_fu_556_p1");
    sc_trace(mVcdFile, add_ln700_3_fu_631_p2, "add_ln700_3_fu_631_p2");
    sc_trace(mVcdFile, zext_ln700_3_fu_637_p1, "zext_ln700_3_fu_637_p1");
    sc_trace(mVcdFile, zext_ln700_2_fu_627_p1, "zext_ln700_2_fu_627_p1");
    sc_trace(mVcdFile, add_ln700_4_fu_641_p2, "add_ln700_4_fu_641_p2");
    sc_trace(mVcdFile, zext_ln700_4_fu_647_p1, "zext_ln700_4_fu_647_p1");
    sc_trace(mVcdFile, add_ln700_1_fu_615_p2, "add_ln700_1_fu_615_p2");
    sc_trace(mVcdFile, zext_ln142_8_fu_563_p1, "zext_ln142_8_fu_563_p1");
    sc_trace(mVcdFile, zext_ln142_9_fu_566_p1, "zext_ln142_9_fu_566_p1");
    sc_trace(mVcdFile, add_ln700_6_fu_657_p2, "add_ln700_6_fu_657_p2");
    sc_trace(mVcdFile, zext_ln142_7_fu_560_p1, "zext_ln142_7_fu_560_p1");
    sc_trace(mVcdFile, add_ln700_7_fu_663_p2, "add_ln700_7_fu_663_p2");
    sc_trace(mVcdFile, zext_ln142_10_fu_574_p1, "zext_ln142_10_fu_574_p1");
    sc_trace(mVcdFile, zext_ln142_11_fu_583_p1, "zext_ln142_11_fu_583_p1");
    sc_trace(mVcdFile, add_ln700_8_fu_673_p2, "add_ln700_8_fu_673_p2");
    sc_trace(mVcdFile, zext_ln142_12_fu_592_p1, "zext_ln142_12_fu_592_p1");
    sc_trace(mVcdFile, zext_ln700_fu_601_p1, "zext_ln700_fu_601_p1");
    sc_trace(mVcdFile, add_ln700_9_fu_683_p2, "add_ln700_9_fu_683_p2");
    sc_trace(mVcdFile, zext_ln700_7_fu_689_p1, "zext_ln700_7_fu_689_p1");
    sc_trace(mVcdFile, zext_ln700_6_fu_679_p1, "zext_ln700_6_fu_679_p1");
    sc_trace(mVcdFile, add_ln700_10_fu_693_p2, "add_ln700_10_fu_693_p2");
    sc_trace(mVcdFile, zext_ln700_5_fu_669_p1, "zext_ln700_5_fu_669_p1");
    sc_trace(mVcdFile, add_ln700_11_fu_699_p2, "add_ln700_11_fu_699_p2");
    sc_trace(mVcdFile, zext_ln700_8_fu_705_p1, "zext_ln700_8_fu_705_p1");
    sc_trace(mVcdFile, add_ln700_5_fu_651_p2, "add_ln700_5_fu_651_p2");
    sc_trace(mVcdFile, tmp_V_fu_709_p2, "tmp_V_fu_709_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Thresholding_Batch_1_Thresholding_Batch::~Thresholding_Batch_1_Thresholding_Batch() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete threshs_m_thresholds_13_U;
    delete threshs_m_thresholds_12_U;
    delete threshs_m_thresholds_7_U;
    delete threshs_m_thresholds_6_U;
    delete threshs_m_thresholds_5_U;
    delete threshs_m_thresholds_4_U;
    delete threshs_m_thresholds_3_U;
    delete threshs_m_thresholds_2_U;
    delete threshs_m_thresholds_1_U;
    delete threshs_m_thresholds_U;
    delete threshs_m_thresholds_11_U;
    delete threshs_m_thresholds_10_U;
    delete threshs_m_thresholds_9_U;
    delete threshs_m_thresholds_8_U;
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_288 = i_fu_305_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_288 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        nf_assign_reg_277 = nf_1_fu_341_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        nf_assign_reg_277 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln221_reg_720 = icmp_ln221_fu_299_p2.read();
        icmp_ln221_reg_720_pp0_iter1_reg = icmp_ln221_reg_720.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_reg_720.read()))) {
        icmp_ln899_10_reg_872 = icmp_ln899_10_fu_461_p2.read();
        icmp_ln899_11_reg_877 = icmp_ln899_11_fu_470_p2.read();
        icmp_ln899_12_reg_882 = icmp_ln899_12_fu_479_p2.read();
        icmp_ln899_13_reg_887 = icmp_ln899_13_fu_488_p2.read();
        icmp_ln899_1_reg_827 = icmp_ln899_1_fu_362_p2.read();
        icmp_ln899_2_reg_832 = icmp_ln899_2_fu_371_p2.read();
        icmp_ln899_3_reg_837 = icmp_ln899_3_fu_380_p2.read();
        icmp_ln899_4_reg_842 = icmp_ln899_4_fu_389_p2.read();
        icmp_ln899_5_reg_847 = icmp_ln899_5_fu_398_p2.read();
        icmp_ln899_6_reg_852 = icmp_ln899_6_fu_407_p2.read();
        icmp_ln899_reg_822 = icmp_ln899_fu_353_p2.read();
        xor_ln899_7_reg_857 = xor_ln899_7_fu_421_p2.read();
        xor_ln899_8_reg_862 = xor_ln899_8_fu_436_p2.read();
        xor_ln899_9_reg_867 = xor_ln899_9_fu_451_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_1_reg_729 = in_V_V_TDATA.read();
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_10_fu_693_p2() {
    add_ln700_10_fu_693_p2 = (!zext_ln700_7_fu_689_p1.read().is_01() || !zext_ln700_6_fu_679_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln700_7_fu_689_p1.read()) + sc_biguint<3>(zext_ln700_6_fu_679_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_11_fu_699_p2() {
    add_ln700_11_fu_699_p2 = (!add_ln700_10_fu_693_p2.read().is_01() || !zext_ln700_5_fu_669_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(add_ln700_10_fu_693_p2.read()) + sc_biguint<3>(zext_ln700_5_fu_669_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_1_fu_615_p2() {
    add_ln700_1_fu_615_p2 = (!zext_ln700_1_fu_611_p1.read().is_01() || !select_ln700_fu_498_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln700_1_fu_611_p1.read()) + sc_biguint<4>(select_ln700_fu_498_p3.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_2_fu_621_p2() {
    add_ln700_2_fu_621_p2 = (!zext_ln142_3_fu_529_p1.read().is_01() || !zext_ln142_4_fu_538_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_3_fu_529_p1.read()) + sc_biguint<2>(zext_ln142_4_fu_538_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_3_fu_631_p2() {
    add_ln700_3_fu_631_p2 = (!zext_ln142_5_fu_547_p1.read().is_01() || !zext_ln142_6_fu_556_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_5_fu_547_p1.read()) + sc_biguint<2>(zext_ln142_6_fu_556_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_4_fu_641_p2() {
    add_ln700_4_fu_641_p2 = (!zext_ln700_3_fu_637_p1.read().is_01() || !zext_ln700_2_fu_627_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(zext_ln700_3_fu_637_p1.read()) + sc_biguint<3>(zext_ln700_2_fu_627_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_5_fu_651_p2() {
    add_ln700_5_fu_651_p2 = (!zext_ln700_4_fu_647_p1.read().is_01() || !add_ln700_1_fu_615_p2.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln700_4_fu_647_p1.read()) + sc_biguint<4>(add_ln700_1_fu_615_p2.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_6_fu_657_p2() {
    add_ln700_6_fu_657_p2 = (!zext_ln142_8_fu_563_p1.read().is_01() || !zext_ln142_9_fu_566_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_8_fu_563_p1.read()) + sc_biguint<2>(zext_ln142_9_fu_566_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_7_fu_663_p2() {
    add_ln700_7_fu_663_p2 = (!add_ln700_6_fu_657_p2.read().is_01() || !zext_ln142_7_fu_560_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(add_ln700_6_fu_657_p2.read()) + sc_biguint<2>(zext_ln142_7_fu_560_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_8_fu_673_p2() {
    add_ln700_8_fu_673_p2 = (!zext_ln142_10_fu_574_p1.read().is_01() || !zext_ln142_11_fu_583_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_10_fu_574_p1.read()) + sc_biguint<2>(zext_ln142_11_fu_583_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_9_fu_683_p2() {
    add_ln700_9_fu_683_p2 = (!zext_ln142_12_fu_592_p1.read().is_01() || !zext_ln700_fu_601_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_12_fu_592_p1.read()) + sc_biguint<2>(zext_ln700_fu_601_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_add_ln700_fu_605_p2() {
    add_ln700_fu_605_p2 = (!zext_ln142_1_fu_511_p1.read().is_01() || !zext_ln142_2_fu_520_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(zext_ln142_1_fu_511_p1.read()) + sc_biguint<2>(zext_ln142_2_fu_520_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_TVALID.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_reg_720_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_TREADY.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_i_fu_305_p2() {
    i_fu_305_p2 = (!i_0_reg_288.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(i_0_reg_288.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln221_fu_299_p2() {
    icmp_ln221_fu_299_p2 = (!i_0_reg_288.read().is_01() || !ap_const_lv14_3200.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_288.read() == ap_const_lv14_3200);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln235_fu_335_p2() {
    icmp_ln235_fu_335_p2 = (!nf_fu_329_p2.read().is_01() || !ap_const_lv32_80.is_01())? sc_lv<1>(): sc_lv<1>(nf_fu_329_p2.read() == ap_const_lv32_80);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_10_fu_461_p2() {
    icmp_ln899_10_fu_461_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_10_fu_457_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_10_fu_457_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_11_fu_470_p2() {
    icmp_ln899_11_fu_470_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_11_fu_466_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_11_fu_466_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_12_fu_479_p2() {
    icmp_ln899_12_fu_479_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_12_fu_475_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_12_fu_475_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_13_fu_488_p2() {
    icmp_ln899_13_fu_488_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_13_fu_484_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_13_fu_484_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_1_fu_362_p2() {
    icmp_ln899_1_fu_362_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_1_fu_358_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_1_fu_358_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_2_fu_371_p2() {
    icmp_ln899_2_fu_371_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_2_fu_367_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_2_fu_367_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_3_fu_380_p2() {
    icmp_ln899_3_fu_380_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_3_fu_376_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_3_fu_376_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_4_fu_389_p2() {
    icmp_ln899_4_fu_389_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_4_fu_385_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_4_fu_385_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_5_fu_398_p2() {
    icmp_ln899_5_fu_398_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_5_fu_394_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_5_fu_394_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_6_fu_407_p2() {
    icmp_ln899_6_fu_407_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_6_fu_403_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_6_fu_403_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_7_fu_416_p2() {
    icmp_ln899_7_fu_416_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_7_fu_412_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_7_fu_412_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_8_fu_431_p2() {
    icmp_ln899_8_fu_431_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_8_fu_427_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_8_fu_427_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_9_fu_446_p2() {
    icmp_ln899_9_fu_446_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_9_fu_442_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_9_fu_442_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_icmp_ln899_fu_353_p2() {
    icmp_ln899_fu_353_p2 = (!tmp_V_1_reg_729.read().is_01() || !sext_ln142_fu_349_p1.read().is_01())? sc_lv<1>(): (sc_bigint<24>(tmp_V_1_reg_729.read()) < sc_bigint<24>(sext_ln142_fu_349_p1.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_in_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0))) {
        in_V_V_TDATA_blk_n = in_V_V_TVALID.read();
    } else {
        in_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_in_V_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_V_TREADY = ap_const_logic_1;
    } else {
        in_V_V_TREADY = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_nf_1_fu_341_p3() {
    nf_1_fu_341_p3 = (!icmp_ln235_fu_335_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln235_fu_335_p2.read()[0].to_bool())? ap_const_lv32_0: nf_fu_329_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_nf_fu_329_p2() {
    nf_fu_329_p2 = (!nf_assign_reg_277.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(nf_assign_reg_277.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_out_V_V_TDATA() {
    out_V_V_TDATA = esl_zext<8,4>(tmp_V_fu_709_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_out_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_reg_720_pp0_iter1_reg.read()))) {
        out_V_V_TDATA_blk_n = out_V_V_TREADY.read();
    } else {
        out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_out_V_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_reg_720_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_TVALID = ap_const_logic_1;
    } else {
        out_V_V_TVALID = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_select_ln700_fu_498_p3() {
    select_ln700_fu_498_p3 = (!xor_ln899_fu_493_p2.read()[0].is_01())? sc_lv<4>(): ((xor_ln899_fu_493_p2.read()[0].to_bool())? ap_const_lv4_A: ap_const_lv4_9);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_10_fu_457_p1() {
    sext_ln142_10_fu_457_p1 = esl_sext<24,19>(threshs_m_thresholds_11_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_11_fu_466_p1() {
    sext_ln142_11_fu_466_p1 = esl_sext<24,19>(threshs_m_thresholds_10_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_12_fu_475_p1() {
    sext_ln142_12_fu_475_p1 = esl_sext<24,19>(threshs_m_thresholds_9_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_13_fu_484_p1() {
    sext_ln142_13_fu_484_p1 = esl_sext<24,19>(threshs_m_thresholds_8_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_1_fu_358_p1() {
    sext_ln142_1_fu_358_p1 = esl_sext<24,19>(threshs_m_thresholds_12_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_2_fu_367_p1() {
    sext_ln142_2_fu_367_p1 = esl_sext<24,19>(threshs_m_thresholds_7_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_3_fu_376_p1() {
    sext_ln142_3_fu_376_p1 = esl_sext<24,19>(threshs_m_thresholds_6_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_4_fu_385_p1() {
    sext_ln142_4_fu_385_p1 = esl_sext<24,19>(threshs_m_thresholds_5_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_5_fu_394_p1() {
    sext_ln142_5_fu_394_p1 = esl_sext<24,19>(threshs_m_thresholds_4_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_6_fu_403_p1() {
    sext_ln142_6_fu_403_p1 = esl_sext<24,19>(threshs_m_thresholds_3_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_7_fu_412_p1() {
    sext_ln142_7_fu_412_p1 = esl_sext<24,19>(threshs_m_thresholds_2_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_8_fu_427_p1() {
    sext_ln142_8_fu_427_p1 = esl_sext<24,19>(threshs_m_thresholds_1_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_9_fu_442_p1() {
    sext_ln142_9_fu_442_p1 = esl_sext<24,19>(threshs_m_thresholds_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_sext_ln142_fu_349_p1() {
    sext_ln142_fu_349_p1 = esl_sext<24,19>(threshs_m_thresholds_13_q0.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_10_address0() {
    threshs_m_thresholds_10_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_10_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_10_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_11_address0() {
    threshs_m_thresholds_11_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_11_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_11_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_12_address0() {
    threshs_m_thresholds_12_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_12_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_12_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_13_address0() {
    threshs_m_thresholds_13_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_13_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_13_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_1_address0() {
    threshs_m_thresholds_1_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_1_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_1_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_2_address0() {
    threshs_m_thresholds_2_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_2_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_2_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_3_address0() {
    threshs_m_thresholds_3_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_3_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_3_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_4_address0() {
    threshs_m_thresholds_4_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_4_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_4_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_5_address0() {
    threshs_m_thresholds_5_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_5_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_5_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_6_address0() {
    threshs_m_thresholds_6_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_6_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_6_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_7_address0() {
    threshs_m_thresholds_7_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_7_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_7_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_8_address0() {
    threshs_m_thresholds_8_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_8_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_8_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_9_address0() {
    threshs_m_thresholds_9_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_9_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_9_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_address0() {
    threshs_m_thresholds_address0 =  (sc_lv<7>) (zext_ln142_fu_311_p1.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_threshs_m_thresholds_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        threshs_m_thresholds_ce0 = ap_const_logic_1;
    } else {
        threshs_m_thresholds_ce0 = ap_const_logic_0;
    }
}

void Thresholding_Batch_1_Thresholding_Batch::thread_tmp_V_fu_709_p2() {
    tmp_V_fu_709_p2 = (!zext_ln700_8_fu_705_p1.read().is_01() || !add_ln700_5_fu_651_p2.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln700_8_fu_705_p1.read()) + sc_biguint<4>(add_ln700_5_fu_651_p2.read()));
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_10_fu_569_p2() {
    xor_ln899_10_fu_569_p2 = (icmp_ln899_10_reg_872.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_11_fu_578_p2() {
    xor_ln899_11_fu_578_p2 = (icmp_ln899_11_reg_877.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_12_fu_587_p2() {
    xor_ln899_12_fu_587_p2 = (icmp_ln899_12_reg_882.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_13_fu_596_p2() {
    xor_ln899_13_fu_596_p2 = (icmp_ln899_13_reg_887.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_1_fu_506_p2() {
    xor_ln899_1_fu_506_p2 = (icmp_ln899_1_reg_827.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_2_fu_515_p2() {
    xor_ln899_2_fu_515_p2 = (icmp_ln899_2_reg_832.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_3_fu_524_p2() {
    xor_ln899_3_fu_524_p2 = (icmp_ln899_3_reg_837.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_4_fu_533_p2() {
    xor_ln899_4_fu_533_p2 = (icmp_ln899_4_reg_842.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_5_fu_542_p2() {
    xor_ln899_5_fu_542_p2 = (icmp_ln899_5_reg_847.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_6_fu_551_p2() {
    xor_ln899_6_fu_551_p2 = (icmp_ln899_6_reg_852.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_7_fu_421_p2() {
    xor_ln899_7_fu_421_p2 = (icmp_ln899_7_fu_416_p2.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_8_fu_436_p2() {
    xor_ln899_8_fu_436_p2 = (icmp_ln899_8_fu_431_p2.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_9_fu_451_p2() {
    xor_ln899_9_fu_451_p2 = (icmp_ln899_9_fu_446_p2.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_xor_ln899_fu_493_p2() {
    xor_ln899_fu_493_p2 = (icmp_ln899_reg_822.read() ^ ap_const_lv1_1);
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_10_fu_574_p1() {
    zext_ln142_10_fu_574_p1 = esl_zext<2,1>(xor_ln899_10_fu_569_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_11_fu_583_p1() {
    zext_ln142_11_fu_583_p1 = esl_zext<2,1>(xor_ln899_11_fu_578_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_12_fu_592_p1() {
    zext_ln142_12_fu_592_p1 = esl_zext<2,1>(xor_ln899_12_fu_587_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_1_fu_511_p1() {
    zext_ln142_1_fu_511_p1 = esl_zext<2,1>(xor_ln899_1_fu_506_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_2_fu_520_p1() {
    zext_ln142_2_fu_520_p1 = esl_zext<2,1>(xor_ln899_2_fu_515_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_3_fu_529_p1() {
    zext_ln142_3_fu_529_p1 = esl_zext<2,1>(xor_ln899_3_fu_524_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_4_fu_538_p1() {
    zext_ln142_4_fu_538_p1 = esl_zext<2,1>(xor_ln899_4_fu_533_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_5_fu_547_p1() {
    zext_ln142_5_fu_547_p1 = esl_zext<2,1>(xor_ln899_5_fu_542_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_6_fu_556_p1() {
    zext_ln142_6_fu_556_p1 = esl_zext<2,1>(xor_ln899_6_fu_551_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_7_fu_560_p1() {
    zext_ln142_7_fu_560_p1 = esl_zext<2,1>(xor_ln899_7_reg_857.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_8_fu_563_p1() {
    zext_ln142_8_fu_563_p1 = esl_zext<2,1>(xor_ln899_8_reg_862.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_9_fu_566_p1() {
    zext_ln142_9_fu_566_p1 = esl_zext<2,1>(xor_ln899_9_reg_867.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln142_fu_311_p1() {
    zext_ln142_fu_311_p1 = esl_zext<64,32>(nf_assign_reg_277.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_1_fu_611_p1() {
    zext_ln700_1_fu_611_p1 = esl_zext<4,2>(add_ln700_fu_605_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_2_fu_627_p1() {
    zext_ln700_2_fu_627_p1 = esl_zext<3,2>(add_ln700_2_fu_621_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_3_fu_637_p1() {
    zext_ln700_3_fu_637_p1 = esl_zext<3,2>(add_ln700_3_fu_631_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_4_fu_647_p1() {
    zext_ln700_4_fu_647_p1 = esl_zext<4,3>(add_ln700_4_fu_641_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_5_fu_669_p1() {
    zext_ln700_5_fu_669_p1 = esl_zext<3,2>(add_ln700_7_fu_663_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_6_fu_679_p1() {
    zext_ln700_6_fu_679_p1 = esl_zext<3,2>(add_ln700_8_fu_673_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_7_fu_689_p1() {
    zext_ln700_7_fu_689_p1 = esl_zext<3,2>(add_ln700_9_fu_683_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_8_fu_705_p1() {
    zext_ln700_8_fu_705_p1 = esl_zext<4,3>(add_ln700_11_fu_699_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_zext_ln700_fu_601_p1() {
    zext_ln700_fu_601_p1 = esl_zext<2,1>(xor_ln899_13_fu_596_p2.read());
}

void Thresholding_Batch_1_Thresholding_Batch::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln221_fu_299_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

