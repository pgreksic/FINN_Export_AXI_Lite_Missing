// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingFCLayer_Batch_2_Matrix_Vector_Activa (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_TDATA,
        in_V_V_TVALID,
        in_V_V_TREADY,
        out_V_V_TDATA,
        out_V_V_TVALID,
        out_V_V_TREADY,
        weight_V_V_TDATA,
        weight_V_V_TVALID,
        weight_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] in_V_V_TDATA;
input   in_V_V_TVALID;
output   in_V_V_TREADY;
output  [15:0] out_V_V_TDATA;
output   out_V_V_TVALID;
input   out_V_V_TREADY;
input  [47:0] weight_V_V_TDATA;
input   weight_V_V_TVALID;
output   weight_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_TREADY;
reg out_V_V_TVALID;
reg weight_V_V_TREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] threshs_m_thresholds_55_address0;
reg    threshs_m_thresholds_55_ce0;
wire   [15:0] threshs_m_thresholds_55_q0;
wire   [3:0] threshs_m_thresholds_54_address0;
reg    threshs_m_thresholds_54_ce0;
wire   [15:0] threshs_m_thresholds_54_q0;
wire   [3:0] threshs_m_thresholds_49_address0;
reg    threshs_m_thresholds_49_ce0;
wire   [15:0] threshs_m_thresholds_49_q0;
wire   [3:0] threshs_m_thresholds_48_address0;
reg    threshs_m_thresholds_48_ce0;
wire   [15:0] threshs_m_thresholds_48_q0;
wire   [3:0] threshs_m_thresholds_47_address0;
reg    threshs_m_thresholds_47_ce0;
wire   [15:0] threshs_m_thresholds_47_q0;
wire   [3:0] threshs_m_thresholds_46_address0;
reg    threshs_m_thresholds_46_ce0;
wire   [15:0] threshs_m_thresholds_46_q0;
wire   [3:0] threshs_m_thresholds_45_address0;
reg    threshs_m_thresholds_45_ce0;
wire   [15:0] threshs_m_thresholds_45_q0;
wire   [3:0] threshs_m_thresholds_44_address0;
reg    threshs_m_thresholds_44_ce0;
wire   [15:0] threshs_m_thresholds_44_q0;
wire   [3:0] threshs_m_thresholds_43_address0;
reg    threshs_m_thresholds_43_ce0;
wire   [15:0] threshs_m_thresholds_43_q0;
wire   [3:0] threshs_m_thresholds_42_address0;
reg    threshs_m_thresholds_42_ce0;
wire   [15:0] threshs_m_thresholds_42_q0;
wire   [3:0] threshs_m_thresholds_53_address0;
reg    threshs_m_thresholds_53_ce0;
wire   [15:0] threshs_m_thresholds_53_q0;
wire   [3:0] threshs_m_thresholds_52_address0;
reg    threshs_m_thresholds_52_ce0;
wire   [15:0] threshs_m_thresholds_52_q0;
wire   [3:0] threshs_m_thresholds_51_address0;
reg    threshs_m_thresholds_51_ce0;
wire   [15:0] threshs_m_thresholds_51_q0;
wire   [3:0] threshs_m_thresholds_50_address0;
reg    threshs_m_thresholds_50_ce0;
wire   [15:0] threshs_m_thresholds_50_q0;
wire   [3:0] threshs_m_thresholds_41_address0;
reg    threshs_m_thresholds_41_ce0;
wire   [15:0] threshs_m_thresholds_41_q0;
wire   [3:0] threshs_m_thresholds_40_address0;
reg    threshs_m_thresholds_40_ce0;
wire   [15:0] threshs_m_thresholds_40_q0;
wire   [3:0] threshs_m_thresholds_35_address0;
reg    threshs_m_thresholds_35_ce0;
wire   [15:0] threshs_m_thresholds_35_q0;
wire   [3:0] threshs_m_thresholds_34_address0;
reg    threshs_m_thresholds_34_ce0;
wire   [15:0] threshs_m_thresholds_34_q0;
wire   [3:0] threshs_m_thresholds_33_address0;
reg    threshs_m_thresholds_33_ce0;
wire   [15:0] threshs_m_thresholds_33_q0;
wire   [3:0] threshs_m_thresholds_32_address0;
reg    threshs_m_thresholds_32_ce0;
wire   [15:0] threshs_m_thresholds_32_q0;
wire   [3:0] threshs_m_thresholds_31_address0;
reg    threshs_m_thresholds_31_ce0;
wire   [15:0] threshs_m_thresholds_31_q0;
wire   [3:0] threshs_m_thresholds_30_address0;
reg    threshs_m_thresholds_30_ce0;
wire   [15:0] threshs_m_thresholds_30_q0;
wire   [3:0] threshs_m_thresholds_29_address0;
reg    threshs_m_thresholds_29_ce0;
wire   [15:0] threshs_m_thresholds_29_q0;
wire   [3:0] threshs_m_thresholds_28_address0;
reg    threshs_m_thresholds_28_ce0;
wire   [15:0] threshs_m_thresholds_28_q0;
wire   [3:0] threshs_m_thresholds_39_address0;
reg    threshs_m_thresholds_39_ce0;
wire   [15:0] threshs_m_thresholds_39_q0;
wire   [3:0] threshs_m_thresholds_38_address0;
reg    threshs_m_thresholds_38_ce0;
wire   [15:0] threshs_m_thresholds_38_q0;
wire   [3:0] threshs_m_thresholds_37_address0;
reg    threshs_m_thresholds_37_ce0;
wire   [15:0] threshs_m_thresholds_37_q0;
wire   [3:0] threshs_m_thresholds_36_address0;
reg    threshs_m_thresholds_36_ce0;
wire   [15:0] threshs_m_thresholds_36_q0;
wire   [3:0] threshs_m_thresholds_27_address0;
reg    threshs_m_thresholds_27_ce0;
wire   [15:0] threshs_m_thresholds_27_q0;
wire   [3:0] threshs_m_thresholds_26_address0;
reg    threshs_m_thresholds_26_ce0;
wire   [15:0] threshs_m_thresholds_26_q0;
wire   [3:0] threshs_m_thresholds_21_address0;
reg    threshs_m_thresholds_21_ce0;
wire   [15:0] threshs_m_thresholds_21_q0;
wire   [3:0] threshs_m_thresholds_20_address0;
reg    threshs_m_thresholds_20_ce0;
wire   [15:0] threshs_m_thresholds_20_q0;
wire   [3:0] threshs_m_thresholds_19_address0;
reg    threshs_m_thresholds_19_ce0;
wire   [15:0] threshs_m_thresholds_19_q0;
wire   [3:0] threshs_m_thresholds_18_address0;
reg    threshs_m_thresholds_18_ce0;
wire   [15:0] threshs_m_thresholds_18_q0;
wire   [3:0] threshs_m_thresholds_17_address0;
reg    threshs_m_thresholds_17_ce0;
wire   [15:0] threshs_m_thresholds_17_q0;
wire   [3:0] threshs_m_thresholds_16_address0;
reg    threshs_m_thresholds_16_ce0;
wire   [15:0] threshs_m_thresholds_16_q0;
wire   [3:0] threshs_m_thresholds_15_address0;
reg    threshs_m_thresholds_15_ce0;
wire   [15:0] threshs_m_thresholds_15_q0;
wire   [3:0] threshs_m_thresholds_14_address0;
reg    threshs_m_thresholds_14_ce0;
wire   [15:0] threshs_m_thresholds_14_q0;
wire   [3:0] threshs_m_thresholds_25_address0;
reg    threshs_m_thresholds_25_ce0;
wire   [15:0] threshs_m_thresholds_25_q0;
wire   [3:0] threshs_m_thresholds_24_address0;
reg    threshs_m_thresholds_24_ce0;
wire   [15:0] threshs_m_thresholds_24_q0;
wire   [3:0] threshs_m_thresholds_23_address0;
reg    threshs_m_thresholds_23_ce0;
wire   [15:0] threshs_m_thresholds_23_q0;
wire   [3:0] threshs_m_thresholds_22_address0;
reg    threshs_m_thresholds_22_ce0;
wire   [15:0] threshs_m_thresholds_22_q0;
wire   [3:0] threshs_m_thresholds_13_address0;
reg    threshs_m_thresholds_13_ce0;
wire   [15:0] threshs_m_thresholds_13_q0;
wire   [3:0] threshs_m_thresholds_12_address0;
reg    threshs_m_thresholds_12_ce0;
wire   [15:0] threshs_m_thresholds_12_q0;
wire   [3:0] threshs_m_thresholds_7_address0;
reg    threshs_m_thresholds_7_ce0;
wire   [15:0] threshs_m_thresholds_7_q0;
wire   [3:0] threshs_m_thresholds_6_address0;
reg    threshs_m_thresholds_6_ce0;
wire   [15:0] threshs_m_thresholds_6_q0;
wire   [3:0] threshs_m_thresholds_5_address0;
reg    threshs_m_thresholds_5_ce0;
wire   [15:0] threshs_m_thresholds_5_q0;
wire   [3:0] threshs_m_thresholds_4_address0;
reg    threshs_m_thresholds_4_ce0;
wire   [15:0] threshs_m_thresholds_4_q0;
wire   [3:0] threshs_m_thresholds_3_address0;
reg    threshs_m_thresholds_3_ce0;
wire   [15:0] threshs_m_thresholds_3_q0;
wire   [3:0] threshs_m_thresholds_2_address0;
reg    threshs_m_thresholds_2_ce0;
wire   [15:0] threshs_m_thresholds_2_q0;
wire   [3:0] threshs_m_thresholds_1_address0;
reg    threshs_m_thresholds_1_ce0;
wire   [15:0] threshs_m_thresholds_1_q0;
wire   [3:0] threshs_m_thresholds_address0;
reg    threshs_m_thresholds_ce0;
wire   [15:0] threshs_m_thresholds_q0;
wire   [3:0] threshs_m_thresholds_11_address0;
reg    threshs_m_thresholds_11_ce0;
wire   [15:0] threshs_m_thresholds_11_q0;
wire   [3:0] threshs_m_thresholds_10_address0;
reg    threshs_m_thresholds_10_ce0;
wire   [15:0] threshs_m_thresholds_10_q0;
wire   [3:0] threshs_m_thresholds_9_address0;
reg    threshs_m_thresholds_9_ce0;
wire   [15:0] threshs_m_thresholds_9_q0;
wire   [3:0] threshs_m_thresholds_8_address0;
reg    threshs_m_thresholds_8_ce0;
wire   [15:0] threshs_m_thresholds_8_q0;
reg    in_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln248_fu_1079_p2;
wire   [0:0] icmp_ln252_fu_1094_p2;
reg    out_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln289_reg_3519;
reg   [0:0] icmp_ln289_reg_3519_pp0_iter2_reg;
reg    weight_V_V_TDATA_blk_n;
reg   [16:0] i_0_reg_1049;
reg    ap_predicate_op51_read_state2;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [16:0] i_fu_1085_p2;
wire   [23:0] inElem_V_fu_1134_p11;
wire   [0:0] icmp_ln271_fu_1468_p2;
reg   [0:0] icmp_ln271_reg_3451;
reg   [0:0] icmp_ln271_reg_3451_pp0_iter1_reg;
wire   [3:0] trunc_ln647_fu_1474_p1;
reg  signed [3:0] trunc_ln647_reg_3459;
reg  signed [3:0] p_Result_1_0_1_reg_3464;
reg  signed [3:0] p_Result_1_0_2_reg_3469;
reg  signed [3:0] p_Result_1_1_reg_3474;
reg  signed [3:0] p_Result_1_1_1_reg_3479;
reg  signed [3:0] p_Result_1_1_2_reg_3484;
reg  signed [3:0] p_Result_1_2_reg_3489;
reg  signed [3:0] p_Result_1_2_1_reg_3494;
reg  signed [3:0] p_Result_1_2_2_reg_3499;
reg  signed [3:0] p_Result_1_3_reg_3504;
reg  signed [3:0] p_Result_1_3_1_reg_3509;
reg  signed [3:0] p_Result_1_3_2_reg_3514;
wire   [0:0] icmp_ln289_fu_1594_p2;
reg   [0:0] icmp_ln289_reg_3519_pp0_iter1_reg;
wire  signed [11:0] mul_ln1352_fu_1616_p2;
reg  signed [11:0] mul_ln1352_reg_3523;
wire   [12:0] add_ln700_1_fu_1676_p2;
reg   [12:0] add_ln700_1_reg_3528;
wire  signed [11:0] mul_ln1352_3_fu_1685_p2;
reg  signed [11:0] mul_ln1352_3_reg_3533;
wire   [12:0] add_ln700_4_fu_1717_p2;
reg   [12:0] add_ln700_4_reg_3538;
wire  signed [11:0] mul_ln1352_6_fu_1726_p2;
reg  signed [11:0] mul_ln1352_6_reg_3543;
wire   [12:0] add_ln700_7_fu_1758_p2;
reg   [12:0] add_ln700_7_reg_3548;
wire  signed [11:0] mul_ln1352_9_fu_1767_p2;
reg  signed [11:0] mul_ln1352_9_reg_3553;
wire   [12:0] add_ln700_10_fu_1799_p2;
reg   [12:0] add_ln700_10_reg_3558;
wire   [0:0] icmp_ln899_fu_2025_p2;
reg   [0:0] icmp_ln899_reg_3843;
wire   [0:0] icmp_ln899_1_fu_2031_p2;
reg   [0:0] icmp_ln899_1_reg_3848;
wire   [0:0] icmp_ln899_2_fu_2037_p2;
reg   [0:0] icmp_ln899_2_reg_3853;
wire   [0:0] icmp_ln899_3_fu_2043_p2;
reg   [0:0] icmp_ln899_3_reg_3858;
wire   [0:0] icmp_ln899_4_fu_2049_p2;
reg   [0:0] icmp_ln899_4_reg_3863;
wire   [0:0] icmp_ln899_5_fu_2055_p2;
reg   [0:0] icmp_ln899_5_reg_3868;
wire   [0:0] icmp_ln899_6_fu_2061_p2;
reg   [0:0] icmp_ln899_6_reg_3873;
wire   [0:0] xor_ln899_7_fu_2073_p2;
reg   [0:0] xor_ln899_7_reg_3878;
wire   [0:0] xor_ln899_8_fu_2085_p2;
reg   [0:0] xor_ln899_8_reg_3883;
wire   [0:0] xor_ln899_9_fu_2097_p2;
reg   [0:0] xor_ln899_9_reg_3888;
wire   [0:0] icmp_ln899_10_fu_2103_p2;
reg   [0:0] icmp_ln899_10_reg_3893;
wire   [0:0] icmp_ln899_11_fu_2109_p2;
reg   [0:0] icmp_ln899_11_reg_3898;
wire   [0:0] icmp_ln899_12_fu_2115_p2;
reg   [0:0] icmp_ln899_12_reg_3903;
wire   [0:0] icmp_ln899_13_fu_2121_p2;
reg   [0:0] icmp_ln899_13_reg_3908;
wire   [0:0] icmp_ln899_14_fu_2127_p2;
reg   [0:0] icmp_ln899_14_reg_3913;
wire   [0:0] icmp_ln899_15_fu_2133_p2;
reg   [0:0] icmp_ln899_15_reg_3918;
wire   [0:0] icmp_ln899_16_fu_2139_p2;
reg   [0:0] icmp_ln899_16_reg_3923;
wire   [0:0] icmp_ln899_17_fu_2145_p2;
reg   [0:0] icmp_ln899_17_reg_3928;
wire   [0:0] icmp_ln899_18_fu_2151_p2;
reg   [0:0] icmp_ln899_18_reg_3933;
wire   [0:0] icmp_ln899_19_fu_2157_p2;
reg   [0:0] icmp_ln899_19_reg_3938;
wire   [0:0] icmp_ln899_20_fu_2163_p2;
reg   [0:0] icmp_ln899_20_reg_3943;
wire   [0:0] xor_ln899_21_fu_2175_p2;
reg   [0:0] xor_ln899_21_reg_3948;
wire   [0:0] xor_ln899_22_fu_2187_p2;
reg   [0:0] xor_ln899_22_reg_3953;
wire   [0:0] xor_ln899_23_fu_2199_p2;
reg   [0:0] xor_ln899_23_reg_3958;
wire   [0:0] icmp_ln899_24_fu_2205_p2;
reg   [0:0] icmp_ln899_24_reg_3963;
wire   [0:0] icmp_ln899_25_fu_2211_p2;
reg   [0:0] icmp_ln899_25_reg_3968;
wire   [0:0] icmp_ln899_26_fu_2217_p2;
reg   [0:0] icmp_ln899_26_reg_3973;
wire   [0:0] icmp_ln899_27_fu_2223_p2;
reg   [0:0] icmp_ln899_27_reg_3978;
wire   [0:0] icmp_ln899_28_fu_2229_p2;
reg   [0:0] icmp_ln899_28_reg_3983;
wire   [0:0] icmp_ln899_29_fu_2235_p2;
reg   [0:0] icmp_ln899_29_reg_3988;
wire   [0:0] icmp_ln899_30_fu_2241_p2;
reg   [0:0] icmp_ln899_30_reg_3993;
wire   [0:0] icmp_ln899_31_fu_2247_p2;
reg   [0:0] icmp_ln899_31_reg_3998;
wire   [0:0] icmp_ln899_32_fu_2253_p2;
reg   [0:0] icmp_ln899_32_reg_4003;
wire   [0:0] icmp_ln899_33_fu_2259_p2;
reg   [0:0] icmp_ln899_33_reg_4008;
wire   [0:0] icmp_ln899_34_fu_2265_p2;
reg   [0:0] icmp_ln899_34_reg_4013;
wire   [0:0] xor_ln899_35_fu_2277_p2;
reg   [0:0] xor_ln899_35_reg_4018;
wire   [0:0] xor_ln899_36_fu_2289_p2;
reg   [0:0] xor_ln899_36_reg_4023;
wire   [0:0] xor_ln899_37_fu_2301_p2;
reg   [0:0] xor_ln899_37_reg_4028;
wire   [0:0] icmp_ln899_38_fu_2307_p2;
reg   [0:0] icmp_ln899_38_reg_4033;
wire   [0:0] icmp_ln899_39_fu_2313_p2;
reg   [0:0] icmp_ln899_39_reg_4038;
wire   [0:0] icmp_ln899_40_fu_2319_p2;
reg   [0:0] icmp_ln899_40_reg_4043;
wire   [0:0] icmp_ln899_41_fu_2325_p2;
reg   [0:0] icmp_ln899_41_reg_4048;
wire   [0:0] icmp_ln899_42_fu_2331_p2;
reg   [0:0] icmp_ln899_42_reg_4053;
wire   [0:0] icmp_ln899_43_fu_2337_p2;
reg   [0:0] icmp_ln899_43_reg_4058;
wire   [0:0] icmp_ln899_44_fu_2343_p2;
reg   [0:0] icmp_ln899_44_reg_4063;
wire   [0:0] icmp_ln899_45_fu_2349_p2;
reg   [0:0] icmp_ln899_45_reg_4068;
wire   [0:0] icmp_ln899_46_fu_2355_p2;
reg   [0:0] icmp_ln899_46_reg_4073;
wire   [0:0] icmp_ln899_47_fu_2361_p2;
reg   [0:0] icmp_ln899_47_reg_4078;
wire   [0:0] icmp_ln899_48_fu_2367_p2;
reg   [0:0] icmp_ln899_48_reg_4083;
wire   [0:0] xor_ln899_49_fu_2379_p2;
reg   [0:0] xor_ln899_49_reg_4088;
wire   [0:0] xor_ln899_50_fu_2391_p2;
reg   [0:0] xor_ln899_50_reg_4093;
wire   [0:0] xor_ln899_51_fu_2403_p2;
reg   [0:0] xor_ln899_51_reg_4098;
wire   [0:0] icmp_ln899_52_fu_2409_p2;
reg   [0:0] icmp_ln899_52_reg_4103;
wire   [0:0] icmp_ln899_53_fu_2415_p2;
reg   [0:0] icmp_ln899_53_reg_4108;
wire   [0:0] icmp_ln899_54_fu_2421_p2;
reg   [0:0] icmp_ln899_54_reg_4113;
wire   [0:0] icmp_ln899_55_fu_2427_p2;
reg   [0:0] icmp_ln899_55_reg_4118;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire   [23:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_1060;
reg   [23:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060;
wire   [63:0] zext_ln142_fu_1808_p1;
reg   [15:0] accu_V_0_0_0_fu_242;
wire   [15:0] accu_0_0_V_fu_1945_p2;
reg   [15:0] accu_V_0_1_0_fu_246;
wire   [15:0] accu_0_1_V_fu_1963_p2;
reg   [15:0] accu_V_0_2_0_fu_250;
wire   [15:0] accu_0_2_V_fu_1981_p2;
reg   [15:0] accu_V_0_3_0_fu_254;
wire   [15:0] accu_0_3_V_fu_1999_p2;
reg   [31:0] sf_1_fu_258;
wire   [31:0] sf_fu_1588_p2;
reg   [31:0] nf_assign_fu_262;
wire   [31:0] select_ln301_fu_1880_p3;
reg   [31:0] ap_sig_allocacmp_nf_assign_load_1;
reg   [23:0] inputBuf_8_V_1_fu_266;
wire   [23:0] inputBuf_8_V_19_fu_1412_p3;
reg   [23:0] inputBuf_8_V_2_fu_270;
wire   [23:0] inputBuf_8_V_18_fu_1404_p3;
reg   [23:0] inputBuf_8_V_4_fu_274;
wire   [23:0] inputBuf_8_V_16_fu_1388_p3;
reg   [23:0] inputBuf_8_V_6_fu_278;
wire   [23:0] inputBuf_8_V_15_fu_1372_p3;
reg   [23:0] inputBuf_8_V_7_fu_282;
wire   [23:0] inputBuf_8_V_14_fu_1348_p3;
reg   [23:0] inputBuf_8_V_5_fu_286;
wire   [23:0] inputBuf_8_V_13_fu_1332_p3;
reg   [23:0] inputBuf_8_V_3_fu_290;
wire   [23:0] inputBuf_8_V_12_fu_1308_p3;
reg   [23:0] inputBuf_8_V_8_fu_294;
wire   [23:0] inputBuf_8_V_11_fu_1284_p3;
reg   [23:0] inputBuf_8_V_9_fu_298;
wire   [23:0] inputBuf_8_V_fu_1252_p3;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] inElem_V_fu_1134_p10;
wire   [3:0] trunc_ln321_fu_1158_p1;
wire   [0:0] icmp_ln321_7_fu_1204_p2;
wire   [0:0] icmp_ln321_6_fu_1198_p2;
wire   [0:0] icmp_ln321_5_fu_1192_p2;
wire   [0:0] icmp_ln321_4_fu_1186_p2;
wire   [0:0] icmp_ln321_3_fu_1180_p2;
wire   [0:0] icmp_ln321_2_fu_1174_p2;
wire   [0:0] icmp_ln321_1_fu_1168_p2;
wire   [0:0] icmp_ln321_fu_1162_p2;
wire   [0:0] or_ln321_fu_1210_p2;
wire   [0:0] or_ln321_1_fu_1216_p2;
wire   [0:0] or_ln321_2_fu_1222_p2;
wire   [0:0] or_ln321_3_fu_1228_p2;
wire   [0:0] or_ln321_4_fu_1234_p2;
wire   [0:0] or_ln321_5_fu_1240_p2;
wire   [0:0] or_ln321_6_fu_1246_p2;
wire   [23:0] select_ln321_fu_1260_p3;
wire   [23:0] select_ln321_1_fu_1268_p3;
wire   [23:0] select_ln321_2_fu_1276_p3;
wire   [23:0] select_ln321_4_fu_1292_p3;
wire   [23:0] select_ln321_5_fu_1300_p3;
wire   [23:0] select_ln321_7_fu_1316_p3;
wire   [23:0] select_ln321_8_fu_1324_p3;
wire   [23:0] select_ln321_10_fu_1340_p3;
wire   [23:0] select_ln321_12_fu_1356_p3;
wire   [23:0] select_ln321_13_fu_1364_p3;
wire   [23:0] select_ln321_15_fu_1380_p3;
wire   [23:0] inputBuf_8_V_17_fu_1396_p3;
wire   [7:0] trunc_ln647_1_fu_1605_p1;
wire  signed [7:0] mul_ln1352_fu_1616_p0;
wire  signed [11:0] sext_ln215_1_fu_1612_p1;
wire   [7:0] arg_V_read_assign_1_fu_1622_p4;
wire  signed [7:0] mul_ln1352_1_fu_1639_p0;
wire  signed [11:0] sext_ln215_3_fu_1635_p1;
wire  signed [11:0] mul_ln1352_1_fu_1639_p2;
wire   [7:0] arg_V_read_assign_2_fu_1649_p4;
wire  signed [7:0] mul_ln1352_2_fu_1666_p0;
wire  signed [11:0] sext_ln215_5_fu_1662_p1;
wire  signed [11:0] mul_ln1352_2_fu_1666_p2;
wire  signed [12:0] sext_ln700_1_fu_1672_p1;
wire  signed [12:0] sext_ln170_fu_1645_p1;
wire  signed [7:0] mul_ln1352_3_fu_1685_p0;
wire  signed [7:0] mul_ln1352_4_fu_1694_p0;
wire  signed [11:0] mul_ln1352_4_fu_1694_p2;
wire  signed [7:0] mul_ln1352_5_fu_1707_p0;
wire  signed [11:0] mul_ln1352_5_fu_1707_p2;
wire  signed [12:0] sext_ln700_4_fu_1713_p1;
wire  signed [12:0] sext_ln170_1_fu_1700_p1;
wire  signed [7:0] mul_ln1352_6_fu_1726_p0;
wire  signed [7:0] mul_ln1352_7_fu_1735_p0;
wire  signed [11:0] mul_ln1352_7_fu_1735_p2;
wire  signed [7:0] mul_ln1352_8_fu_1748_p0;
wire  signed [11:0] mul_ln1352_8_fu_1748_p2;
wire  signed [12:0] sext_ln700_7_fu_1754_p1;
wire  signed [12:0] sext_ln170_2_fu_1741_p1;
wire  signed [7:0] mul_ln1352_9_fu_1767_p0;
wire  signed [7:0] mul_ln1352_10_fu_1776_p0;
wire  signed [11:0] mul_ln1352_10_fu_1776_p2;
wire  signed [7:0] mul_ln1352_11_fu_1789_p0;
wire  signed [11:0] mul_ln1352_11_fu_1789_p2;
wire  signed [12:0] sext_ln700_10_fu_1795_p1;
wire  signed [12:0] sext_ln170_3_fu_1782_p1;
wire   [31:0] nf_fu_1868_p2;
wire   [0:0] icmp_ln301_fu_1874_p2;
wire  signed [15:0] sext_ln700_fu_1933_p1;
wire   [15:0] select_ln271_3_fu_1926_p3;
wire   [15:0] add_ln700_fu_1936_p2;
wire  signed [15:0] sext_ln700_2_fu_1942_p1;
wire  signed [15:0] sext_ln700_3_fu_1951_p1;
wire   [15:0] select_ln271_2_fu_1919_p3;
wire   [15:0] add_ln700_3_fu_1954_p2;
wire  signed [15:0] sext_ln700_5_fu_1960_p1;
wire  signed [15:0] sext_ln700_6_fu_1969_p1;
wire   [15:0] select_ln271_1_fu_1912_p3;
wire   [15:0] add_ln700_6_fu_1972_p2;
wire  signed [15:0] sext_ln700_8_fu_1978_p1;
wire  signed [15:0] sext_ln700_9_fu_1987_p1;
wire   [15:0] select_ln271_fu_1905_p3;
wire   [15:0] add_ln700_9_fu_1990_p2;
wire  signed [15:0] sext_ln700_11_fu_1996_p1;
wire   [0:0] icmp_ln899_7_fu_2067_p2;
wire   [0:0] icmp_ln899_8_fu_2079_p2;
wire   [0:0] icmp_ln899_9_fu_2091_p2;
wire   [0:0] icmp_ln899_21_fu_2169_p2;
wire   [0:0] icmp_ln899_22_fu_2181_p2;
wire   [0:0] icmp_ln899_23_fu_2193_p2;
wire   [0:0] icmp_ln899_35_fu_2271_p2;
wire   [0:0] icmp_ln899_36_fu_2283_p2;
wire   [0:0] icmp_ln899_37_fu_2295_p2;
wire   [0:0] icmp_ln899_49_fu_2373_p2;
wire   [0:0] icmp_ln899_50_fu_2385_p2;
wire   [0:0] icmp_ln899_51_fu_2397_p2;
wire   [0:0] xor_ln899_fu_2433_p2;
wire   [0:0] xor_ln899_1_fu_2446_p2;
wire   [0:0] xor_ln899_2_fu_2455_p2;
wire   [0:0] xor_ln899_3_fu_2464_p2;
wire   [0:0] xor_ln899_4_fu_2473_p2;
wire   [0:0] xor_ln899_5_fu_2482_p2;
wire   [0:0] xor_ln899_6_fu_2491_p2;
wire   [0:0] xor_ln899_10_fu_2509_p2;
wire   [0:0] xor_ln899_11_fu_2518_p2;
wire   [0:0] xor_ln899_12_fu_2527_p2;
wire   [0:0] xor_ln899_13_fu_2536_p2;
wire   [1:0] zext_ln142_1_fu_2451_p1;
wire   [1:0] zext_ln142_2_fu_2460_p1;
wire   [1:0] add_ln700_12_fu_2545_p2;
wire   [3:0] zext_ln700_1_fu_2551_p1;
wire   [3:0] select_ln700_fu_2438_p3;
wire   [1:0] zext_ln142_3_fu_2469_p1;
wire   [1:0] zext_ln142_4_fu_2478_p1;
wire   [1:0] add_ln700_14_fu_2561_p2;
wire   [1:0] zext_ln142_5_fu_2487_p1;
wire   [1:0] zext_ln142_6_fu_2496_p1;
wire   [1:0] add_ln700_15_fu_2571_p2;
wire   [2:0] zext_ln700_3_fu_2577_p1;
wire   [2:0] zext_ln700_2_fu_2567_p1;
wire   [2:0] add_ln700_16_fu_2581_p2;
wire   [3:0] zext_ln700_4_fu_2587_p1;
wire   [3:0] add_ln700_13_fu_2555_p2;
wire   [1:0] zext_ln142_8_fu_2503_p1;
wire   [1:0] zext_ln142_9_fu_2506_p1;
wire   [1:0] add_ln700_18_fu_2597_p2;
wire   [1:0] zext_ln142_7_fu_2500_p1;
wire   [1:0] add_ln700_19_fu_2603_p2;
wire   [1:0] zext_ln142_10_fu_2514_p1;
wire   [1:0] zext_ln142_11_fu_2523_p1;
wire   [1:0] add_ln700_20_fu_2613_p2;
wire   [1:0] zext_ln142_12_fu_2532_p1;
wire   [1:0] zext_ln700_fu_2541_p1;
wire   [1:0] add_ln700_21_fu_2623_p2;
wire   [2:0] zext_ln700_7_fu_2629_p1;
wire   [2:0] zext_ln700_6_fu_2619_p1;
wire   [2:0] add_ln700_22_fu_2633_p2;
wire   [2:0] zext_ln700_5_fu_2609_p1;
wire   [2:0] add_ln700_23_fu_2639_p2;
wire   [3:0] zext_ln700_8_fu_2645_p1;
wire   [3:0] add_ln700_17_fu_2591_p2;
wire   [0:0] xor_ln899_14_fu_2655_p2;
wire   [0:0] xor_ln899_15_fu_2668_p2;
wire   [0:0] xor_ln899_16_fu_2677_p2;
wire   [0:0] xor_ln899_17_fu_2686_p2;
wire   [0:0] xor_ln899_18_fu_2695_p2;
wire   [0:0] xor_ln899_19_fu_2704_p2;
wire   [0:0] xor_ln899_20_fu_2713_p2;
wire   [0:0] xor_ln899_24_fu_2731_p2;
wire   [0:0] xor_ln899_25_fu_2740_p2;
wire   [0:0] xor_ln899_26_fu_2749_p2;
wire   [0:0] xor_ln899_27_fu_2758_p2;
wire   [1:0] zext_ln142_13_fu_2673_p1;
wire   [1:0] zext_ln142_14_fu_2682_p1;
wire   [1:0] add_ln700_25_fu_2767_p2;
wire   [3:0] zext_ln700_10_fu_2773_p1;
wire   [3:0] select_ln700_1_fu_2660_p3;
wire   [1:0] zext_ln142_15_fu_2691_p1;
wire   [1:0] zext_ln142_16_fu_2700_p1;
wire   [1:0] add_ln700_27_fu_2783_p2;
wire   [1:0] zext_ln142_17_fu_2709_p1;
wire   [1:0] zext_ln142_18_fu_2718_p1;
wire   [1:0] add_ln700_28_fu_2793_p2;
wire   [2:0] zext_ln700_12_fu_2799_p1;
wire   [2:0] zext_ln700_11_fu_2789_p1;
wire   [2:0] add_ln700_29_fu_2803_p2;
wire   [3:0] zext_ln700_13_fu_2809_p1;
wire   [3:0] add_ln700_26_fu_2777_p2;
wire   [1:0] zext_ln142_20_fu_2725_p1;
wire   [1:0] zext_ln142_21_fu_2728_p1;
wire   [1:0] add_ln700_31_fu_2819_p2;
wire   [1:0] zext_ln142_19_fu_2722_p1;
wire   [1:0] add_ln700_32_fu_2825_p2;
wire   [1:0] zext_ln142_22_fu_2736_p1;
wire   [1:0] zext_ln142_23_fu_2745_p1;
wire   [1:0] add_ln700_33_fu_2835_p2;
wire   [1:0] zext_ln142_24_fu_2754_p1;
wire   [1:0] zext_ln700_9_fu_2763_p1;
wire   [1:0] add_ln700_34_fu_2845_p2;
wire   [2:0] zext_ln700_16_fu_2851_p1;
wire   [2:0] zext_ln700_15_fu_2841_p1;
wire   [2:0] add_ln700_35_fu_2855_p2;
wire   [2:0] zext_ln700_14_fu_2831_p1;
wire   [2:0] add_ln700_36_fu_2861_p2;
wire   [3:0] zext_ln700_17_fu_2867_p1;
wire   [3:0] add_ln700_30_fu_2813_p2;
wire   [0:0] xor_ln899_28_fu_2877_p2;
wire   [0:0] xor_ln899_29_fu_2890_p2;
wire   [0:0] xor_ln899_30_fu_2899_p2;
wire   [0:0] xor_ln899_31_fu_2908_p2;
wire   [0:0] xor_ln899_32_fu_2917_p2;
wire   [0:0] xor_ln899_33_fu_2926_p2;
wire   [0:0] xor_ln899_34_fu_2935_p2;
wire   [0:0] xor_ln899_38_fu_2953_p2;
wire   [0:0] xor_ln899_39_fu_2962_p2;
wire   [0:0] xor_ln899_40_fu_2971_p2;
wire   [0:0] xor_ln899_41_fu_2980_p2;
wire   [1:0] zext_ln142_25_fu_2895_p1;
wire   [1:0] zext_ln142_26_fu_2904_p1;
wire   [1:0] add_ln700_38_fu_2989_p2;
wire   [3:0] zext_ln700_19_fu_2995_p1;
wire   [3:0] select_ln700_2_fu_2882_p3;
wire   [1:0] zext_ln142_27_fu_2913_p1;
wire   [1:0] zext_ln142_28_fu_2922_p1;
wire   [1:0] add_ln700_40_fu_3005_p2;
wire   [1:0] zext_ln142_29_fu_2931_p1;
wire   [1:0] zext_ln142_30_fu_2940_p1;
wire   [1:0] add_ln700_41_fu_3015_p2;
wire   [2:0] zext_ln700_21_fu_3021_p1;
wire   [2:0] zext_ln700_20_fu_3011_p1;
wire   [2:0] add_ln700_42_fu_3025_p2;
wire   [3:0] zext_ln700_22_fu_3031_p1;
wire   [3:0] add_ln700_39_fu_2999_p2;
wire   [1:0] zext_ln142_32_fu_2947_p1;
wire   [1:0] zext_ln142_33_fu_2950_p1;
wire   [1:0] add_ln700_44_fu_3041_p2;
wire   [1:0] zext_ln142_31_fu_2944_p1;
wire   [1:0] add_ln700_45_fu_3047_p2;
wire   [1:0] zext_ln142_34_fu_2958_p1;
wire   [1:0] zext_ln142_35_fu_2967_p1;
wire   [1:0] add_ln700_46_fu_3057_p2;
wire   [1:0] zext_ln142_36_fu_2976_p1;
wire   [1:0] zext_ln700_18_fu_2985_p1;
wire   [1:0] add_ln700_47_fu_3067_p2;
wire   [2:0] zext_ln700_25_fu_3073_p1;
wire   [2:0] zext_ln700_24_fu_3063_p1;
wire   [2:0] add_ln700_48_fu_3077_p2;
wire   [2:0] zext_ln700_23_fu_3053_p1;
wire   [2:0] add_ln700_49_fu_3083_p2;
wire   [3:0] zext_ln700_26_fu_3089_p1;
wire   [3:0] add_ln700_43_fu_3035_p2;
wire   [0:0] xor_ln899_42_fu_3099_p2;
wire   [0:0] xor_ln899_43_fu_3112_p2;
wire   [0:0] xor_ln899_44_fu_3121_p2;
wire   [0:0] xor_ln899_45_fu_3130_p2;
wire   [0:0] xor_ln899_46_fu_3139_p2;
wire   [0:0] xor_ln899_47_fu_3148_p2;
wire   [0:0] xor_ln899_48_fu_3157_p2;
wire   [0:0] xor_ln899_52_fu_3175_p2;
wire   [0:0] xor_ln899_53_fu_3184_p2;
wire   [0:0] xor_ln899_54_fu_3193_p2;
wire   [0:0] xor_ln899_55_fu_3202_p2;
wire   [1:0] zext_ln142_37_fu_3117_p1;
wire   [1:0] zext_ln142_38_fu_3126_p1;
wire   [1:0] add_ln700_51_fu_3211_p2;
wire   [3:0] zext_ln700_28_fu_3217_p1;
wire   [3:0] select_ln700_3_fu_3104_p3;
wire   [1:0] zext_ln142_39_fu_3135_p1;
wire   [1:0] zext_ln142_40_fu_3144_p1;
wire   [1:0] add_ln700_53_fu_3227_p2;
wire   [1:0] zext_ln142_41_fu_3153_p1;
wire   [1:0] zext_ln142_42_fu_3162_p1;
wire   [1:0] add_ln700_54_fu_3237_p2;
wire   [2:0] zext_ln700_30_fu_3243_p1;
wire   [2:0] zext_ln700_29_fu_3233_p1;
wire   [2:0] add_ln700_55_fu_3247_p2;
wire   [3:0] zext_ln700_31_fu_3253_p1;
wire   [3:0] add_ln700_52_fu_3221_p2;
wire   [1:0] zext_ln142_44_fu_3169_p1;
wire   [1:0] zext_ln142_45_fu_3172_p1;
wire   [1:0] add_ln700_57_fu_3263_p2;
wire   [1:0] zext_ln142_43_fu_3166_p1;
wire   [1:0] add_ln700_58_fu_3269_p2;
wire   [1:0] zext_ln142_46_fu_3180_p1;
wire   [1:0] zext_ln142_47_fu_3189_p1;
wire   [1:0] add_ln700_59_fu_3279_p2;
wire   [1:0] zext_ln142_48_fu_3198_p1;
wire   [1:0] zext_ln700_27_fu_3207_p1;
wire   [1:0] add_ln700_60_fu_3289_p2;
wire   [2:0] zext_ln700_34_fu_3295_p1;
wire   [2:0] zext_ln700_33_fu_3285_p1;
wire   [2:0] add_ln700_61_fu_3299_p2;
wire   [2:0] zext_ln700_32_fu_3275_p1;
wire   [2:0] add_ln700_62_fu_3305_p2;
wire   [3:0] zext_ln700_35_fu_3311_p1;
wire   [3:0] add_ln700_56_fu_3257_p2;
wire   [3:0] add_ln700_63_fu_3315_p2;
wire   [3:0] add_ln700_50_fu_3093_p2;
wire   [3:0] add_ln700_37_fu_2871_p2;
wire   [3:0] add_ln700_24_fu_2649_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_485;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

StreamingFCLayer_Batch_2_Matrix_Vector_Actbkb #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_55_address0),
    .ce0(threshs_m_thresholds_55_ce0),
    .q0(threshs_m_thresholds_55_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actcud #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_54_address0),
    .ce0(threshs_m_thresholds_54_ce0),
    .q0(threshs_m_thresholds_54_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActdEe #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_49_address0),
    .ce0(threshs_m_thresholds_49_ce0),
    .q0(threshs_m_thresholds_49_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActeOg #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_48_address0),
    .ce0(threshs_m_thresholds_48_ce0),
    .q0(threshs_m_thresholds_48_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActfYi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_47_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_47_address0),
    .ce0(threshs_m_thresholds_47_ce0),
    .q0(threshs_m_thresholds_47_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actg8j #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_46_address0),
    .ce0(threshs_m_thresholds_46_ce0),
    .q0(threshs_m_thresholds_46_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Acthbi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_45_address0),
    .ce0(threshs_m_thresholds_45_ce0),
    .q0(threshs_m_thresholds_45_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actibs #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_44_address0),
    .ce0(threshs_m_thresholds_44_ce0),
    .q0(threshs_m_thresholds_44_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActjbC #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_43_address0),
    .ce0(threshs_m_thresholds_43_ce0),
    .q0(threshs_m_thresholds_43_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActkbM #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_42_address0),
    .ce0(threshs_m_thresholds_42_ce0),
    .q0(threshs_m_thresholds_42_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActlbW #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_53_address0),
    .ce0(threshs_m_thresholds_53_ce0),
    .q0(threshs_m_thresholds_53_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_52_address0),
    .ce0(threshs_m_thresholds_52_ce0),
    .q0(threshs_m_thresholds_52_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actncg #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_51_address0),
    .ce0(threshs_m_thresholds_51_ce0),
    .q0(threshs_m_thresholds_51_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actocq #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_50_address0),
    .ce0(threshs_m_thresholds_50_ce0),
    .q0(threshs_m_thresholds_50_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActpcA #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_41_address0),
    .ce0(threshs_m_thresholds_41_ce0),
    .q0(threshs_m_thresholds_41_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActqcK #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_40_address0),
    .ce0(threshs_m_thresholds_40_ce0),
    .q0(threshs_m_thresholds_40_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActrcU #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_35_address0),
    .ce0(threshs_m_thresholds_35_ce0),
    .q0(threshs_m_thresholds_35_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actsc4 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_34_address0),
    .ce0(threshs_m_thresholds_34_ce0),
    .q0(threshs_m_thresholds_34_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Acttde #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_33_address0),
    .ce0(threshs_m_thresholds_33_ce0),
    .q0(threshs_m_thresholds_33_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actudo #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_32_address0),
    .ce0(threshs_m_thresholds_32_ce0),
    .q0(threshs_m_thresholds_32_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actvdy #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_31_address0),
    .ce0(threshs_m_thresholds_31_ce0),
    .q0(threshs_m_thresholds_31_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActwdI #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_30_address0),
    .ce0(threshs_m_thresholds_30_ce0),
    .q0(threshs_m_thresholds_30_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActxdS #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_29_address0),
    .ce0(threshs_m_thresholds_29_ce0),
    .q0(threshs_m_thresholds_29_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actyd2 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_28_address0),
    .ce0(threshs_m_thresholds_28_ce0),
    .q0(threshs_m_thresholds_28_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Actzec #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_39_address0),
    .ce0(threshs_m_thresholds_39_ce0),
    .q0(threshs_m_thresholds_39_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActAem #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_38_address0),
    .ce0(threshs_m_thresholds_38_ce0),
    .q0(threshs_m_thresholds_38_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActBew #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_37_address0),
    .ce0(threshs_m_thresholds_37_ce0),
    .q0(threshs_m_thresholds_37_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActCeG #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_36_address0),
    .ce0(threshs_m_thresholds_36_ce0),
    .q0(threshs_m_thresholds_36_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActDeQ #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_27_address0),
    .ce0(threshs_m_thresholds_27_ce0),
    .q0(threshs_m_thresholds_27_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActEe0 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_26_address0),
    .ce0(threshs_m_thresholds_26_ce0),
    .q0(threshs_m_thresholds_26_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActFfa #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_21_address0),
    .ce0(threshs_m_thresholds_21_ce0),
    .q0(threshs_m_thresholds_21_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActGfk #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_20_address0),
    .ce0(threshs_m_thresholds_20_ce0),
    .q0(threshs_m_thresholds_20_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActHfu #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_19_address0),
    .ce0(threshs_m_thresholds_19_ce0),
    .q0(threshs_m_thresholds_19_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActHfu #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_18_address0),
    .ce0(threshs_m_thresholds_18_ce0),
    .q0(threshs_m_thresholds_18_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActHfu #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_17_address0),
    .ce0(threshs_m_thresholds_17_ce0),
    .q0(threshs_m_thresholds_17_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActHfu #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_16_address0),
    .ce0(threshs_m_thresholds_16_ce0),
    .q0(threshs_m_thresholds_16_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActLf8 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_15_address0),
    .ce0(threshs_m_thresholds_15_ce0),
    .q0(threshs_m_thresholds_15_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActMgi #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_14_address0),
    .ce0(threshs_m_thresholds_14_ce0),
    .q0(threshs_m_thresholds_14_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActNgs #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_25_address0),
    .ce0(threshs_m_thresholds_25_ce0),
    .q0(threshs_m_thresholds_25_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActOgC #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_24_address0),
    .ce0(threshs_m_thresholds_24_ce0),
    .q0(threshs_m_thresholds_24_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActPgM #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_23_address0),
    .ce0(threshs_m_thresholds_23_ce0),
    .q0(threshs_m_thresholds_23_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActQgW #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_22_address0),
    .ce0(threshs_m_thresholds_22_ce0),
    .q0(threshs_m_thresholds_22_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActRg6 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_13_address0),
    .ce0(threshs_m_thresholds_13_ce0),
    .q0(threshs_m_thresholds_13_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActShg #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_12_address0),
    .ce0(threshs_m_thresholds_12_ce0),
    .q0(threshs_m_thresholds_12_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActThq #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_7_address0),
    .ce0(threshs_m_thresholds_7_ce0),
    .q0(threshs_m_thresholds_7_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActUhA #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_6_address0),
    .ce0(threshs_m_thresholds_6_ce0),
    .q0(threshs_m_thresholds_6_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActVhK #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_5_address0),
    .ce0(threshs_m_thresholds_5_ce0),
    .q0(threshs_m_thresholds_5_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActWhU #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_4_address0),
    .ce0(threshs_m_thresholds_4_ce0),
    .q0(threshs_m_thresholds_4_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActXh4 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_3_address0),
    .ce0(threshs_m_thresholds_3_ce0),
    .q0(threshs_m_thresholds_3_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActYie #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_2_address0),
    .ce0(threshs_m_thresholds_2_ce0),
    .q0(threshs_m_thresholds_2_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_ActZio #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_1_address0),
    .ce0(threshs_m_thresholds_1_ce0),
    .q0(threshs_m_thresholds_1_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Act0iy #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_address0),
    .ce0(threshs_m_thresholds_ce0),
    .q0(threshs_m_thresholds_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Act1iI #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_11_address0),
    .ce0(threshs_m_thresholds_11_ce0),
    .q0(threshs_m_thresholds_11_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Act2iS #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_10_address0),
    .ce0(threshs_m_thresholds_10_ce0),
    .q0(threshs_m_thresholds_10_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Act3i2 #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_9_address0),
    .ce0(threshs_m_thresholds_9_ce0),
    .q0(threshs_m_thresholds_9_q0)
);

StreamingFCLayer_Batch_2_Matrix_Vector_Act4jc #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
threshs_m_thresholds_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(threshs_m_thresholds_8_address0),
    .ce0(threshs_m_thresholds_8_ce0),
    .q0(threshs_m_thresholds_8_q0)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_5jm #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
StreamingFCLayer_5jm_U1(
    .din0(inputBuf_8_V_1_fu_266),
    .din1(inputBuf_8_V_2_fu_270),
    .din2(inputBuf_8_V_4_fu_274),
    .din3(inputBuf_8_V_6_fu_278),
    .din4(inputBuf_8_V_7_fu_282),
    .din5(inputBuf_8_V_5_fu_286),
    .din6(inputBuf_8_V_3_fu_290),
    .din7(inputBuf_8_V_8_fu_294),
    .din8(inputBuf_8_V_9_fu_298),
    .din9(inElem_V_fu_1134_p10),
    .dout(inElem_V_fu_1134_p11)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U2(
    .din0(mul_ln1352_fu_1616_p0),
    .din1(trunc_ln647_reg_3459),
    .dout(mul_ln1352_fu_1616_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U3(
    .din0(mul_ln1352_1_fu_1639_p0),
    .din1(p_Result_1_0_1_reg_3464),
    .dout(mul_ln1352_1_fu_1639_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U4(
    .din0(mul_ln1352_2_fu_1666_p0),
    .din1(p_Result_1_0_2_reg_3469),
    .dout(mul_ln1352_2_fu_1666_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U5(
    .din0(mul_ln1352_3_fu_1685_p0),
    .din1(p_Result_1_1_reg_3474),
    .dout(mul_ln1352_3_fu_1685_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U6(
    .din0(mul_ln1352_4_fu_1694_p0),
    .din1(p_Result_1_1_1_reg_3479),
    .dout(mul_ln1352_4_fu_1694_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U7(
    .din0(mul_ln1352_5_fu_1707_p0),
    .din1(p_Result_1_1_2_reg_3484),
    .dout(mul_ln1352_5_fu_1707_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U8(
    .din0(mul_ln1352_6_fu_1726_p0),
    .din1(p_Result_1_2_reg_3489),
    .dout(mul_ln1352_6_fu_1726_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U9(
    .din0(mul_ln1352_7_fu_1735_p0),
    .din1(p_Result_1_2_1_reg_3494),
    .dout(mul_ln1352_7_fu_1735_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U10(
    .din0(mul_ln1352_8_fu_1748_p0),
    .din1(p_Result_1_2_2_reg_3499),
    .dout(mul_ln1352_8_fu_1748_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U11(
    .din0(mul_ln1352_9_fu_1767_p0),
    .din1(p_Result_1_3_reg_3504),
    .dout(mul_ln1352_9_fu_1767_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U12(
    .din0(mul_ln1352_10_fu_1776_p0),
    .din1(p_Result_1_3_1_reg_3509),
    .dout(mul_ln1352_10_fu_1776_p2)
);

StreamingFCLayer_Batch_2_StreamingFCLayer_6jw #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
StreamingFCLayer_6jw_U13(
    .din0(mul_ln1352_11_fu_1789_p0),
    .din1(p_Result_1_3_2_reg_3514),
    .dout(mul_ln1352_11_fu_1789_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_485)) begin
        if (((icmp_ln252_fu_1094_p2 == 1'd0) & (icmp_ln248_fu_1079_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060 <= inElem_V_fu_1134_p11;
        end else if (((icmp_ln252_fu_1094_p2 == 1'd1) & (icmp_ln248_fu_1079_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060 <= in_V_V_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_1060;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_1049 <= i_fu_1085_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_1049 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_3519 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_262 <= select_ln301_fu_1880_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_262 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1594_p2 == 1'd0) & (icmp_ln248_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_1_fu_258 <= sf_fu_1588_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_fu_1594_p2 == 1'd1) & (icmp_ln248_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_1_fu_258 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        accu_V_0_0_0_fu_242 <= accu_0_0_V_fu_1945_p2;
        accu_V_0_1_0_fu_246 <= accu_0_1_V_fu_1963_p2;
        accu_V_0_2_0_fu_250 <= accu_0_2_V_fu_1981_p2;
        accu_V_0_3_0_fu_254 <= accu_0_3_V_fu_1999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln700_10_reg_3558 <= add_ln700_10_fu_1799_p2;
        add_ln700_1_reg_3528 <= add_ln700_1_fu_1676_p2;
        add_ln700_4_reg_3538 <= add_ln700_4_fu_1717_p2;
        add_ln700_7_reg_3548 <= add_ln700_7_fu_1758_p2;
        icmp_ln271_reg_3451_pp0_iter1_reg <= icmp_ln271_reg_3451;
        icmp_ln289_reg_3519_pp0_iter1_reg <= icmp_ln289_reg_3519;
        mul_ln1352_3_reg_3533 <= mul_ln1352_3_fu_1685_p2;
        mul_ln1352_6_reg_3543 <= mul_ln1352_6_fu_1726_p2;
        mul_ln1352_9_reg_3553 <= mul_ln1352_9_fu_1767_p2;
        mul_ln1352_reg_3523 <= mul_ln1352_fu_1616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_1079_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln271_reg_3451 <= icmp_ln271_fu_1468_p2;
        icmp_ln289_reg_3519 <= icmp_ln289_fu_1594_p2;
        p_Result_1_0_1_reg_3464 <= {{weight_V_V_TDATA[7:4]}};
        p_Result_1_0_2_reg_3469 <= {{weight_V_V_TDATA[11:8]}};
        p_Result_1_1_1_reg_3479 <= {{weight_V_V_TDATA[19:16]}};
        p_Result_1_1_2_reg_3484 <= {{weight_V_V_TDATA[23:20]}};
        p_Result_1_1_reg_3474 <= {{weight_V_V_TDATA[15:12]}};
        p_Result_1_2_1_reg_3494 <= {{weight_V_V_TDATA[31:28]}};
        p_Result_1_2_2_reg_3499 <= {{weight_V_V_TDATA[35:32]}};
        p_Result_1_2_reg_3489 <= {{weight_V_V_TDATA[27:24]}};
        p_Result_1_3_1_reg_3509 <= {{weight_V_V_TDATA[43:40]}};
        p_Result_1_3_2_reg_3514 <= {{weight_V_V_TDATA[47:44]}};
        p_Result_1_3_reg_3504 <= {{weight_V_V_TDATA[39:36]}};
        trunc_ln647_reg_3459 <= trunc_ln647_fu_1474_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln289_reg_3519_pp0_iter2_reg <= icmp_ln289_reg_3519_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_3519_pp0_iter1_reg == 1'd1))) begin
        icmp_ln899_10_reg_3893 <= icmp_ln899_10_fu_2103_p2;
        icmp_ln899_11_reg_3898 <= icmp_ln899_11_fu_2109_p2;
        icmp_ln899_12_reg_3903 <= icmp_ln899_12_fu_2115_p2;
        icmp_ln899_13_reg_3908 <= icmp_ln899_13_fu_2121_p2;
        icmp_ln899_14_reg_3913 <= icmp_ln899_14_fu_2127_p2;
        icmp_ln899_15_reg_3918 <= icmp_ln899_15_fu_2133_p2;
        icmp_ln899_16_reg_3923 <= icmp_ln899_16_fu_2139_p2;
        icmp_ln899_17_reg_3928 <= icmp_ln899_17_fu_2145_p2;
        icmp_ln899_18_reg_3933 <= icmp_ln899_18_fu_2151_p2;
        icmp_ln899_19_reg_3938 <= icmp_ln899_19_fu_2157_p2;
        icmp_ln899_1_reg_3848 <= icmp_ln899_1_fu_2031_p2;
        icmp_ln899_20_reg_3943 <= icmp_ln899_20_fu_2163_p2;
        icmp_ln899_24_reg_3963 <= icmp_ln899_24_fu_2205_p2;
        icmp_ln899_25_reg_3968 <= icmp_ln899_25_fu_2211_p2;
        icmp_ln899_26_reg_3973 <= icmp_ln899_26_fu_2217_p2;
        icmp_ln899_27_reg_3978 <= icmp_ln899_27_fu_2223_p2;
        icmp_ln899_28_reg_3983 <= icmp_ln899_28_fu_2229_p2;
        icmp_ln899_29_reg_3988 <= icmp_ln899_29_fu_2235_p2;
        icmp_ln899_2_reg_3853 <= icmp_ln899_2_fu_2037_p2;
        icmp_ln899_30_reg_3993 <= icmp_ln899_30_fu_2241_p2;
        icmp_ln899_31_reg_3998 <= icmp_ln899_31_fu_2247_p2;
        icmp_ln899_32_reg_4003 <= icmp_ln899_32_fu_2253_p2;
        icmp_ln899_33_reg_4008 <= icmp_ln899_33_fu_2259_p2;
        icmp_ln899_34_reg_4013 <= icmp_ln899_34_fu_2265_p2;
        icmp_ln899_38_reg_4033 <= icmp_ln899_38_fu_2307_p2;
        icmp_ln899_39_reg_4038 <= icmp_ln899_39_fu_2313_p2;
        icmp_ln899_3_reg_3858 <= icmp_ln899_3_fu_2043_p2;
        icmp_ln899_40_reg_4043 <= icmp_ln899_40_fu_2319_p2;
        icmp_ln899_41_reg_4048 <= icmp_ln899_41_fu_2325_p2;
        icmp_ln899_42_reg_4053 <= icmp_ln899_42_fu_2331_p2;
        icmp_ln899_43_reg_4058 <= icmp_ln899_43_fu_2337_p2;
        icmp_ln899_44_reg_4063 <= icmp_ln899_44_fu_2343_p2;
        icmp_ln899_45_reg_4068 <= icmp_ln899_45_fu_2349_p2;
        icmp_ln899_46_reg_4073 <= icmp_ln899_46_fu_2355_p2;
        icmp_ln899_47_reg_4078 <= icmp_ln899_47_fu_2361_p2;
        icmp_ln899_48_reg_4083 <= icmp_ln899_48_fu_2367_p2;
        icmp_ln899_4_reg_3863 <= icmp_ln899_4_fu_2049_p2;
        icmp_ln899_52_reg_4103 <= icmp_ln899_52_fu_2409_p2;
        icmp_ln899_53_reg_4108 <= icmp_ln899_53_fu_2415_p2;
        icmp_ln899_54_reg_4113 <= icmp_ln899_54_fu_2421_p2;
        icmp_ln899_55_reg_4118 <= icmp_ln899_55_fu_2427_p2;
        icmp_ln899_5_reg_3868 <= icmp_ln899_5_fu_2055_p2;
        icmp_ln899_6_reg_3873 <= icmp_ln899_6_fu_2061_p2;
        icmp_ln899_reg_3843 <= icmp_ln899_fu_2025_p2;
        xor_ln899_21_reg_3948 <= xor_ln899_21_fu_2175_p2;
        xor_ln899_22_reg_3953 <= xor_ln899_22_fu_2187_p2;
        xor_ln899_23_reg_3958 <= xor_ln899_23_fu_2199_p2;
        xor_ln899_35_reg_4018 <= xor_ln899_35_fu_2277_p2;
        xor_ln899_36_reg_4023 <= xor_ln899_36_fu_2289_p2;
        xor_ln899_37_reg_4028 <= xor_ln899_37_fu_2301_p2;
        xor_ln899_49_reg_4088 <= xor_ln899_49_fu_2379_p2;
        xor_ln899_50_reg_4093 <= xor_ln899_50_fu_2391_p2;
        xor_ln899_51_reg_4098 <= xor_ln899_51_fu_2403_p2;
        xor_ln899_7_reg_3878 <= xor_ln899_7_fu_2073_p2;
        xor_ln899_8_reg_3883 <= xor_ln899_8_fu_2085_p2;
        xor_ln899_9_reg_3888 <= xor_ln899_9_fu_2097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln252_fu_1094_p2 == 1'd1) & (icmp_ln248_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_8_V_1_fu_266 <= inputBuf_8_V_19_fu_1412_p3;
        inputBuf_8_V_2_fu_270 <= inputBuf_8_V_18_fu_1404_p3;
        inputBuf_8_V_3_fu_290 <= inputBuf_8_V_12_fu_1308_p3;
        inputBuf_8_V_4_fu_274 <= inputBuf_8_V_16_fu_1388_p3;
        inputBuf_8_V_5_fu_286 <= inputBuf_8_V_13_fu_1332_p3;
        inputBuf_8_V_6_fu_278 <= inputBuf_8_V_15_fu_1372_p3;
        inputBuf_8_V_7_fu_282 <= inputBuf_8_V_14_fu_1348_p3;
        inputBuf_8_V_8_fu_294 <= inputBuf_8_V_11_fu_1284_p3;
        inputBuf_8_V_9_fu_298 <= inputBuf_8_V_fu_1252_p3;
    end
end

always @ (*) begin
    if ((icmp_ln248_fu_1079_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_3519 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load_1 = select_ln301_fu_1880_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load_1 = nf_assign_fu_262;
    end
end

always @ (*) begin
    if (((icmp_ln252_fu_1094_p2 == 1'd1) & (icmp_ln248_fu_1079_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_TDATA_blk_n = in_V_V_TVALID;
    end else begin
        in_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op51_read_state2 == 1'b1))) begin
        in_V_V_TREADY = 1'b1;
    end else begin
        in_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln289_reg_3519_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_TDATA_blk_n = out_V_V_TREADY;
    end else begin
        out_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln289_reg_3519_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_TVALID = 1'b1;
    end else begin
        out_V_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_10_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_11_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_12_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_13_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_14_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_15_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_16_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_17_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_18_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_19_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_1_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_20_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_21_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_22_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_23_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_24_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_25_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_26_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_27_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_28_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_29_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_2_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_30_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_31_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_32_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_33_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_34_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_35_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_36_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_37_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_38_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_39_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_3_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_40_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_41_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_42_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_43_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_44_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_45_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_46_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_47_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_48_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_49_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_4_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_50_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_51_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_52_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_53_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_54_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_55_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_5_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_6_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_7_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_8_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_9_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        threshs_m_thresholds_ce0 = 1'b1;
    end else begin
        threshs_m_thresholds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln248_fu_1079_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_V_V_TDATA_blk_n = weight_V_V_TVALID;
    end else begin
        weight_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln248_fu_1079_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_V_V_TREADY = 1'b1;
    end else begin
        weight_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln248_fu_1079_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln248_fu_1079_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_1945_p2 = ($signed(add_ln700_fu_1936_p2) + $signed(sext_ln700_2_fu_1942_p1));

assign accu_0_1_V_fu_1963_p2 = ($signed(add_ln700_3_fu_1954_p2) + $signed(sext_ln700_5_fu_1960_p1));

assign accu_0_2_V_fu_1981_p2 = ($signed(add_ln700_6_fu_1972_p2) + $signed(sext_ln700_8_fu_1978_p1));

assign accu_0_3_V_fu_1999_p2 = ($signed(add_ln700_9_fu_1990_p2) + $signed(sext_ln700_11_fu_1996_p1));

assign add_ln700_10_fu_1799_p2 = ($signed(sext_ln700_10_fu_1795_p1) + $signed(sext_ln170_3_fu_1782_p1));

assign add_ln700_12_fu_2545_p2 = (zext_ln142_1_fu_2451_p1 + zext_ln142_2_fu_2460_p1);

assign add_ln700_13_fu_2555_p2 = (zext_ln700_1_fu_2551_p1 + select_ln700_fu_2438_p3);

assign add_ln700_14_fu_2561_p2 = (zext_ln142_3_fu_2469_p1 + zext_ln142_4_fu_2478_p1);

assign add_ln700_15_fu_2571_p2 = (zext_ln142_5_fu_2487_p1 + zext_ln142_6_fu_2496_p1);

assign add_ln700_16_fu_2581_p2 = (zext_ln700_3_fu_2577_p1 + zext_ln700_2_fu_2567_p1);

assign add_ln700_17_fu_2591_p2 = (zext_ln700_4_fu_2587_p1 + add_ln700_13_fu_2555_p2);

assign add_ln700_18_fu_2597_p2 = (zext_ln142_8_fu_2503_p1 + zext_ln142_9_fu_2506_p1);

assign add_ln700_19_fu_2603_p2 = (add_ln700_18_fu_2597_p2 + zext_ln142_7_fu_2500_p1);

assign add_ln700_1_fu_1676_p2 = ($signed(sext_ln700_1_fu_1672_p1) + $signed(sext_ln170_fu_1645_p1));

assign add_ln700_20_fu_2613_p2 = (zext_ln142_10_fu_2514_p1 + zext_ln142_11_fu_2523_p1);

assign add_ln700_21_fu_2623_p2 = (zext_ln142_12_fu_2532_p1 + zext_ln700_fu_2541_p1);

assign add_ln700_22_fu_2633_p2 = (zext_ln700_7_fu_2629_p1 + zext_ln700_6_fu_2619_p1);

assign add_ln700_23_fu_2639_p2 = (add_ln700_22_fu_2633_p2 + zext_ln700_5_fu_2609_p1);

assign add_ln700_24_fu_2649_p2 = (zext_ln700_8_fu_2645_p1 + add_ln700_17_fu_2591_p2);

assign add_ln700_25_fu_2767_p2 = (zext_ln142_13_fu_2673_p1 + zext_ln142_14_fu_2682_p1);

assign add_ln700_26_fu_2777_p2 = (zext_ln700_10_fu_2773_p1 + select_ln700_1_fu_2660_p3);

assign add_ln700_27_fu_2783_p2 = (zext_ln142_15_fu_2691_p1 + zext_ln142_16_fu_2700_p1);

assign add_ln700_28_fu_2793_p2 = (zext_ln142_17_fu_2709_p1 + zext_ln142_18_fu_2718_p1);

assign add_ln700_29_fu_2803_p2 = (zext_ln700_12_fu_2799_p1 + zext_ln700_11_fu_2789_p1);

assign add_ln700_30_fu_2813_p2 = (zext_ln700_13_fu_2809_p1 + add_ln700_26_fu_2777_p2);

assign add_ln700_31_fu_2819_p2 = (zext_ln142_20_fu_2725_p1 + zext_ln142_21_fu_2728_p1);

assign add_ln700_32_fu_2825_p2 = (add_ln700_31_fu_2819_p2 + zext_ln142_19_fu_2722_p1);

assign add_ln700_33_fu_2835_p2 = (zext_ln142_22_fu_2736_p1 + zext_ln142_23_fu_2745_p1);

assign add_ln700_34_fu_2845_p2 = (zext_ln142_24_fu_2754_p1 + zext_ln700_9_fu_2763_p1);

assign add_ln700_35_fu_2855_p2 = (zext_ln700_16_fu_2851_p1 + zext_ln700_15_fu_2841_p1);

assign add_ln700_36_fu_2861_p2 = (add_ln700_35_fu_2855_p2 + zext_ln700_14_fu_2831_p1);

assign add_ln700_37_fu_2871_p2 = (zext_ln700_17_fu_2867_p1 + add_ln700_30_fu_2813_p2);

assign add_ln700_38_fu_2989_p2 = (zext_ln142_25_fu_2895_p1 + zext_ln142_26_fu_2904_p1);

assign add_ln700_39_fu_2999_p2 = (zext_ln700_19_fu_2995_p1 + select_ln700_2_fu_2882_p3);

assign add_ln700_3_fu_1954_p2 = ($signed(sext_ln700_3_fu_1951_p1) + $signed(select_ln271_2_fu_1919_p3));

assign add_ln700_40_fu_3005_p2 = (zext_ln142_27_fu_2913_p1 + zext_ln142_28_fu_2922_p1);

assign add_ln700_41_fu_3015_p2 = (zext_ln142_29_fu_2931_p1 + zext_ln142_30_fu_2940_p1);

assign add_ln700_42_fu_3025_p2 = (zext_ln700_21_fu_3021_p1 + zext_ln700_20_fu_3011_p1);

assign add_ln700_43_fu_3035_p2 = (zext_ln700_22_fu_3031_p1 + add_ln700_39_fu_2999_p2);

assign add_ln700_44_fu_3041_p2 = (zext_ln142_32_fu_2947_p1 + zext_ln142_33_fu_2950_p1);

assign add_ln700_45_fu_3047_p2 = (add_ln700_44_fu_3041_p2 + zext_ln142_31_fu_2944_p1);

assign add_ln700_46_fu_3057_p2 = (zext_ln142_34_fu_2958_p1 + zext_ln142_35_fu_2967_p1);

assign add_ln700_47_fu_3067_p2 = (zext_ln142_36_fu_2976_p1 + zext_ln700_18_fu_2985_p1);

assign add_ln700_48_fu_3077_p2 = (zext_ln700_25_fu_3073_p1 + zext_ln700_24_fu_3063_p1);

assign add_ln700_49_fu_3083_p2 = (add_ln700_48_fu_3077_p2 + zext_ln700_23_fu_3053_p1);

assign add_ln700_4_fu_1717_p2 = ($signed(sext_ln700_4_fu_1713_p1) + $signed(sext_ln170_1_fu_1700_p1));

assign add_ln700_50_fu_3093_p2 = (zext_ln700_26_fu_3089_p1 + add_ln700_43_fu_3035_p2);

assign add_ln700_51_fu_3211_p2 = (zext_ln142_37_fu_3117_p1 + zext_ln142_38_fu_3126_p1);

assign add_ln700_52_fu_3221_p2 = (zext_ln700_28_fu_3217_p1 + select_ln700_3_fu_3104_p3);

assign add_ln700_53_fu_3227_p2 = (zext_ln142_39_fu_3135_p1 + zext_ln142_40_fu_3144_p1);

assign add_ln700_54_fu_3237_p2 = (zext_ln142_41_fu_3153_p1 + zext_ln142_42_fu_3162_p1);

assign add_ln700_55_fu_3247_p2 = (zext_ln700_30_fu_3243_p1 + zext_ln700_29_fu_3233_p1);

assign add_ln700_56_fu_3257_p2 = (zext_ln700_31_fu_3253_p1 + add_ln700_52_fu_3221_p2);

assign add_ln700_57_fu_3263_p2 = (zext_ln142_44_fu_3169_p1 + zext_ln142_45_fu_3172_p1);

assign add_ln700_58_fu_3269_p2 = (add_ln700_57_fu_3263_p2 + zext_ln142_43_fu_3166_p1);

assign add_ln700_59_fu_3279_p2 = (zext_ln142_46_fu_3180_p1 + zext_ln142_47_fu_3189_p1);

assign add_ln700_60_fu_3289_p2 = (zext_ln142_48_fu_3198_p1 + zext_ln700_27_fu_3207_p1);

assign add_ln700_61_fu_3299_p2 = (zext_ln700_34_fu_3295_p1 + zext_ln700_33_fu_3285_p1);

assign add_ln700_62_fu_3305_p2 = (add_ln700_61_fu_3299_p2 + zext_ln700_32_fu_3275_p1);

assign add_ln700_63_fu_3315_p2 = (zext_ln700_35_fu_3311_p1 + add_ln700_56_fu_3257_p2);

assign add_ln700_6_fu_1972_p2 = ($signed(sext_ln700_6_fu_1969_p1) + $signed(select_ln271_1_fu_1912_p3));

assign add_ln700_7_fu_1758_p2 = ($signed(sext_ln700_7_fu_1754_p1) + $signed(sext_ln170_2_fu_1741_p1));

assign add_ln700_9_fu_1990_p2 = ($signed(sext_ln700_9_fu_1987_p1) + $signed(select_ln271_fu_1905_p3));

assign add_ln700_fu_1936_p2 = ($signed(sext_ln700_fu_1933_p1) + $signed(select_ln271_3_fu_1926_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((icmp_ln248_fu_1079_p2 == 1'd0) & (weight_V_V_TVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((icmp_ln248_fu_1079_p2 == 1'd0) & (weight_V_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((icmp_ln248_fu_1079_p2 == 1'd0) & (weight_V_V_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((in_V_V_TVALID == 1'b0) & (ap_predicate_op51_read_state2 == 1'b1)) | ((icmp_ln248_fu_1079_p2 == 1'd0) & (weight_V_V_TVALID == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln289_reg_3519_pp0_iter2_reg == 1'd1) & (out_V_V_TREADY == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_485 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_1060 = 'bx;

always @ (*) begin
    ap_predicate_op51_read_state2 = ((icmp_ln252_fu_1094_p2 == 1'd1) & (icmp_ln248_fu_1079_p2 == 1'd0));
end

assign arg_V_read_assign_1_fu_1622_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060[15:8]}};

assign arg_V_read_assign_2_fu_1649_p4 = {{ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060[23:16]}};

assign i_fu_1085_p2 = (i_0_reg_1049 + 17'd1);

assign icmp_ln248_fu_1079_p2 = ((i_0_reg_1049 == 17'd129600) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_1094_p2 = ((ap_sig_allocacmp_nf_assign_load_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_1468_p2 = ((sf_1_fu_258 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_1594_p2 = ((sf_fu_1588_p2 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_1874_p2 = ((nf_fu_1868_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_1168_p2 = ((trunc_ln321_fu_1158_p1 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_1174_p2 = ((trunc_ln321_fu_1158_p1 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_1180_p2 = ((trunc_ln321_fu_1158_p1 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_1186_p2 = ((trunc_ln321_fu_1158_p1 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_1192_p2 = ((trunc_ln321_fu_1158_p1 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_1198_p2 = ((trunc_ln321_fu_1158_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_7_fu_1204_p2 = ((trunc_ln321_fu_1158_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_1162_p2 = ((trunc_ln321_fu_1158_p1 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln899_10_fu_2103_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_53_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_11_fu_2109_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_52_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_12_fu_2115_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_51_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_13_fu_2121_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_50_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_14_fu_2127_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_41_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_15_fu_2133_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_40_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_16_fu_2139_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_35_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_17_fu_2145_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_34_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_18_fu_2151_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_33_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_19_fu_2157_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_32_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_2031_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_54_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_20_fu_2163_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_31_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_21_fu_2169_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_30_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_22_fu_2181_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_29_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_23_fu_2193_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_28_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_24_fu_2205_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_39_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_25_fu_2211_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_38_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_26_fu_2217_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_37_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_27_fu_2223_p2 = (($signed(accu_0_1_V_fu_1963_p2) < $signed(threshs_m_thresholds_36_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_28_fu_2229_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_27_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_29_fu_2235_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_26_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_2_fu_2037_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_49_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_30_fu_2241_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_21_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_31_fu_2247_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_20_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_32_fu_2253_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_19_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_33_fu_2259_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_18_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_34_fu_2265_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_17_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_35_fu_2271_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_16_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_36_fu_2283_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_15_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_37_fu_2295_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_14_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_38_fu_2307_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_25_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_39_fu_2313_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_24_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_3_fu_2043_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_48_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_40_fu_2319_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_23_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_41_fu_2325_p2 = (($signed(accu_0_2_V_fu_1981_p2) < $signed(threshs_m_thresholds_22_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_42_fu_2331_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_13_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_43_fu_2337_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_12_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_44_fu_2343_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_7_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_45_fu_2349_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_6_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_46_fu_2355_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_5_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_47_fu_2361_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_4_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_48_fu_2367_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_49_fu_2373_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_4_fu_2049_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_47_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_50_fu_2385_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_51_fu_2397_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_52_fu_2409_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_11_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_53_fu_2415_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_10_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_54_fu_2421_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_9_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_55_fu_2427_p2 = (($signed(accu_0_3_V_fu_1999_p2) < $signed(threshs_m_thresholds_8_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_5_fu_2055_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_46_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_6_fu_2061_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_45_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_7_fu_2067_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_44_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_8_fu_2079_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_43_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_9_fu_2091_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_42_q0)) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_2025_p2 = (($signed(accu_0_0_V_fu_1945_p2) < $signed(threshs_m_thresholds_55_q0)) ? 1'b1 : 1'b0);

assign inElem_V_fu_1134_p10 = sf_1_fu_258[3:0];

assign inputBuf_8_V_11_fu_1284_p3 = ((or_ln321_6_fu_1246_p2[0:0] === 1'b1) ? select_ln321_2_fu_1276_p3 : inputBuf_8_V_8_fu_294);

assign inputBuf_8_V_12_fu_1308_p3 = ((or_ln321_4_fu_1234_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_290 : select_ln321_5_fu_1300_p3);

assign inputBuf_8_V_13_fu_1332_p3 = ((or_ln321_4_fu_1234_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_286 : select_ln321_8_fu_1324_p3);

assign inputBuf_8_V_14_fu_1348_p3 = ((or_ln321_4_fu_1234_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_282 : select_ln321_10_fu_1340_p3);

assign inputBuf_8_V_15_fu_1372_p3 = ((or_ln321_4_fu_1234_p2[0:0] === 1'b1) ? select_ln321_13_fu_1364_p3 : inputBuf_8_V_6_fu_278);

assign inputBuf_8_V_16_fu_1388_p3 = ((or_ln321_fu_1210_p2[0:0] === 1'b1) ? inputBuf_8_V_4_fu_274 : select_ln321_15_fu_1380_p3);

assign inputBuf_8_V_17_fu_1396_p3 = ((icmp_ln321_6_fu_1198_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_2_fu_270);

assign inputBuf_8_V_18_fu_1404_p3 = ((icmp_ln321_7_fu_1204_p2[0:0] === 1'b1) ? inputBuf_8_V_2_fu_270 : inputBuf_8_V_17_fu_1396_p3);

assign inputBuf_8_V_19_fu_1412_p3 = ((icmp_ln321_7_fu_1204_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_1_fu_266);

assign inputBuf_8_V_fu_1252_p3 = ((or_ln321_6_fu_1246_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_298 : in_V_V_TDATA);

assign mul_ln1352_10_fu_1776_p0 = sext_ln215_3_fu_1635_p1;

assign mul_ln1352_11_fu_1789_p0 = sext_ln215_5_fu_1662_p1;

assign mul_ln1352_1_fu_1639_p0 = sext_ln215_3_fu_1635_p1;

assign mul_ln1352_2_fu_1666_p0 = sext_ln215_5_fu_1662_p1;

assign mul_ln1352_3_fu_1685_p0 = sext_ln215_1_fu_1612_p1;

assign mul_ln1352_4_fu_1694_p0 = sext_ln215_3_fu_1635_p1;

assign mul_ln1352_5_fu_1707_p0 = sext_ln215_5_fu_1662_p1;

assign mul_ln1352_6_fu_1726_p0 = sext_ln215_1_fu_1612_p1;

assign mul_ln1352_7_fu_1735_p0 = sext_ln215_3_fu_1635_p1;

assign mul_ln1352_8_fu_1748_p0 = sext_ln215_5_fu_1662_p1;

assign mul_ln1352_9_fu_1767_p0 = sext_ln215_1_fu_1612_p1;

assign mul_ln1352_fu_1616_p0 = sext_ln215_1_fu_1612_p1;

assign nf_fu_1868_p2 = (nf_assign_fu_262 + 32'd1);

assign or_ln321_1_fu_1216_p2 = (icmp_ln321_5_fu_1192_p2 | icmp_ln321_4_fu_1186_p2);

assign or_ln321_2_fu_1222_p2 = (icmp_ln321_3_fu_1180_p2 | icmp_ln321_2_fu_1174_p2);

assign or_ln321_3_fu_1228_p2 = (icmp_ln321_fu_1162_p2 | icmp_ln321_1_fu_1168_p2);

assign or_ln321_4_fu_1234_p2 = (or_ln321_fu_1210_p2 | or_ln321_1_fu_1216_p2);

assign or_ln321_5_fu_1240_p2 = (or_ln321_3_fu_1228_p2 | or_ln321_2_fu_1222_p2);

assign or_ln321_6_fu_1246_p2 = (or_ln321_5_fu_1240_p2 | or_ln321_4_fu_1234_p2);

assign or_ln321_fu_1210_p2 = (icmp_ln321_7_fu_1204_p2 | icmp_ln321_6_fu_1198_p2);

assign out_V_V_TDATA = {{{{add_ln700_63_fu_3315_p2}, {add_ln700_50_fu_3093_p2}}, {add_ln700_37_fu_2871_p2}}, {add_ln700_24_fu_2649_p2}};

assign select_ln271_1_fu_1912_p3 = ((icmp_ln271_reg_3451_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_2_0_fu_250);

assign select_ln271_2_fu_1919_p3 = ((icmp_ln271_reg_3451_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_1_0_fu_246);

assign select_ln271_3_fu_1926_p3 = ((icmp_ln271_reg_3451_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_0_0_fu_242);

assign select_ln271_fu_1905_p3 = ((icmp_ln271_reg_3451_pp0_iter1_reg[0:0] === 1'b1) ? 16'd0 : accu_V_0_3_0_fu_254);

assign select_ln301_fu_1880_p3 = ((icmp_ln301_fu_1874_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_1868_p2);

assign select_ln321_10_fu_1340_p3 = ((icmp_ln321_3_fu_1180_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_7_fu_282);

assign select_ln321_12_fu_1356_p3 = ((icmp_ln321_5_fu_1192_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_278 : in_V_V_TDATA);

assign select_ln321_13_fu_1364_p3 = ((or_ln321_fu_1210_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_278 : select_ln321_12_fu_1356_p3);

assign select_ln321_15_fu_1380_p3 = ((icmp_ln321_5_fu_1192_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_4_fu_274);

assign select_ln321_1_fu_1268_p3 = ((or_ln321_2_fu_1222_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_294 : select_ln321_fu_1260_p3);

assign select_ln321_2_fu_1276_p3 = ((or_ln321_4_fu_1234_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_294 : select_ln321_1_fu_1268_p3);

assign select_ln321_4_fu_1292_p3 = ((icmp_ln321_1_fu_1168_p2[0:0] === 1'b1) ? in_V_V_TDATA : inputBuf_8_V_3_fu_290);

assign select_ln321_5_fu_1300_p3 = ((or_ln321_2_fu_1222_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_290 : select_ln321_4_fu_1292_p3);

assign select_ln321_7_fu_1316_p3 = ((icmp_ln321_3_fu_1180_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_286 : in_V_V_TDATA);

assign select_ln321_8_fu_1324_p3 = ((or_ln321_2_fu_1222_p2[0:0] === 1'b1) ? select_ln321_7_fu_1316_p3 : inputBuf_8_V_5_fu_286);

assign select_ln321_fu_1260_p3 = ((icmp_ln321_1_fu_1168_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_294 : in_V_V_TDATA);

assign select_ln700_1_fu_2660_p3 = ((xor_ln899_14_fu_2655_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign select_ln700_2_fu_2882_p3 = ((xor_ln899_28_fu_2877_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign select_ln700_3_fu_3104_p3 = ((xor_ln899_42_fu_3099_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign select_ln700_fu_2438_p3 = ((xor_ln899_fu_2433_p2[0:0] === 1'b1) ? 4'd10 : 4'd9);

assign sext_ln170_1_fu_1700_p1 = mul_ln1352_4_fu_1694_p2;

assign sext_ln170_2_fu_1741_p1 = mul_ln1352_7_fu_1735_p2;

assign sext_ln170_3_fu_1782_p1 = mul_ln1352_10_fu_1776_p2;

assign sext_ln170_fu_1645_p1 = mul_ln1352_1_fu_1639_p2;

assign sext_ln215_1_fu_1612_p1 = $signed(trunc_ln647_1_fu_1605_p1);

assign sext_ln215_3_fu_1635_p1 = $signed(arg_V_read_assign_1_fu_1622_p4);

assign sext_ln215_5_fu_1662_p1 = $signed(arg_V_read_assign_2_fu_1649_p4);

assign sext_ln700_10_fu_1795_p1 = mul_ln1352_11_fu_1789_p2;

assign sext_ln700_11_fu_1996_p1 = $signed(add_ln700_10_reg_3558);

assign sext_ln700_1_fu_1672_p1 = mul_ln1352_2_fu_1666_p2;

assign sext_ln700_2_fu_1942_p1 = $signed(add_ln700_1_reg_3528);

assign sext_ln700_3_fu_1951_p1 = mul_ln1352_3_reg_3533;

assign sext_ln700_4_fu_1713_p1 = mul_ln1352_5_fu_1707_p2;

assign sext_ln700_5_fu_1960_p1 = $signed(add_ln700_4_reg_3538);

assign sext_ln700_6_fu_1969_p1 = mul_ln1352_6_reg_3543;

assign sext_ln700_7_fu_1754_p1 = mul_ln1352_8_fu_1748_p2;

assign sext_ln700_8_fu_1978_p1 = $signed(add_ln700_7_reg_3548);

assign sext_ln700_9_fu_1987_p1 = mul_ln1352_9_reg_3553;

assign sext_ln700_fu_1933_p1 = mul_ln1352_reg_3523;

assign sf_fu_1588_p2 = (32'd1 + sf_1_fu_258);

assign threshs_m_thresholds_10_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_11_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_12_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_13_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_14_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_15_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_16_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_17_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_18_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_19_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_1_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_20_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_21_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_22_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_23_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_24_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_25_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_26_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_27_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_28_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_29_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_2_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_30_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_31_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_32_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_33_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_34_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_35_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_36_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_37_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_38_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_39_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_3_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_40_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_41_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_42_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_43_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_44_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_45_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_46_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_47_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_48_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_49_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_4_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_50_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_51_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_52_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_53_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_54_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_55_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_5_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_6_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_7_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_8_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_9_address0 = zext_ln142_fu_1808_p1;

assign threshs_m_thresholds_address0 = zext_ln142_fu_1808_p1;

assign trunc_ln321_fu_1158_p1 = sf_1_fu_258[3:0];

assign trunc_ln647_1_fu_1605_p1 = ap_phi_reg_pp0_iter1_act_m_val_V_reg_1060[7:0];

assign trunc_ln647_fu_1474_p1 = weight_V_V_TDATA[3:0];

assign xor_ln899_10_fu_2509_p2 = (icmp_ln899_10_reg_3893 ^ 1'd1);

assign xor_ln899_11_fu_2518_p2 = (icmp_ln899_11_reg_3898 ^ 1'd1);

assign xor_ln899_12_fu_2527_p2 = (icmp_ln899_12_reg_3903 ^ 1'd1);

assign xor_ln899_13_fu_2536_p2 = (icmp_ln899_13_reg_3908 ^ 1'd1);

assign xor_ln899_14_fu_2655_p2 = (icmp_ln899_14_reg_3913 ^ 1'd1);

assign xor_ln899_15_fu_2668_p2 = (icmp_ln899_15_reg_3918 ^ 1'd1);

assign xor_ln899_16_fu_2677_p2 = (icmp_ln899_16_reg_3923 ^ 1'd1);

assign xor_ln899_17_fu_2686_p2 = (icmp_ln899_17_reg_3928 ^ 1'd1);

assign xor_ln899_18_fu_2695_p2 = (icmp_ln899_18_reg_3933 ^ 1'd1);

assign xor_ln899_19_fu_2704_p2 = (icmp_ln899_19_reg_3938 ^ 1'd1);

assign xor_ln899_1_fu_2446_p2 = (icmp_ln899_1_reg_3848 ^ 1'd1);

assign xor_ln899_20_fu_2713_p2 = (icmp_ln899_20_reg_3943 ^ 1'd1);

assign xor_ln899_21_fu_2175_p2 = (icmp_ln899_21_fu_2169_p2 ^ 1'd1);

assign xor_ln899_22_fu_2187_p2 = (icmp_ln899_22_fu_2181_p2 ^ 1'd1);

assign xor_ln899_23_fu_2199_p2 = (icmp_ln899_23_fu_2193_p2 ^ 1'd1);

assign xor_ln899_24_fu_2731_p2 = (icmp_ln899_24_reg_3963 ^ 1'd1);

assign xor_ln899_25_fu_2740_p2 = (icmp_ln899_25_reg_3968 ^ 1'd1);

assign xor_ln899_26_fu_2749_p2 = (icmp_ln899_26_reg_3973 ^ 1'd1);

assign xor_ln899_27_fu_2758_p2 = (icmp_ln899_27_reg_3978 ^ 1'd1);

assign xor_ln899_28_fu_2877_p2 = (icmp_ln899_28_reg_3983 ^ 1'd1);

assign xor_ln899_29_fu_2890_p2 = (icmp_ln899_29_reg_3988 ^ 1'd1);

assign xor_ln899_2_fu_2455_p2 = (icmp_ln899_2_reg_3853 ^ 1'd1);

assign xor_ln899_30_fu_2899_p2 = (icmp_ln899_30_reg_3993 ^ 1'd1);

assign xor_ln899_31_fu_2908_p2 = (icmp_ln899_31_reg_3998 ^ 1'd1);

assign xor_ln899_32_fu_2917_p2 = (icmp_ln899_32_reg_4003 ^ 1'd1);

assign xor_ln899_33_fu_2926_p2 = (icmp_ln899_33_reg_4008 ^ 1'd1);

assign xor_ln899_34_fu_2935_p2 = (icmp_ln899_34_reg_4013 ^ 1'd1);

assign xor_ln899_35_fu_2277_p2 = (icmp_ln899_35_fu_2271_p2 ^ 1'd1);

assign xor_ln899_36_fu_2289_p2 = (icmp_ln899_36_fu_2283_p2 ^ 1'd1);

assign xor_ln899_37_fu_2301_p2 = (icmp_ln899_37_fu_2295_p2 ^ 1'd1);

assign xor_ln899_38_fu_2953_p2 = (icmp_ln899_38_reg_4033 ^ 1'd1);

assign xor_ln899_39_fu_2962_p2 = (icmp_ln899_39_reg_4038 ^ 1'd1);

assign xor_ln899_3_fu_2464_p2 = (icmp_ln899_3_reg_3858 ^ 1'd1);

assign xor_ln899_40_fu_2971_p2 = (icmp_ln899_40_reg_4043 ^ 1'd1);

assign xor_ln899_41_fu_2980_p2 = (icmp_ln899_41_reg_4048 ^ 1'd1);

assign xor_ln899_42_fu_3099_p2 = (icmp_ln899_42_reg_4053 ^ 1'd1);

assign xor_ln899_43_fu_3112_p2 = (icmp_ln899_43_reg_4058 ^ 1'd1);

assign xor_ln899_44_fu_3121_p2 = (icmp_ln899_44_reg_4063 ^ 1'd1);

assign xor_ln899_45_fu_3130_p2 = (icmp_ln899_45_reg_4068 ^ 1'd1);

assign xor_ln899_46_fu_3139_p2 = (icmp_ln899_46_reg_4073 ^ 1'd1);

assign xor_ln899_47_fu_3148_p2 = (icmp_ln899_47_reg_4078 ^ 1'd1);

assign xor_ln899_48_fu_3157_p2 = (icmp_ln899_48_reg_4083 ^ 1'd1);

assign xor_ln899_49_fu_2379_p2 = (icmp_ln899_49_fu_2373_p2 ^ 1'd1);

assign xor_ln899_4_fu_2473_p2 = (icmp_ln899_4_reg_3863 ^ 1'd1);

assign xor_ln899_50_fu_2391_p2 = (icmp_ln899_50_fu_2385_p2 ^ 1'd1);

assign xor_ln899_51_fu_2403_p2 = (icmp_ln899_51_fu_2397_p2 ^ 1'd1);

assign xor_ln899_52_fu_3175_p2 = (icmp_ln899_52_reg_4103 ^ 1'd1);

assign xor_ln899_53_fu_3184_p2 = (icmp_ln899_53_reg_4108 ^ 1'd1);

assign xor_ln899_54_fu_3193_p2 = (icmp_ln899_54_reg_4113 ^ 1'd1);

assign xor_ln899_55_fu_3202_p2 = (icmp_ln899_55_reg_4118 ^ 1'd1);

assign xor_ln899_5_fu_2482_p2 = (icmp_ln899_5_reg_3868 ^ 1'd1);

assign xor_ln899_6_fu_2491_p2 = (icmp_ln899_6_reg_3873 ^ 1'd1);

assign xor_ln899_7_fu_2073_p2 = (icmp_ln899_7_fu_2067_p2 ^ 1'd1);

assign xor_ln899_8_fu_2085_p2 = (icmp_ln899_8_fu_2079_p2 ^ 1'd1);

assign xor_ln899_9_fu_2097_p2 = (icmp_ln899_9_fu_2091_p2 ^ 1'd1);

assign xor_ln899_fu_2433_p2 = (icmp_ln899_reg_3843 ^ 1'd1);

assign zext_ln142_10_fu_2514_p1 = xor_ln899_10_fu_2509_p2;

assign zext_ln142_11_fu_2523_p1 = xor_ln899_11_fu_2518_p2;

assign zext_ln142_12_fu_2532_p1 = xor_ln899_12_fu_2527_p2;

assign zext_ln142_13_fu_2673_p1 = xor_ln899_15_fu_2668_p2;

assign zext_ln142_14_fu_2682_p1 = xor_ln899_16_fu_2677_p2;

assign zext_ln142_15_fu_2691_p1 = xor_ln899_17_fu_2686_p2;

assign zext_ln142_16_fu_2700_p1 = xor_ln899_18_fu_2695_p2;

assign zext_ln142_17_fu_2709_p1 = xor_ln899_19_fu_2704_p2;

assign zext_ln142_18_fu_2718_p1 = xor_ln899_20_fu_2713_p2;

assign zext_ln142_19_fu_2722_p1 = xor_ln899_21_reg_3948;

assign zext_ln142_1_fu_2451_p1 = xor_ln899_1_fu_2446_p2;

assign zext_ln142_20_fu_2725_p1 = xor_ln899_22_reg_3953;

assign zext_ln142_21_fu_2728_p1 = xor_ln899_23_reg_3958;

assign zext_ln142_22_fu_2736_p1 = xor_ln899_24_fu_2731_p2;

assign zext_ln142_23_fu_2745_p1 = xor_ln899_25_fu_2740_p2;

assign zext_ln142_24_fu_2754_p1 = xor_ln899_26_fu_2749_p2;

assign zext_ln142_25_fu_2895_p1 = xor_ln899_29_fu_2890_p2;

assign zext_ln142_26_fu_2904_p1 = xor_ln899_30_fu_2899_p2;

assign zext_ln142_27_fu_2913_p1 = xor_ln899_31_fu_2908_p2;

assign zext_ln142_28_fu_2922_p1 = xor_ln899_32_fu_2917_p2;

assign zext_ln142_29_fu_2931_p1 = xor_ln899_33_fu_2926_p2;

assign zext_ln142_2_fu_2460_p1 = xor_ln899_2_fu_2455_p2;

assign zext_ln142_30_fu_2940_p1 = xor_ln899_34_fu_2935_p2;

assign zext_ln142_31_fu_2944_p1 = xor_ln899_35_reg_4018;

assign zext_ln142_32_fu_2947_p1 = xor_ln899_36_reg_4023;

assign zext_ln142_33_fu_2950_p1 = xor_ln899_37_reg_4028;

assign zext_ln142_34_fu_2958_p1 = xor_ln899_38_fu_2953_p2;

assign zext_ln142_35_fu_2967_p1 = xor_ln899_39_fu_2962_p2;

assign zext_ln142_36_fu_2976_p1 = xor_ln899_40_fu_2971_p2;

assign zext_ln142_37_fu_3117_p1 = xor_ln899_43_fu_3112_p2;

assign zext_ln142_38_fu_3126_p1 = xor_ln899_44_fu_3121_p2;

assign zext_ln142_39_fu_3135_p1 = xor_ln899_45_fu_3130_p2;

assign zext_ln142_3_fu_2469_p1 = xor_ln899_3_fu_2464_p2;

assign zext_ln142_40_fu_3144_p1 = xor_ln899_46_fu_3139_p2;

assign zext_ln142_41_fu_3153_p1 = xor_ln899_47_fu_3148_p2;

assign zext_ln142_42_fu_3162_p1 = xor_ln899_48_fu_3157_p2;

assign zext_ln142_43_fu_3166_p1 = xor_ln899_49_reg_4088;

assign zext_ln142_44_fu_3169_p1 = xor_ln899_50_reg_4093;

assign zext_ln142_45_fu_3172_p1 = xor_ln899_51_reg_4098;

assign zext_ln142_46_fu_3180_p1 = xor_ln899_52_fu_3175_p2;

assign zext_ln142_47_fu_3189_p1 = xor_ln899_53_fu_3184_p2;

assign zext_ln142_48_fu_3198_p1 = xor_ln899_54_fu_3193_p2;

assign zext_ln142_4_fu_2478_p1 = xor_ln899_4_fu_2473_p2;

assign zext_ln142_5_fu_2487_p1 = xor_ln899_5_fu_2482_p2;

assign zext_ln142_6_fu_2496_p1 = xor_ln899_6_fu_2491_p2;

assign zext_ln142_7_fu_2500_p1 = xor_ln899_7_reg_3878;

assign zext_ln142_8_fu_2503_p1 = xor_ln899_8_reg_3883;

assign zext_ln142_9_fu_2506_p1 = xor_ln899_9_reg_3888;

assign zext_ln142_fu_1808_p1 = nf_assign_fu_262;

assign zext_ln700_10_fu_2773_p1 = add_ln700_25_fu_2767_p2;

assign zext_ln700_11_fu_2789_p1 = add_ln700_27_fu_2783_p2;

assign zext_ln700_12_fu_2799_p1 = add_ln700_28_fu_2793_p2;

assign zext_ln700_13_fu_2809_p1 = add_ln700_29_fu_2803_p2;

assign zext_ln700_14_fu_2831_p1 = add_ln700_32_fu_2825_p2;

assign zext_ln700_15_fu_2841_p1 = add_ln700_33_fu_2835_p2;

assign zext_ln700_16_fu_2851_p1 = add_ln700_34_fu_2845_p2;

assign zext_ln700_17_fu_2867_p1 = add_ln700_36_fu_2861_p2;

assign zext_ln700_18_fu_2985_p1 = xor_ln899_41_fu_2980_p2;

assign zext_ln700_19_fu_2995_p1 = add_ln700_38_fu_2989_p2;

assign zext_ln700_1_fu_2551_p1 = add_ln700_12_fu_2545_p2;

assign zext_ln700_20_fu_3011_p1 = add_ln700_40_fu_3005_p2;

assign zext_ln700_21_fu_3021_p1 = add_ln700_41_fu_3015_p2;

assign zext_ln700_22_fu_3031_p1 = add_ln700_42_fu_3025_p2;

assign zext_ln700_23_fu_3053_p1 = add_ln700_45_fu_3047_p2;

assign zext_ln700_24_fu_3063_p1 = add_ln700_46_fu_3057_p2;

assign zext_ln700_25_fu_3073_p1 = add_ln700_47_fu_3067_p2;

assign zext_ln700_26_fu_3089_p1 = add_ln700_49_fu_3083_p2;

assign zext_ln700_27_fu_3207_p1 = xor_ln899_55_fu_3202_p2;

assign zext_ln700_28_fu_3217_p1 = add_ln700_51_fu_3211_p2;

assign zext_ln700_29_fu_3233_p1 = add_ln700_53_fu_3227_p2;

assign zext_ln700_2_fu_2567_p1 = add_ln700_14_fu_2561_p2;

assign zext_ln700_30_fu_3243_p1 = add_ln700_54_fu_3237_p2;

assign zext_ln700_31_fu_3253_p1 = add_ln700_55_fu_3247_p2;

assign zext_ln700_32_fu_3275_p1 = add_ln700_58_fu_3269_p2;

assign zext_ln700_33_fu_3285_p1 = add_ln700_59_fu_3279_p2;

assign zext_ln700_34_fu_3295_p1 = add_ln700_60_fu_3289_p2;

assign zext_ln700_35_fu_3311_p1 = add_ln700_62_fu_3305_p2;

assign zext_ln700_3_fu_2577_p1 = add_ln700_15_fu_2571_p2;

assign zext_ln700_4_fu_2587_p1 = add_ln700_16_fu_2581_p2;

assign zext_ln700_5_fu_2609_p1 = add_ln700_19_fu_2603_p2;

assign zext_ln700_6_fu_2619_p1 = add_ln700_20_fu_2613_p2;

assign zext_ln700_7_fu_2629_p1 = add_ln700_21_fu_2623_p2;

assign zext_ln700_8_fu_2645_p1 = add_ln700_23_fu_2639_p2;

assign zext_ln700_9_fu_2763_p1 = xor_ln899_27_fu_2758_p2;

assign zext_ln700_fu_2541_p1 = xor_ln899_13_fu_2536_p2;

endmodule //StreamingFCLayer_Batch_2_Matrix_Vector_Activa
