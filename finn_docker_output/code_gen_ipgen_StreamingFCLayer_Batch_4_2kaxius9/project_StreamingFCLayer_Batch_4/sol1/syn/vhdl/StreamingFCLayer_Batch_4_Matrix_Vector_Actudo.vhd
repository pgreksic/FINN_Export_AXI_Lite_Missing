-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actudo_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_Actudo_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111001010100", 1 => "0001100011101000", 2 => "0011000011101010", 
    3 => "0000011000111100", 4 => "1111011011010111", 5 => "0000000010111100", 
    6 => "1111110010010110", 7 => "1111101010100000", 8 => "1111110111101001", 
    9 => "0000001011001011", 10 => "1111110010111011", 11 => "1111100110111011", 
    12 => "0000010111011100", 13 => "1111110011011010", 14 => "1111111101011111", 
    15 => "0000000111000101", 16 => "0000000101011000", 17 => "1111111010101011", 
    18 => "0000000110011011", 19 => "0000010001000100", 20 => "0000001001111101", 
    21 => "1111011100101100", 22 => "1111110011111001", 23 => "1111110000001100", 
    24 => "0000001001111010", 25 => "0000001101011101", 26 => "0000001010010110", 
    27 => "1111100100100010", 28 => "0000000101011110", 29 => "1100101110000000", 
    30 => "1111100111010110", 31 => "0000001111000110", 32 => "1111110100100100", 
    33 => "1111111110010001", 34 => "1110111111000100", 35 => "1111111000011010", 
    36 => "0000000010101010", 37 => "1110101101100011", 38 => "0000001000000111", 
    39 => "0000000001001000", 40 => "0001001000000001", 41 => "1110111110010010", 
    42 => "0000000000110011", 43 => "1111110101001100", 44 => "0001011000010110", 
    45 => "0000010100010111", 46 => "1111111000111011", 47 => "0000010001011010", 
    48 => "1111111111010010", 49 => "1010011010101110", 50 => "1111100110101010", 
    51 => "1110110100100111", 52 => "1101100110110100", 53 => "1111110101000010", 
    54 => "0000100010100110", 55 => "0000000001000101", 56 => "0000011101100000", 
    57 => "1111100110101011", 58 => "0000000101111011", 59 => "1111101000001001", 
    60 => "1111111101110010", 61 => "1111011010100100", 62 => "0000000110010101", 
    63 => "0000000010110000", 64 => "0000001011110010", 65 => "0000001000011111", 
    66 => "0000001100110000", 67 => "0000011000001001", 68 => "1111110100100011", 
    69 => "0000000101110110", 70 => "0000010011000011", 71 => "0001000110011111", 
    72 => "0000000010001100", 73 => "1111100011100100", 74 => "0000000011010010", 
    75 => "1111111001111101", 76 => "1110101101011111", 77 => "0000000010001100", 
    78 => "1111111001010001", 79 => "1111100101101000", 80 => "0000010110000100", 
    81 => "1111110011101101", 82 => "0000010000100001", 83 => "0000001000110111", 
    84 => "1111111101010101", 85 => "0000001011000101", 86 => "1111011100110110", 
    87 => "0000001101100000", 88 => "0000011001011011", 89 => "1111111111001101", 
    90 => "0000000101110110", 91 => "0000000010010111", 92 => "1111111101100100", 
    93 => "0000000001100101", 94 => "1110101011100111", 95 => "1111110001101000", 
    96 => "1111111010001001", 97 => "1111111001101110", 98 => "1111110111010110", 
    99 => "1111100001000111", 100 => "1111111111011101", 101 => "1111010101101010", 
    102 => "0000000100101110", 103 => "0000011110011011", 104 => "0000000001100001", 
    105 => "1111111110001110", 106 => "0000010011011100", 107 => "0000001001110011", 
    108 => "0000010010111011", 109 => "0000010110100111", 110 => "1110001111000100", 
    111 => "0000000001110110", 112 => "1101110010110110", 113 => "0000001010000111", 
    114 => "0000001001011000", 115 => "0000010011111010", 116 => "1111010000101100", 
    117 => "0011110011100001", 118 => "1111111101111111", 119 => "1111110001111101", 
    120 => "1111111101111110", 121 => "0000000110101001", 122 => "1111100011011111", 
    123 => "1111110001101110", 124 => "0111000000000001", 125 => "0000101100001001", 
    126 => "0001011001000111", 127 => "1111111101110000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_Actudo is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_Actudo is
    component StreamingFCLayer_Batch_4_Matrix_Vector_Actudo_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_Actudo_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_Actudo_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


