-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111110000111110", 1 => "1111000110100101", 2 => "1111111110011001", 
    3 => "1111110101000101", 4 => "1111101111010100", 5 => "0000100010111100", 
    6 => "1111101101010010", 7 => "1111101111010000", 8 => "0000111110010000", 
    9 => "1111101011001101", 10 => "0000101000100000", 11 => "1111101010010010", 
    12 => "0000001010010101", 13 => "1011011101101011", 14 => "0000000101011110", 
    15 => "1111101100100010", 16 => "0000001001011101", 17 => "1111110011001100", 
    18 => "1111101000101010", 19 => "0000001100001111", 20 => "0111000000000001", 
    21 => "1100111010000011", 22 => "1111110011111001", 23 => "1111101001100101", 
    24 => "0000001011000111", 25 => "1111111000011110", 26 => "1110111010000010", 
    27 => "0000110101011001", 28 => "0000000000000001", 29 => "1111111000011001", 
    30 => "1111101110001101", 31 => "1111110110001111", 32 => "0000000100011111", 
    33 => "1111101110011111", 34 => "1111010111010100", 35 => "0000010001110011", 
    36 => "1110001010101110", 37 => "0000000011000100", 38 => "0000000011010111", 
    39 => "1111011011010010", 40 => "0000011010111001", 41 => "1111110000100000", 
    42 => "1111011100100111", 43 => "1111100000101111", 44 => "1111011000001100", 
    45 => "0000000011110001", 46 => "0000101101001111", 47 => "0000010110011110", 
    48 => "1111010111111110", 49 => "0000000100111101", 50 => "0000100000010111", 
    51 => "1111111110011011", 52 => "0001001101110011", 53 => "1111110011010110", 
    54 => "1111110110010011", 55 => "1111110001000101", 56 => "1111110011100011", 
    57 => "0000100000100000", 58 => "1111111001101001", 59 => "0000100011000001", 
    60 => "0000000010101100", 61 => "0000001011001000", 62 => "0000011100110011", 
    63 => "1111110001010100", 64 => "1111111100010110", 65 => "0000000100000100", 
    66 => "1111101101111110", 67 => "1111111001111110", 68 => "0000010001010001", 
    69 => "0000001100111110", 70 => "1111010100111110", 71 => "1111011011001010", 
    72 => "1111110110100001", 73 => "1111110010011011", 74 => "1111010101111101", 
    75 => "1101011100000110", 76 => "1111011011000101", 77 => "0000110101110011", 
    78 => "1111101110011010", 79 => "1111110110100100", 80 => "1111101111000011", 
    81 => "1111111111111101", 82 => "1111111100111010", 83 => "1111110100101000", 
    84 => "1111111011101100", 85 => "0000000010111111", 86 => "0000001000111010", 
    87 => "0000000011001000", 88 => "0000001011001011", 89 => "0000000111011011", 
    90 => "0000000111101110", 91 => "0000100011101011", 92 => "1111101011111010", 
    93 => "0001011100010100", 94 => "0001100011101100", 95 => "0000011010111010", 
    96 => "0001110100100101", 97 => "0000100001111000", 98 => "1111111110001100", 
    99 => "0000000010111001", 100 => "0110110011001111", 101 => "1111101010110001", 
    102 => "0000000011100010", 103 => "1111001100011001", 104 => "1111111010010110", 
    105 => "1111110111101111", 106 => "1111110001101101", 107 => "1111110000100001", 
    108 => "0000001100000011", 109 => "0000001100101110", 110 => "1111100001100010", 
    111 => "1111111000111001", 112 => "1111110110111100", 113 => "1111110110000010", 
    114 => "1111110010011110", 115 => "0000001010100001", 116 => "0000011011010011", 
    117 => "0000001011100000", 118 => "0111000000000001", 119 => "1111110101111001", 
    120 => "1110101101000110", 121 => "0000010101111001", 122 => "1111111001110100", 
    123 => "1111101110010001", 124 => "1111111011011011", 125 => "1111100111110111", 
    126 => "1111110010010010", 127 => "0000101001010101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActPgM_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


