-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111110001001011", 1 => "1111001000101111", 2 => "1111111110100100", 
    3 => "1111110101010100", 4 => "1111101111011110", 5 => "0000100011000111", 
    6 => "1111101101011101", 7 => "1111101111011011", 8 => "0001000000010010", 
    9 => "1111101011011110", 10 => "0000101000101111", 11 => "1111101010100001", 
    12 => "0000001010100101", 13 => "1011100101011111", 14 => "0000000101101011", 
    15 => "1111101100110100", 16 => "0000001001101110", 17 => "1111110011011101", 
    18 => "1111101000110111", 19 => "0000001100100010", 20 => "0111000000000001", 
    21 => "1100111111110011", 22 => "1111110100000110", 23 => "1111101001110111", 
    24 => "0000001011010011", 25 => "1111111000101011", 26 => "1110111010101001", 
    27 => "0000110110110010", 28 => "0000000000010000", 29 => "1111111000100011", 
    30 => "1111101110011001", 31 => "1111110110011011", 32 => "0000000100101100", 
    33 => "1111101110101011", 34 => "1111010111100100", 35 => "0000010010000001", 
    36 => "1110001101100000", 37 => "0000000011010000", 38 => "0000000011101100", 
    39 => "1111011100010110", 40 => "0000011011001100", 41 => "1111110000101100", 
    42 => "1111011100110101", 43 => "1111100000111110", 44 => "1111011000011100", 
    45 => "0000000011111100", 46 => "0000101101110000", 47 => "0000010110101010", 
    48 => "1111011001010101", 49 => "0000000101001110", 50 => "0000100000100010", 
    51 => "1111111110101001", 52 => "0001001110011011", 53 => "1111110011100000", 
    54 => "1111110110101001", 55 => "1111110001001111", 56 => "1111110011111010", 
    57 => "0000100000101110", 58 => "1111111001110101", 59 => "0000100011100110", 
    60 => "0000000010111001", 61 => "0000001011010011", 62 => "0000011101000110", 
    63 => "1111110001100011", 64 => "1111111100100100", 65 => "0000000100011011", 
    66 => "1111101110001111", 67 => "1111111010001110", 68 => "0000010001011111", 
    69 => "0000001101001110", 70 => "1111010110010000", 71 => "1111011011011011", 
    72 => "1111110110101101", 73 => "1111110010101010", 74 => "1111010110110010", 
    75 => "1101100001001100", 76 => "1111011011010001", 77 => "0000110110101000", 
    78 => "1111101110101000", 79 => "1111110110111001", 80 => "1111101111010010", 
    81 => "0000000000001101", 82 => "1111111101001010", 83 => "1111110100111001", 
    84 => "1111111011111010", 85 => "0000000011001001", 86 => "0000001001010000", 
    87 => "0000000011010001", 88 => "0000001011100010", 89 => "0000000111101101", 
    90 => "0000001000000100", 91 => "0000100101110101", 92 => "1111101100011011", 
    93 => "0001011101001000", 94 => "0001100100111101", 95 => "0000011011000101", 
    96 => "0001111000100100", 97 => "0000100010001000", 98 => "1111111110010101", 
    99 => "0000000011001000", 100 => "0110111110011100", 101 => "1111101011000101", 
    102 => "0000000011101111", 103 => "1111001100101101", 104 => "1111111010101000", 
    105 => "1111110111111101", 106 => "1111110010000001", 107 => "1111110000110010", 
    108 => "0000001100010111", 109 => "0000001100111011", 110 => "1111100001110101", 
    111 => "1111111001000100", 112 => "1111110111000100", 113 => "1111110110011110", 
    114 => "1111110010101111", 115 => "0000001010110101", 116 => "0000011011100011", 
    117 => "0000001011110011", 118 => "0111000000000001", 119 => "1111110110001000", 
    120 => "1110101110010101", 121 => "0000010110001000", 122 => "1111111001111101", 
    123 => "1111101110011100", 124 => "1111111011101100", 125 => "1111101000000110", 
    126 => "1111110010100100", 127 => "0000101001100100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActQgW_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


