-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1110101011011110", 1 => "1111111000111011", 2 => "1111111110111110", 
    3 => "1111101110111011", 4 => "1111101110110101", 5 => "1111111000100110", 
    6 => "1111110001101010", 7 => "0000010001001000", 8 => "0000001111000000", 
    9 => "0001100010000110", 10 => "0000110110011001", 11 => "1110000010010001", 
    12 => "1111111101111100", 13 => "1111101111100100", 14 => "1111110111000110", 
    15 => "0000010000111010", 16 => "1111110001100110", 17 => "0000010101001000", 
    18 => "0000010000011110", 19 => "1111111100001110", 20 => "1100111111010111", 
    21 => "0000000001010110", 22 => "1110110111101000", 23 => "0001001101111011", 
    24 => "1111011111000000", 25 => "0000010011101110", 26 => "0000000011111111", 
    27 => "0000000101101010", 28 => "1111011100101011", 29 => "1111000101101110", 
    30 => "1111111001100101", 31 => "1111110011011010", 32 => "1111111011110001", 
    33 => "0000000101111110", 34 => "0000000111101110", 35 => "0000001001011100", 
    36 => "1111111111110000", 37 => "1111100010100111", 38 => "0001100110111111", 
    39 => "0000011010101111", 40 => "1111100001111101", 41 => "0000010000000010", 
    42 => "0000001011011110", 43 => "0000001111001110", 44 => "0000001101101100", 
    45 => "0000000000010001", 46 => "1111010000000001", 47 => "0000010011000110", 
    48 => "0001111110111100", 49 => "0000000100111101", 50 => "0000010111110111", 
    51 => "1111111010001110", 52 => "1111101100100000", 53 => "1111111110010100", 
    54 => "0000010010001100", 55 => "0000010011000001", 56 => "1111111100111110", 
    57 => "1111110111000110", 58 => "1111100110101001", 59 => "1111111111001101", 
    60 => "0000010001001001", 61 => "1111011101001110", 62 => "0000001101110011", 
    63 => "0001001100000001", 64 => "1110111100100011", 65 => "1111111111111011", 
    66 => "1111110010010011", 67 => "0000010011111011", 68 => "1111110111101001", 
    69 => "0000001000111111", 70 => "1111111010111110", 71 => "1111010111100100", 
    72 => "0000001101101000", 73 => "1110101000100101", 74 => "1111100011010110", 
    75 => "1111101111101011", 76 => "0000000100010010", 77 => "1111110111010110", 
    78 => "1111110100100011", 79 => "0000000000000010", 80 => "1111111101010011", 
    81 => "0000000110100001", 82 => "1111111110001000", 83 => "1011110111111011", 
    84 => "1111111111010101", 85 => "0000010011011000", 86 => "0001000110010000", 
    87 => "1111110111000100", 88 => "0000001101110100", 89 => "1111111001111101", 
    90 => "1111101101000100", 91 => "1110111011010000", 92 => "1111111100110000", 
    93 => "1111111101010000", 94 => "1111111011001110", 95 => "0000001010011100", 
    96 => "1111110101011111", 97 => "0000000000110000", 98 => "1111111110111001", 
    99 => "1111110111101100", 100 => "1111110100100111", 101 => "0000000100000100", 
    102 => "0000000111010101", 103 => "1111011111001011", 104 => "1111111100100011", 
    105 => "0000001010001001", 106 => "1111110111000011", 107 => "0000000111111010", 
    108 => "1111101010011011", 109 => "0000000100100101", 110 => "1111111100011000", 
    111 => "0000000011100001", 112 => "1111111101111011", 113 => "0000111011100001", 
    114 => "1010001110011111", 115 => "1111100010101001", 116 => "0000110111010010", 
    117 => "1111010001110101", 118 => "0000000011000101", 119 => "1111110001010110", 
    120 => "1111111001000010", 121 => "0000101101011001", 122 => "1111110110000111", 
    123 => "1111111110010000", 124 => "1111100010101100", 125 => "0001101000111001", 
    126 => "0000000010110011", 127 => "0000010011011010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActdEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


