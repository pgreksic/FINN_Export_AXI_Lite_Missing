-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111110000110010", 1 => "1111000100011011", 2 => "1111111110001111", 
    3 => "1111110100110110", 4 => "1111101111001011", 5 => "0000100010110001", 
    6 => "1111101101000110", 7 => "1111101111000100", 8 => "0000111100001111", 
    9 => "1111101010111100", 10 => "0000101000010010", 11 => "1111101010000011", 
    12 => "0000001010000101", 13 => "1011010101111000", 14 => "0000000101010001", 
    15 => "1111101100010000", 16 => "0000001001001100", 17 => "1111110010111100", 
    18 => "1111101000011101", 19 => "0000001011111100", 20 => "0111000000000001", 
    21 => "1100110100010010", 22 => "1111110011101101", 23 => "1111101001010010", 
    24 => "0000001010111011", 25 => "1111111000010010", 26 => "1110111001011011", 
    27 => "0000110100000000", 28 => "1111111111110011", 29 => "1111111000001110", 
    30 => "1111101110000000", 31 => "1111110110000010", 32 => "0000000100010011", 
    33 => "1111101110010100", 34 => "1111010111000100", 35 => "0000010001100101", 
    36 => "1110000111111101", 37 => "0000000010111000", 38 => "0000000011000001", 
    39 => "1111011010001110", 40 => "0000011010100110", 41 => "1111110000010011", 
    42 => "1111011100011000", 43 => "1111100000011111", 44 => "1111010111111100", 
    45 => "0000000011100101", 46 => "0000101100101110", 47 => "0000010110010010", 
    48 => "1111010110100111", 49 => "0000000100101011", 50 => "0000100000001100", 
    51 => "1111111110001101", 52 => "0001001101001010", 53 => "1111110011001011", 
    54 => "1111110101111101", 55 => "1111110000111011", 56 => "1111110011001011", 
    57 => "0000100000010011", 58 => "1111111001011101", 59 => "0000100010011100", 
    60 => "0000000010011111", 61 => "0000001010111101", 62 => "0000011100100000", 
    63 => "1111110001000100", 64 => "1111111100001001", 65 => "0000000011101101", 
    66 => "1111101101101101", 67 => "1111111001101110", 68 => "0000010001000010", 
    69 => "0000001100101111", 70 => "1111010011101100", 71 => "1111011010111001", 
    72 => "1111110110010110", 73 => "1111110010001101", 74 => "1111010101001000", 
    75 => "1101010111000000", 76 => "1111011010111000", 77 => "0000110100111110", 
    78 => "1111101110001100", 79 => "1111110110001111", 80 => "1111101110110101", 
    81 => "1111111111101101", 82 => "1111111100101001", 83 => "1111110100010110", 
    84 => "1111111011011110", 85 => "0000000010110100", 86 => "0000001000100101", 
    87 => "0000000010111110", 88 => "0000001010110101", 89 => "0000000111001010", 
    90 => "0000000111011000", 91 => "0000100001100001", 92 => "1111101011011000", 
    93 => "0001011011100000", 94 => "0001100010011100", 95 => "0000011010101110", 
    96 => "0001110000100110", 97 => "0000100001101000", 98 => "1111111110000011", 
    99 => "0000000010101010", 100 => "0110101000000010", 101 => "1111101010011101", 
    102 => "0000000011010101", 103 => "1111001100000110", 104 => "1111111010000011", 
    105 => "1111110111100000", 106 => "1111110001011001", 107 => "1111110000001111", 
    108 => "0000001011110000", 109 => "0000001100100001", 110 => "1111100001010000", 
    111 => "1111111000101110", 112 => "1111110110110100", 113 => "1111110101100101", 
    114 => "1111110010001101", 115 => "0000001010001110", 116 => "0000011011000010", 
    117 => "0000001011001101", 118 => "0111000000000001", 119 => "1111110101101010", 
    120 => "1110101011110111", 121 => "0000010101101001", 122 => "1111111001101011", 
    123 => "1111101110000110", 124 => "1111111011001001", 125 => "1111100111100111", 
    126 => "1111110010000000", 127 => "0000101001000101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActOgC_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


