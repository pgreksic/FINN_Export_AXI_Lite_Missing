-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111101111110011", 1 => "1110111001101000", 2 => "1111111101011010", 
    3 => "1111110011101100", 4 => "1111101110011011", 5 => "0000100001111011", 
    6 => "1111101100001100", 7 => "1111101110001010", 8 => "0000110010001001", 
    9 => "1111101001101001", 10 => "0000100111001010", 11 => "1111101000111000", 
    12 => "0000001000110011", 13 => "1010101110110101", 14 => "0000000100001111", 
    15 => "1111101010111001", 16 => "0000000111111000", 17 => "1111110001101011", 
    18 => "1111100111011011", 19 => "0000001010011101", 20 => "0111000000000001", 
    21 => "1100010111100010", 22 => "1111110010101110", 23 => "1111100111110110", 
    24 => "0000001001111111", 25 => "1111110111010110", 26 => "1110110110011000", 
    27 => "0000101101000011", 28 => "1111111110101010", 29 => "1111110111011011", 
    30 => "1111101101000000", 31 => "1111110101000100", 32 => "0000000011010010", 
    33 => "1111101101011010", 34 => "1111010101110100", 35 => "0000010000011111", 
    36 => "1101111010000110", 37 => "0000000001111100", 38 => "0000000001010100", 
    39 => "1111010100111011", 40 => "0000011001000101", 41 => "1111101111010101", 
    42 => "1111011011001110", 43 => "1111011111001111", 44 => "1111010110101111", 
    45 => "0000000010101101", 46 => "0000101010001010", 47 => "0000010101010100", 
    48 => "1111001111110011", 49 => "0000000011010100", 50 => "0000011111010110", 
    51 => "1111111101000111", 52 => "0001001001111110", 53 => "1111110010010111", 
    54 => "1111110100001110", 55 => "1111110000001001", 56 => "1111110001010110", 
    57 => "0000011111010001", 58 => "1111111000100001", 59 => "0000011111100011", 
    60 => "0000000001011111", 61 => "0000001010000101", 62 => "0000011011000011", 
    63 => "1111101111111000", 64 => "1111111011000110", 65 => "0000000001111011", 
    66 => "1111101100011001", 67 => "1111111000011011", 68 => "0000001111111011", 
    69 => "0000001011100100", 70 => "1111001101010011", 71 => "1111011001100110", 
    72 => "1111110101011101", 73 => "1111110001000101", 74 => "1111010000111111", 
    75 => "1100111101100000", 76 => "1111011001111011", 77 => "0000110000110101", 
    78 => "1111101101001000", 79 => "1111110100100100", 80 => "1111101101101011", 
    81 => "1111111110011011", 82 => "1111111011011001", 83 => "1111110011000000", 
    84 => "1111111010011010", 85 => "0000000010000001", 86 => "0000000110111010", 
    87 => "0000000010010001", 88 => "0000001001000110", 89 => "0000000101110010", 
    90 => "0000000101101011", 91 => "0000010110101110", 92 => "1111101000110001", 
    93 => "0001010111011100", 94 => "0001011100001001", 95 => "0000011001110100", 
    96 => "0001011100101101", 97 => "0000100000011010", 98 => "1111111101010110", 
    99 => "0000000001011110", 100 => "0101110000000100", 101 => "1111101000111010", 
    102 => "0000000010010100", 103 => "1111001010100101", 104 => "1111111000100111", 
    105 => "1111110110010110", 106 => "1111101111110100", 107 => "1111101110111000", 
    108 => "0000001010001110", 109 => "0000001011011111", 110 => "1111011111110100", 
    111 => "1111110111111000", 112 => "1111110110001010", 113 => "1111110011010101", 
    114 => "1111110000110110", 115 => "0000001000101110", 116 => "0000011001101111", 
    117 => "0000001001101110", 118 => "0111000000000001", 119 => "1111110100011111", 
    120 => "1110100101101101", 121 => "0000010100011101", 122 => "1111111000111111", 
    123 => "1111101101001111", 124 => "1111111001110001", 125 => "1111100110011000", 
    126 => "1111110000100101", 127 => "0000100111111001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO is
    component StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO_rom_U :  component StreamingFCLayer_Batch_4_Matrix_Vector_ActJfO_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


