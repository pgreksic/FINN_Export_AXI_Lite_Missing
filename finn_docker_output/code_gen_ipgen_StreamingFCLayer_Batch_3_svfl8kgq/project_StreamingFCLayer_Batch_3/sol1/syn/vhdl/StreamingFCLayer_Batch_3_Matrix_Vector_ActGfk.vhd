-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111101000101011", 1 => "0000010000010011", 2 => "1111011110010111", 
    3 => "1111111001010011", 4 => "0000000001100000", 5 => "0000000101000110", 
    6 => "0000100000110011", 7 => "0000000010000000", 8 => "1111100100000010", 
    9 => "0000001110000011", 10 => "1111111110100010", 11 => "0010011110100100", 
    12 => "0000100011010010", 13 => "1111011110100010", 14 => "1111011001111111", 
    15 => "0000001110100001", 16 => "1111100000110100", 17 => "1111110011000010", 
    18 => "0000001010110001", 19 => "0000010101100111", 20 => "1111111100011001", 
    21 => "0000000000101010", 22 => "1111110011010101", 23 => "1111101010111100", 
    24 => "0000011010001101", 25 => "1111111111101011", 26 => "0000010110001001", 
    27 => "1111101110000101", 28 => "1111111001000100", 29 => "0000000101000010", 
    30 => "1111110111011001", 31 => "1111110001001111", 32 => "0000011010110000", 
    33 => "1111110001001000", 34 => "0000000110010000", 35 => "0000011101011000", 
    36 => "0000000101001100", 37 => "0000001101110111", 38 => "1111101110010001", 
    39 => "1111001111011101", 40 => "1111101010111001", 41 => "0000100011101011", 
    42 => "1001101100110011", 43 => "0000000110010010", 44 => "1110100100101100", 
    45 => "1111111000110001", 46 => "1111111010101100", 47 => "0000011001111100", 
    48 => "1111101010101010", 49 => "1101100011010011", 50 => "1111010100000010", 
    51 => "0000000110011101", 52 => "1111111001001000", 53 => "1011011000011011", 
    54 => "1101111010110011", 55 => "0000001100111101", 56 => "1111011011101011", 
    57 => "1111111011011011", 58 => "0000000010111101", 59 => "0000001001110000", 
    60 => "0000001101101001", 61 => "1111111110100101", 62 => "1111010101101010", 
    63 => "0000001000110111", 64 => "0000010000101001", 65 => "0000010101011101", 
    66 => "0101100001100100", 67 => "0000000100011000", 68 => "0000010101100000", 
    69 => "1111101110011010", 70 => "1111110010000010", 71 => "0000000101000001", 
    72 => "1111011000110011", 73 => "0000000010001101", 74 => "1010001001100010", 
    75 => "1111111111001001", 76 => "1111110001101001", 77 => "1111111111000101", 
    78 => "1111010001101100", 79 => "0000000101010000", 80 => "0000001110010001", 
    81 => "0000011101011101", 82 => "0000000001111000", 83 => "0000000011100011", 
    84 => "1001011100000000", 85 => "0000100101111100", 86 => "0000000010011110", 
    87 => "0000000000100100", 88 => "1111110100100011", 89 => "0001111101111111", 
    90 => "1111111101110001", 91 => "1111101111011111", 92 => "1111111100110001", 
    93 => "1111110010000101", 94 => "0000000110010111", 95 => "1111111110001111", 
    96 => "1111111100101100", 97 => "0000100100111111", 98 => "0000000011100111", 
    99 => "1111111000011010", 100 => "0000010000010010", 101 => "1111111110110101", 
    102 => "1111101010101011", 103 => "1111101111001101", 104 => "0000000000000011", 
    105 => "0000010000011000", 106 => "1110000000101111", 107 => "0000000100110010", 
    108 => "0000001010111010", 109 => "0000100010110010", 110 => "0000000100001001", 
    111 => "1110110011111010", 112 => "0000001110101001", 113 => "1111111101010011", 
    114 => "1111011111111000", 115 => "0000001111100011", 116 => "1111111110010001", 
    117 => "0000000010100110", 118 => "1111101110100011", 119 => "0000000011101110", 
    120 => "0000000001101011", 121 => "1111010010001011", 122 => "0001011000000010", 
    123 => "1111101011000110", 124 => "1111111011100111", 125 => "0000011101001001", 
    126 => "0000101011110110", 127 => "0000010100111001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActGfk_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


