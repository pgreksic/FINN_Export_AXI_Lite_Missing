-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111011101110", 1 => "1111111101001110", 2 => "1111110101100010", 
    3 => "0001000000111100", 4 => "1111111110001011", 5 => "0000001001010010", 
    6 => "1111100110100000", 7 => "0000011100011011", 8 => "0000000001001110", 
    9 => "0000111010000001", 10 => "0001000000110100", 11 => "0000001110011000", 
    12 => "1111111101010010", 13 => "1111110100110000", 14 => "0000010101001101", 
    15 => "1111111001000111", 16 => "0000111001010000", 17 => "0000001111101100", 
    18 => "1111111100110110", 19 => "0000101001100110", 20 => "1111110101100100", 
    21 => "1111110111001100", 22 => "1111101001000000", 23 => "1111011000001010", 
    24 => "1111100110101001", 25 => "0000010000101000", 26 => "1001011100000000", 
    27 => "0000000101101011", 28 => "1111110101000001", 29 => "1111010100110001", 
    30 => "0000010111000111", 31 => "1111110100111101", 32 => "0101000100101111", 
    33 => "1111101010101010", 34 => "0000011001001110", 35 => "0001001111100110", 
    36 => "1111101001010100", 37 => "1111110100010110", 38 => "0000011100111011", 
    39 => "0000000010011101", 40 => "1111110101100111", 41 => "0000010011110000", 
    42 => "0000001110010011", 43 => "1111111001101101", 44 => "0000010011101100", 
    45 => "0000100100101111", 46 => "1111110011110110", 47 => "1111110011010001", 
    48 => "0000110100111111", 49 => "1111100000000110", 50 => "0000100100101101", 
    51 => "0000010010000110", 52 => "1111110110011111", 53 => "1111001010011110", 
    54 => "0000111010010011", 55 => "0000011000111001", 56 => "0000010101101101", 
    57 => "1111111100011101", 58 => "1111011110110101", 59 => "0000000010101101", 
    60 => "1111101111101110", 61 => "0000000001111011", 62 => "0000010101111111", 
    63 => "0000010001010110", 64 => "0000011101100111", 65 => "0000000001001011", 
    66 => "1111101110110000", 67 => "1111110111010110", 68 => "1111111110011111", 
    69 => "1111101101101001", 70 => "0000100001010101", 71 => "0000000110000100", 
    72 => "0000101000000111", 73 => "1111101000110101", 74 => "0000100000100101", 
    75 => "0000011110100001", 76 => "0000001001101111", 77 => "0000001011011110", 
    78 => "1111011110011100", 79 => "1111110100110010", 80 => "1111101110000011", 
    81 => "0000010111011001", 82 => "0000001001101000", 83 => "0000000100101010", 
    84 => "0000000001011010", 85 => "1111110110010001", 86 => "1111110011111001", 
    87 => "1111110100011010", 88 => "1111110100000011", 89 => "1111111011000111", 
    90 => "1111011100011011", 91 => "0000111000111000", 92 => "1111011110011001", 
    93 => "1111111000111010", 94 => "0001011010001001", 95 => "0000111011100000", 
    96 => "1111110100000111", 97 => "1111110010111111", 98 => "0000000010100101", 
    99 => "0001000000111101", 100 => "0000101000000101", 101 => "0000001100100011", 
    102 => "1111110001010110", 103 => "1111010101100101", 104 => "0000001011101000", 
    105 => "0000001110010011", 106 => "0000001001100111", 107 => "0000000010110010", 
    108 => "0000000110110111", 109 => "0000000101111101", 110 => "0000000001010111", 
    111 => "0000110000000001", 112 => "0000001001010101", 113 => "0000000000000010", 
    114 => "0000001111010100", 115 => "0000011000111011", 116 => "1111111111100100", 
    117 => "0000101110101000", 118 => "0000010000001011", 119 => "1111011011111110", 
    120 => "1111101111000000", 121 => "0000010101111111", 122 => "0000001101110011", 
    123 => "0000000101001100", 124 => "0000001101111111", 125 => "1111101101010001", 
    126 => "0000000101010010", 127 => "0000000011001011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS is
    component StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_Act2iS_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


