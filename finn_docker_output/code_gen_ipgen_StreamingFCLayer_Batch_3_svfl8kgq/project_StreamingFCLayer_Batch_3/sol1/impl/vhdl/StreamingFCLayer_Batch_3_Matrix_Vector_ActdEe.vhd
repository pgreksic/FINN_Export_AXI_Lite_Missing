-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000011110111000", 1 => "0000010101100010", 2 => "1111110100001010", 
    3 => "1111101101001011", 4 => "1111101001001011", 5 => "0000000100110010", 
    6 => "0000001010011001", 7 => "1111101110111111", 8 => "1111010111010110", 
    9 => "1111001001101000", 10 => "0000000010011101", 11 => "0000110000110100", 
    12 => "1111101111000000", 13 => "0000011000010010", 14 => "1101111111110110", 
    15 => "0000011011111011", 16 => "0000000010101100", 17 => "1111110011000110", 
    18 => "0000101001111100", 19 => "1111110010011010", 20 => "0000000000101110", 
    21 => "0000001000000000", 22 => "0000010010010110", 23 => "0000101001001111", 
    24 => "0000010100010011", 25 => "1111101111101001", 26 => "1111110111011011", 
    27 => "1111101001111001", 28 => "1110110010110010", 29 => "0000000000001011", 
    30 => "0000000001010010", 31 => "1111100010110011", 32 => "0000001100110010", 
    33 => "1111110010011000", 34 => "0000010001011110", 35 => "0000001111011000", 
    36 => "0000000010100000", 37 => "0000011001000110", 38 => "0000111111001111", 
    39 => "1111110001101010", 40 => "1111101110111011", 41 => "1111110101110100", 
    42 => "1111101000110010", 43 => "0000101101111100", 44 => "1111110110100110", 
    45 => "0000001111111001", 46 => "0000000111001110", 47 => "1111110010111000", 
    48 => "1111110101100000", 49 => "0000010110011100", 50 => "0000010011010001", 
    51 => "1111110111111010", 52 => "1111111011101100", 53 => "1111101011111110", 
    54 => "0000000110101011", 55 => "1111101010000111", 56 => "1111111101101011", 
    57 => "1111111001010011", 58 => "1111110011000101", 59 => "1111111001010011", 
    60 => "1111011111010101", 61 => "0000000111000010", 62 => "0000000110101001", 
    63 => "0000000001101100", 64 => "1111100111001001", 65 => "1111010001011111", 
    66 => "0000000110111110", 67 => "0000001010010100", 68 => "0000111010101100", 
    69 => "1111111100110001", 70 => "1111110011010001", 71 => "1111111101110001", 
    72 => "0000010110101111", 73 => "1110111000001000", 74 => "0000010100100110", 
    75 => "0000001010100100", 76 => "1111111001010001", 77 => "0000101100100000", 
    78 => "0000001010100000", 79 => "1111011101110110", 80 => "1111011110001011", 
    81 => "1111010110010111", 82 => "0000010111110110", 83 => "1111101011100101", 
    84 => "1111110101000000", 85 => "1111101110100011", 86 => "0000010110110110", 
    87 => "0000001010111000", 88 => "1111110001011011", 89 => "0001011010101001", 
    90 => "1111111110000110", 91 => "0000000011101010", 92 => "1110011010000111", 
    93 => "1111110011111001", 94 => "1110101001101101", 95 => "0000001001000011", 
    96 => "1111100110100100", 97 => "0000011011100010", 98 => "1111110011100100", 
    99 => "0000110000000000", 100 => "1111111001000001", 101 => "0000101000111010", 
    102 => "0000011001111010", 103 => "0000000110010110", 104 => "1111110011011110", 
    105 => "0000000110011011", 106 => "0000001101111111", 107 => "1111110110101001", 
    108 => "0000000000111101", 109 => "0000100100101110", 110 => "1111111111111111", 
    111 => "0000110001111101", 112 => "1111110101110100", 113 => "0000010010100000", 
    114 => "1111110101100101", 115 => "1111011101000010", 116 => "0000111100001100", 
    117 => "0100000100011101", 118 => "0000000011011000", 119 => "1111100111001000", 
    120 => "1111011110000111", 121 => "1111111000000111", 122 => "0000100011111100", 
    123 => "1111111110011010", 124 => "0000000000101001", 125 => "0000001101000010", 
    126 => "1111110101101010", 127 => "0000110000111010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActdEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


