-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000100111011100", 1 => "0000010110011110", 2 => "1111110101000110", 
    3 => "1111101110001111", 4 => "1111101010001011", 5 => "0000000101100010", 
    6 => "0000001011010111", 7 => "1111101111111000", 8 => "1111011010000000", 
    9 => "1111010010001100", 10 => "0000000011010101", 11 => "0000110011001010", 
    12 => "1111101111011100", 13 => "0000011001010010", 14 => "1110010001111000", 
    15 => "0000011110101011", 16 => "0000000011011010", 17 => "1111110100001111", 
    18 => "0000110101111101", 19 => "1111110011010011", 20 => "0000000001111111", 
    21 => "0000001000110110", 22 => "0000010011100111", 23 => "0000101010011000", 
    24 => "0000011000000110", 25 => "1111110000100001", 26 => "1111111000010100", 
    27 => "1111101010110010", 28 => "1111000110100001", 29 => "0000000010001000", 
    30 => "0000000010001010", 31 => "1111100011101000", 32 => "0000001101101011", 
    33 => "1111110011100000", 34 => "0000010011110010", 35 => "0000010000001100", 
    36 => "0000000011100011", 37 => "0000100001110001", 38 => "0001001000111111", 
    39 => "1111110010110101", 40 => "1111110000001101", 41 => "1111110111000000", 
    42 => "1111101010010111", 43 => "0000110001011001", 44 => "1111110111101001", 
    45 => "0000010001011001", 46 => "0000001000000101", 47 => "1111110011110110", 
    48 => "1111110110000011", 49 => "0000010111010011", 50 => "0000010100101101", 
    51 => "1111111001000110", 52 => "1111111100101000", 53 => "1111101111011000", 
    54 => "0000000111011011", 55 => "1111101010111111", 56 => "0000000000001100", 
    57 => "1111111010011111", 58 => "1111110100001111", 59 => "1111111010010010", 
    60 => "1111100001111010", 61 => "0000001000000111", 62 => "0000000111011011", 
    63 => "0000000010110000", 64 => "1111101000001101", 65 => "1111010011100110", 
    66 => "0000000111101001", 67 => "0000001011000111", 68 => "0001010100010010", 
    69 => "1111111101110101", 70 => "1111110011111110", 71 => "1111111110101010", 
    72 => "0000010111101000", 73 => "1111000011000110", 74 => "0000010101110000", 
    75 => "0000001011100000", 76 => "1111111010001001", 77 => "0000101110011111", 
    78 => "0000001011100100", 79 => "1111100000010100", 80 => "1111011111001001", 
    81 => "1111011010011011", 82 => "0000011001000100", 83 => "1111101100101011", 
    84 => "1111110101111101", 85 => "1111101111101001", 86 => "0000011110011111", 
    87 => "0000001011011000", 88 => "1111110001111110", 89 => "0001101111011001", 
    90 => "1111111111001100", 91 => "0000000100100101", 92 => "1110111010000110", 
    93 => "1111110100100111", 94 => "1111000110011010", 95 => "0000001010001100", 
    96 => "1111100111100001", 97 => "0000011100101111", 98 => "1111110100110011", 
    99 => "0000110100110011", 100 => "1111111010000110", 101 => "0000110010111001", 
    102 => "0000011010101101", 103 => "0000000111011000", 104 => "1111110101001010", 
    105 => "0000000111011100", 106 => "0000001110111001", 107 => "1111111000010101", 
    108 => "0000000010000111", 109 => "0000101011111101", 110 => "0000000000110011", 
    111 => "0000110101110011", 112 => "1111110110110110", 113 => "0000010011011010", 
    114 => "1111110110010111", 115 => "1111100011011110", 116 => "0001000100001001", 
    117 => "0110100100000001", 118 => "0000000110010111", 119 => "1111101100000101", 
    120 => "1111100010000100", 121 => "1111111000101111", 122 => "0000100101000100", 
    123 => "1111111111010001", 124 => "0000000001100100", 125 => "0000001110100111", 
    126 => "1111110101111111", 127 => "0000111001110100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActkbM_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


