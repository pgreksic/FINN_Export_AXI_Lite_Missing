-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000000100011100", 1 => "1111011010011010", 2 => "0000001001101001", 
    3 => "0000010100010010", 4 => "0000011000000111", 5 => "0000010011101001", 
    6 => "0000001101110001", 7 => "1111101001111011", 8 => "1111111100010111", 
    9 => "0000000011001000", 10 => "0000100000001011", 11 => "0000011001001001", 
    12 => "1100111100110111", 13 => "1011101110110010", 14 => "0000000101011111", 
    15 => "0000000100111010", 16 => "1111111100110100", 17 => "0010011000000100", 
    18 => "1111100100010110", 19 => "0000100001011100", 20 => "1111101101110010", 
    21 => "1111011010011101", 22 => "1111110100000000", 23 => "1100111110011000", 
    24 => "0000000000000010", 25 => "0000001111011011", 26 => "0000000001010010", 
    27 => "1111110100010001", 28 => "1111101011001001", 29 => "1111110010110110", 
    30 => "1111110000001111", 31 => "1111101100100110", 32 => "0000001011100000", 
    33 => "0000000010100111", 34 => "0000001011101111", 35 => "1111111101100001", 
    36 => "0000101000110001", 37 => "0000011000011101", 38 => "1111111011100000", 
    39 => "0000000001001001", 40 => "1111111001100111", 41 => "0000000000010010", 
    42 => "0000001010101011", 43 => "1111111100101001", 44 => "0000001001100000", 
    45 => "0000001000110001", 46 => "1111111101111000", 47 => "1111111110000100", 
    48 => "1111101101001110", 49 => "1111101111100110", 50 => "1111001110000111", 
    51 => "1111011110000111", 52 => "0000000101000100", 53 => "0000010011100100", 
    54 => "1111011001100011", 55 => "0000010010000011", 56 => "0000000110011110", 
    57 => "0000010110100111", 58 => "1111010011110011", 59 => "0000111011001111", 
    60 => "1111101000101000", 61 => "1111110101001111", 62 => "0000010001011110", 
    63 => "1111110000111011", 64 => "0000010101100100", 65 => "0000001111100111", 
    66 => "0000000100011101", 67 => "0000101001110010", 68 => "0000111001000011", 
    69 => "0000010010000001", 70 => "1111111000100111", 71 => "1111010011000010", 
    72 => "1110001101011110", 73 => "1111101000110001", 74 => "0000001001001001", 
    75 => "0000010010110101", 76 => "1111100111001100", 77 => "0000111101010100", 
    78 => "1110110001001100", 79 => "1111111001011101", 80 => "1111100100100100", 
    81 => "1111111010111110", 82 => "0000010101111010", 83 => "0000000011010010", 
    84 => "1101101110001101", 85 => "1111101110101101", 86 => "0000010000011100", 
    87 => "0000001110110101", 88 => "0000000111101010", 89 => "0000110100100001", 
    90 => "1111110110101110", 91 => "0000000100111000", 92 => "1111011110000111", 
    93 => "0000001100101101", 94 => "0000100000001001", 95 => "0000011011001011", 
    96 => "1111111001110100", 97 => "1110110110100010", 98 => "1111101000000111", 
    99 => "1111110010110101", 100 => "0000001101000100", 101 => "0000001111000100", 
    102 => "0000001100100111", 103 => "1111010111111011", 104 => "1111110101001001", 
    105 => "1111110010111010", 106 => "1111111100011000", 107 => "0000010011100000", 
    108 => "1111111001100110", 109 => "1111001000011011", 110 => "1111110001101110", 
    111 => "1111101111000011", 112 => "1111110110110010", 113 => "1111101111001010", 
    114 => "1111110111110011", 115 => "1111011111110010", 116 => "1110010100101001", 
    117 => "0000000011000000", 118 => "1111101110011110", 119 => "0000000101010101", 
    120 => "1111101110001101", 121 => "1111110110100110", 122 => "1111101100111100", 
    123 => "1111111011101000", 124 => "0000100100111000", 125 => "1111101110111110", 
    126 => "1111111000110110", 127 => "0000000111110110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActqcK_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


