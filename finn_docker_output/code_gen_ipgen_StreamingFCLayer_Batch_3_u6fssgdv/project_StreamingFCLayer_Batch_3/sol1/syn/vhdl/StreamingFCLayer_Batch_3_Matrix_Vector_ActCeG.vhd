-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG_rom is 
    generic(
             DWIDTH     : integer := 15; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000001001100000", 1 => "111100000110110", 2 => "000001011001000", 
    3 => "000100011111011", 4 => "000011001111100", 5 => "000011010101111", 
    6 => "000010011000001", 7 => "111101011010111", 8 => "111111101111101", 
    9 => "000000100110001", 10 => "000100101101111", 11 => "000101111101100", 
    12 => "101100101101010", 13 => "100111001110100", 14 => "000001000110010", 
    15 => "000000111000011", 16 => "111111110000111", 17 => "011001100000111", 
    18 => "111100101100011", 19 => "000101001110111", 20 => "111101111001111", 
    21 => "111100011001100", 22 => "111110110110111", 23 => "110001100111001", 
    24 => "000000001001101", 25 => "000010010001100", 26 => "000000010001111", 
    27 => "111110111111110", 28 => "111101100100111", 29 => "111110100001111", 
    30 => "111110011011111", 31 => "111101110011010", 32 => "000001100110010", 
    33 => "000000011111111", 34 => "000001100101100", 35 => "111111110110001", 
    36 => "000110011101110", 37 => "000100001110000", 38 => "111111101010001", 
    39 => "000000010110100", 40 => "111111010111011", 41 => "000000001101000", 
    42 => "000001100111111", 43 => "111111101111100", 44 => "000001011001101", 
    45 => "000001001111111", 46 => "000000010111110", 47 => "000000000000101", 
    48 => "111101110110001", 49 => "111110000111110", 50 => "111010110000101", 
    51 => "111100100010111", 52 => "000000111110101", 53 => "000010100101111", 
    54 => "111011101001110", 55 => "000010011101000", 56 => "000001000000011", 
    57 => "000011001001100", 58 => "111101101011000", 59 => "001010010100001", 
    60 => "111101010001000", 61 => "111110111000111", 62 => "000010010111110", 
    63 => "111110010100110", 64 => "001000010110101", 65 => "000010001001100", 
    66 => "000000110001011", 67 => "000101110010111", 68 => "001111100100111", 
    69 => "000010011011101", 70 => "111111010110110", 71 => "111011011100100", 
    72 => "110111110001110", 73 => "111101010011000", 74 => "000001010101100", 
    75 => "000010100000011", 76 => "111110000011101", 77 => "001110001011111", 
    78 => "111000110010010", 79 => "111111010101011", 80 => "111100101111011", 
    81 => "111111100011100", 82 => "000011011001001", 83 => "000000101000001", 
    84 => "111000011011001", 85 => "111110000011010", 86 => "000010010000001", 
    87 => "000010000011010", 88 => "000001001010010", 89 => "000111010011011", 
    90 => "111111000010000", 91 => "000000110000110", 92 => "111011111111101", 
    93 => "000001101111111", 94 => "000100010000000", 95 => "000011100100110", 
    96 => "111111011010110", 97 => "111101000011111", 98 => "111101001101111", 
    99 => "111110100001100", 100 => "000001110010111", 101 => "000010000101000", 
    102 => "000001101011110", 103 => "111100000000101", 104 => "111110111101000", 
    105 => "111110100010101", 106 => "111111110010110", 107 => "000010101010111", 
    108 => "111111011110011", 109 => "111010100100100", 110 => "111110100010000", 
    111 => "111110001001100", 112 => "111111000110000", 113 => "111110011000110", 
    114 => "111111001100110", 115 => "111100011100011", 116 => "111100100010100", 
    117 => "000000101110000", 118 => "111110000010100", 119 => "000000110101001", 
    120 => "111101111101000", 121 => "111111000100110", 122 => "111101110100111", 
    123 => "111111101001011", 124 => "000110101011111", 125 => "111110000011011", 
    126 => "111111010000111", 127 => "000001001100011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG is
    generic (
        DataWidth : INTEGER := 15;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActCeG_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


