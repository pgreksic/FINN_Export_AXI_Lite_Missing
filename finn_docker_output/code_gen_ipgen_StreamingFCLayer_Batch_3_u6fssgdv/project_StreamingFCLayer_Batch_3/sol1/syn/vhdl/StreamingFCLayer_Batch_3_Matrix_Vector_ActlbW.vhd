-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000101000101011", 1 => "0000010110100111", 2 => "1111110101001111", 
    3 => "1111101110011000", 4 => "1111101010010100", 5 => "0000000101101001", 
    6 => "0000001011100000", 7 => "1111110000000000", 8 => "1111011010011000", 
    9 => "1111010011011010", 10 => "0000000011011101", 11 => "0000110011011111", 
    12 => "1111101111100000", 13 => "0000011001011011", 14 => "1110010100011101", 
    15 => "0000011111000101", 16 => "0000000011100000", 17 => "1111110100011001", 
    18 => "0000110111101011", 19 => "1111110011011011", 20 => "0000000010001011", 
    21 => "0000001000111110", 22 => "0000010011110011", 23 => "0000101010100010", 
    24 => "0000011000101000", 25 => "1111110000101001", 26 => "1111111000011100", 
    27 => "1111101010111010", 28 => "1111001001010110", 29 => "0000000010011010", 
    30 => "0000000010010010", 31 => "1111100011110000", 32 => "0000001101110011", 
    33 => "1111110011101010", 34 => "0000010100000111", 35 => "0000010000010011", 
    36 => "0000000011101100", 37 => "0000100011000000", 38 => "0001001010011000", 
    39 => "1111110011000000", 40 => "1111110000011001", 41 => "1111110111001011", 
    42 => "1111101010100101", 43 => "0000110001111000", 44 => "1111110111110010", 
    45 => "0000010001100110", 46 => "0000001000001101", 47 => "1111110011111111", 
    48 => "1111110110001000", 49 => "0000010111011011", 50 => "0000010100111011", 
    51 => "1111111001010001", 52 => "1111111100110001", 53 => "1111101111111000", 
    54 => "0000000111100010", 55 => "1111101011000110", 56 => "0000000000100011", 
    57 => "1111111010101010", 58 => "1111110100011001", 59 => "1111111010011011", 
    60 => "1111100010010001", 61 => "0000001000010001", 62 => "0000000111100010", 
    63 => "0000000010111001", 64 => "1111101000010111", 65 => "1111010011111010", 
    66 => "0000000111101111", 67 => "0000001011001111", 68 => "0001010111111100", 
    69 => "1111111101111111", 70 => "1111110100000101", 71 => "1111111110110011", 
    72 => "0000010111110000", 73 => "1111000100101010", 74 => "0000010101111010", 
    75 => "0000001011101000", 76 => "1111111010010001", 77 => "0000101110110001", 
    78 => "0000001011101101", 79 => "1111100000101011", 80 => "1111011111010010", 
    81 => "1111011011000000", 82 => "0000011001001111", 83 => "1111101100110101", 
    84 => "1111110110000110", 85 => "1111101111110011", 86 => "0000011111100100", 
    87 => "0000001011011101", 88 => "1111110010000011", 89 => "0001110010010111", 
    90 => "1111111111010110", 91 => "0000000100101110", 92 => "1110111110101010", 
    93 => "1111110100101101", 94 => "1111001010100001", 95 => "0000001010010110", 
    96 => "1111100111101010", 97 => "0000011100111010", 98 => "1111110100111110", 
    99 => "0000110101011110", 100 => "1111111010001111", 101 => "0000110100010100", 
    102 => "0000011010110100", 103 => "0000000111100001", 104 => "1111110101011001", 
    105 => "0000000111100101", 106 => "0000001111000001", 107 => "1111111000100100", 
    108 => "0000000010010010", 109 => "0000101101000000", 110 => "0000000000111010", 
    111 => "0000110110010110", 112 => "1111110111000000", 113 => "0000010011100010", 
    114 => "1111110110011110", 115 => "1111100100011001", 116 => "0001000101010010", 
    117 => "0110100100000001", 118 => "0000000110110010", 119 => "1111101100110011", 
    120 => "1111100010101000", 121 => "1111111000110101", 122 => "0000100101001111", 
    123 => "1111111111011001", 124 => "0000000001101100", 125 => "0000001110110101", 
    126 => "1111110110000010", 127 => "0000111011000101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActlbW_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


