-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111101000011011", 1 => "0000010000000000", 2 => "1111011110000001", 
    3 => "1111111001001000", 4 => "0000000001010000", 5 => "0000000100110101", 
    6 => "0000011111000111", 7 => "0000000001110001", 8 => "1111100011110001", 
    9 => "0000001101110100", 10 => "1111111110011000", 11 => "0001111100011111", 
    12 => "0000100010010100", 13 => "1111011011000000", 14 => "1111011000110011", 
    15 => "0000001101011100", 16 => "1111011111110010", 17 => "1111110010110110", 
    18 => "0000001001110111", 19 => "0000010101011001", 20 => "1111111011110011", 
    21 => "0000000000011011", 22 => "1111110001101101", 23 => "1111101010100101", 
    24 => "0000011001010100", 25 => "1111111111011010", 26 => "0000010101110111", 
    27 => "1111101101101100", 28 => "1111111000110000", 29 => "0000000100110000", 
    30 => "1111110111001001", 31 => "1111110001000000", 32 => "0000011010011011", 
    33 => "1111110000111010", 34 => "0000000101111111", 35 => "0000011000111011", 
    36 => "0000000100111000", 37 => "0000001101100000", 38 => "1111101110000011", 
    39 => "1111001011101010", 40 => "1111101010011100", 41 => "0000100010110000", 
    42 => "1001011100010110", 43 => "0000000110000001", 44 => "1110011010010010", 
    45 => "1111111000011100", 46 => "1111111010011011", 47 => "0000011001101011", 
    48 => "1111101001111011", 49 => "1101010010100010", 50 => "1111010011000001", 
    51 => "0000000110000110", 52 => "1111111000111011", 53 => "1011001110111100", 
    54 => "1101100111000101", 55 => "0000001100101111", 56 => "1111011010111000", 
    57 => "1111111011001100", 58 => "0000000010101011", 59 => "0000001001100000", 
    60 => "0000001101010110", 61 => "1111111110011000", 62 => "1111010001010011", 
    63 => "0000001000101000", 64 => "0000010000011100", 65 => "0000010100100101", 
    66 => "0101010011110000", 67 => "0000000011111011", 68 => "0000010101000100", 
    69 => "1111101110000011", 70 => "1111110001110011", 71 => "0000000100110110", 
    72 => "1111011000000001", 73 => "0000000001111010", 74 => "1001111111010110", 
    75 => "1111111110111001", 76 => "1111110001011010", 77 => "1111111110110010", 
    78 => "1111001110111111", 79 => "0000000100110110", 80 => "0000001101111111", 
    81 => "0000011100101001", 82 => "0000000001100100", 83 => "0000000011010101", 
    84 => "1001011100000000", 85 => "0000100010011010", 86 => "0000000010001010", 
    87 => "0000000000010101", 88 => "1111110100011100", 89 => "0001110110011000", 
    90 => "1111111101011110", 91 => "1111101111001100", 92 => "1111111100011111", 
    93 => "1111110001110101", 94 => "0000000101111010", 95 => "1111111101111110", 
    96 => "1111111100100011", 97 => "0000100100001100", 98 => "0000000011010110", 
    99 => "1111111000001000", 100 => "0000010000000010", 101 => "1111111110100100", 
    102 => "1111101010011011", 103 => "1111101110100111", 104 => "1111111111110011", 
    105 => "0000010000000110", 106 => "1101111001001111", 107 => "0000000100100000", 
    108 => "0000001010101000", 109 => "0000100000110011", 110 => "0000000011111000", 
    111 => "1110110001001101", 112 => "0000001110010111", 113 => "1111111101000001", 
    114 => "1111011111001010", 115 => "0000001111010100", 116 => "1111111110001000", 
    117 => "0000000010010010", 118 => "1111101110010011", 119 => "0000000011011001", 
    120 => "0000000001100000", 121 => "1111010000101111", 122 => "0001010100100110", 
    123 => "1111101010111000", 124 => "1111111011000000", 125 => "0000011100111010", 
    126 => "0000101010110111", 127 => "0000010100101101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0 is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0 is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActEe0_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


