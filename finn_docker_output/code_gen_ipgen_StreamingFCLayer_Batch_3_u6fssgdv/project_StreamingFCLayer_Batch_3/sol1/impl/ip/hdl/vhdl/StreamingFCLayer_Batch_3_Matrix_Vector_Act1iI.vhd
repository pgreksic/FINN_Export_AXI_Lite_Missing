-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111111011100101", 1 => "1111111101000100", 2 => "1111110101011100", 
    3 => "0001000000001111", 4 => "1111111110000001", 5 => "0000001001001000", 
    6 => "1111100101111100", 7 => "0000011100010010", 8 => "0000000001000010", 
    9 => "0000111001011011", 10 => "0000111110111011", 11 => "0000001110010010", 
    12 => "1111111101001010", 13 => "1111110100101000", 14 => "0000010101000110", 
    15 => "1111111000111111", 16 => "0000110111100010", 17 => "0000001111100011", 
    18 => "1111111100110010", 19 => "0000101001001010", 20 => "1111110101010111", 
    21 => "1111110110100011", 22 => "1111101000110101", 23 => "1111010111101100", 
    24 => "1111100110001111", 25 => "0000010000100010", 26 => "1001011100000000", 
    27 => "0000000101100000", 28 => "1111110100111001", 29 => "1111010011110100", 
    30 => "0000010111000001", 31 => "1111110100110111", 32 => "0100111101011000", 
    33 => "1111101010100010", 34 => "0000011001000111", 35 => "0001001110100101", 
    36 => "1111101001001101", 37 => "1111110100000000", 38 => "0000011100010110", 
    39 => "0000000010010101", 40 => "1111110101011110", 41 => "0000010011010001", 
    42 => "0000001110001001", 43 => "1111111001011010", 44 => "0000010011100010", 
    45 => "0000100100010010", 46 => "1111110011101101", 47 => "1111110011000111", 
    48 => "0000110100001010", 49 => "1111011111101111", 50 => "0000100100010000", 
    51 => "0000010001111110", 52 => "1111110110010100", 53 => "1111001010000010", 
    54 => "0000111001000010", 55 => "0000011000101110", 56 => "0000010101001111", 
    57 => "1111111100010001", 58 => "1111011101100000", 59 => "0000000010100100", 
    60 => "1111101111100110", 61 => "0000000001110000", 62 => "0000010101110111", 
    63 => "0000010001010000", 64 => "0000011101000111", 65 => "0000000001000110", 
    66 => "1111101110011100", 67 => "1111110111001110", 68 => "1111111110011000", 
    69 => "1111101101100001", 70 => "0000011111110111", 71 => "0000000101111101", 
    72 => "0000100111101100", 73 => "1111101000011100", 74 => "0000011111101000", 
    75 => "0000011110000100", 76 => "0000001001101000", 77 => "0000001010110101", 
    78 => "1111011110000110", 79 => "1111110100101001", 80 => "1111101100111000", 
    81 => "0000010111010001", 82 => "0000001001011111", 83 => "0000000100010101", 
    84 => "0000000001010010", 85 => "1111110110000000", 86 => "1111110011101100", 
    87 => "1111110100010110", 88 => "1111110011111110", 89 => "1111111010111110", 
    90 => "1111011100000100", 91 => "0000111000010001", 92 => "1111011101100100", 
    93 => "1111111000101111", 94 => "0001010101111000", 95 => "0000111010001011", 
    96 => "1111110011111111", 97 => "1111110010111000", 98 => "0000000010011111", 
    99 => "0000111101111010", 100 => "0000100111110000", 101 => "0000001100010111", 
    102 => "1111110001001011", 103 => "1111010100111101", 104 => "0000001011011110", 
    105 => "0000001110001001", 106 => "0000001001100010", 107 => "0000000010100001", 
    108 => "0000000110101111", 109 => "0000000101100011", 110 => "0000000001010000", 
    111 => "0000101111010101", 112 => "0000001001010001", 113 => "1111111111101110", 
    114 => "0000001110111110", 115 => "0000011000110101", 116 => "1111111111011110", 
    117 => "0000101100100100", 118 => "0000010000000011", 119 => "1111011011110110", 
    120 => "1111101110111011", 121 => "0000010101111010", 122 => "0000001101100010", 
    123 => "0000000101000100", 124 => "0000001101111000", 125 => "1111101101000100", 
    126 => "0000000101001100", 127 => "0000000010111000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI is
    component StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_Act1iI_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


