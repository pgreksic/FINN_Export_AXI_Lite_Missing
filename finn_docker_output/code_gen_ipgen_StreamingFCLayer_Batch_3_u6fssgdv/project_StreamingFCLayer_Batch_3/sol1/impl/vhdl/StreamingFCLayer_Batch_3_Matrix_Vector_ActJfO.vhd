-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "1111101001000001", 1 => "0000010000101111", 2 => "1111011110111000", 
    3 => "1111111001100100", 4 => "0000000001110111", 5 => "0000000101011111", 
    6 => "0000100011010101", 7 => "0000000010011000", 8 => "1111100100011100", 
    9 => "0000001110011011", 10 => "1111111110110010", 11 => "0011010001101011", 
    12 => "0000100100101111", 13 => "1111100011110101", 14 => "1111011011110000", 
    15 => "0000010000001001", 16 => "1111100010010111", 17 => "1111110011010110", 
    18 => "0000001100001001", 19 => "0000010101111101", 20 => "1111111101010001", 
    21 => "0000000001000001", 22 => "1111110101110001", 23 => "1111101011011111", 
    24 => "0000011011100010", 25 => "0000000000000110", 26 => "0000010110100101", 
    27 => "1111101110101001", 28 => "1111111001100011", 29 => "0000000101011100", 
    30 => "1111110111110001", 31 => "1111110001100111", 32 => "0000011011001111", 
    33 => "1111110001011100", 34 => "0000000110101001", 35 => "0000100100000101", 
    36 => "0000000101101010", 37 => "0000001110011001", 38 => "1111101110100111", 
    39 => "1111010101001000", 40 => "1111101011100101", 41 => "0000100101000011", 
    42 => "1010000101011111", 43 => "0000000110101100", 44 => "1110110100010010", 
    45 => "1111111001010000", 46 => "1111111011000110", 47 => "0000011010010111", 
    48 => "1111101011110000", 49 => "1101111100011100", 50 => "1111010101100011", 
    51 => "0000000110111111", 52 => "1111111001011011", 53 => "1011100110101001", 
    54 => "1110011000011001", 55 => "0000001101010001", 56 => "1111011100111001", 
    57 => "1111111011110001", 58 => "0000000011011001", 59 => "0000001010000111", 
    60 => "0000001110000101", 61 => "1111111110110111", 62 => "1111011100001100", 
    63 => "0000001001001101", 64 => "0000010000111011", 65 => "0000010110110010", 
    66 => "0101110110010011", 67 => "0000000101000011", 68 => "0000010110001001", 
    69 => "1111101110111101", 70 => "1111110010011001", 71 => "0000000101010010", 
    72 => "1111011001111111", 73 => "0000000010101000", 74 => "1010011000110011", 
    75 => "1111111111100010", 76 => "1111110010000001", 77 => "1111111111100000", 
    78 => "1111010101110000", 79 => "0000000101110110", 80 => "0000001110101101", 
    81 => "0000011110101100", 82 => "0000000010010110", 83 => "0000000011111000", 
    84 => "1001011100000000", 85 => "0000101011001110", 86 => "0000000010111011", 
    87 => "0000000000111010", 88 => "1111110100101100", 89 => "0010001001011010", 
    90 => "1111111110001110", 91 => "1111101111111010", 92 => "1111111101001101", 
    93 => "1111110010011101", 94 => "0000000111000010", 95 => "1111111110101010", 
    96 => "1111111100111001", 97 => "0000100110001100", 98 => "0000000100000001", 
    99 => "1111111000110111", 100 => "0000010000101001", 101 => "1111111111010000", 
    102 => "1111101011000011", 103 => "1111110000000101", 104 => "0000000000011010", 
    105 => "0000010000110100", 106 => "1110001100000000", 107 => "0000000101001100", 
    108 => "0000001011010110", 109 => "0000100101101111", 110 => "0000000100100011", 
    111 => "1110110111111111", 112 => "0000001111000011", 113 => "1111111101101111", 
    114 => "1111100000111100", 115 => "0000001111111010", 116 => "1111111110011110", 
    117 => "0000000011000101", 118 => "1111101110111100", 119 => "0000000100001110", 
    120 => "0000000001111010", 121 => "1111010100010101", 122 => "0001011101001100", 
    123 => "1111101011011011", 124 => "1111111100100011", 125 => "0000011101011111", 
    126 => "0000101101010101", 127 => "0000010101001011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO is
    component StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_ActJfO_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


