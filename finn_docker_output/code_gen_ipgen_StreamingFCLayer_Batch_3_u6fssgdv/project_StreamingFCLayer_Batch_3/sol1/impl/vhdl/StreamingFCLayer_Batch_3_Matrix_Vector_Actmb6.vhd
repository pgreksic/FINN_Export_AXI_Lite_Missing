-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6_rom is 
    generic(
             DWIDTH     : integer := 16; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "0000101001111001", 1 => "0000010110101111", 2 => "1111110101011000", 
    3 => "1111101110100010", 4 => "1111101010011101", 5 => "0000000101110000", 
    6 => "0000001011101001", 7 => "1111110000001000", 8 => "1111011010110001", 
    9 => "1111010100101000", 10 => "0000000011100101", 11 => "0000110011110101", 
    12 => "1111101111100100", 13 => "0000011001100100", 14 => "1110010111000010", 
    15 => "0000011111011110", 16 => "0000000011100111", 17 => "1111110100100100", 
    18 => "0000111001011001", 19 => "1111110011100011", 20 => "0000000010010110", 
    21 => "0000001001000110", 22 => "0000010011111110", 23 => "0000101010101100", 
    24 => "0000011001001011", 25 => "1111110000110001", 26 => "1111111000100100", 
    27 => "1111101011000010", 28 => "1111001100001010", 29 => "0000000010101100", 
    30 => "0000000010011010", 31 => "1111100011110111", 32 => "0000001101111011", 
    33 => "1111110011110100", 34 => "0000010100011100", 35 => "0000010000011011", 
    36 => "0000000011110110", 37 => "0000100100001111", 38 => "0001001011110001", 
    39 => "1111110011001010", 40 => "1111110000100101", 41 => "1111110111010110", 
    42 => "1111101010110100", 43 => "0000110010011000", 44 => "1111110111111100", 
    45 => "0000010001110100", 46 => "0000001000010101", 47 => "1111110100001000", 
    48 => "1111110110001101", 49 => "0000010111100011", 50 => "0000010101001000", 
    51 => "1111111001011100", 52 => "1111111100111010", 53 => "1111110000010111", 
    54 => "0000000111101001", 55 => "1111101011001110", 56 => "0000000000111010", 
    57 => "1111111010110101", 58 => "1111110100100100", 59 => "1111111010100100", 
    60 => "1111100010101001", 61 => "0000001000011011", 62 => "0000000111101001", 
    63 => "0000000011000011", 64 => "1111101000100001", 65 => "1111010100001101", 
    66 => "0000000111110101", 67 => "0000001011010110", 68 => "0001011011100110", 
    69 => "1111111110001001", 70 => "1111110100001011", 71 => "1111111110111011", 
    72 => "0000010111111000", 73 => "1111000110001111", 74 => "0000010110000101", 
    75 => "0000001011110001", 76 => "1111111010011001", 77 => "0000101111000100", 
    78 => "0000001011110111", 79 => "1111100001000001", 80 => "1111011111011011", 
    81 => "1111011011100101", 82 => "0000011001011010", 83 => "1111101100111111", 
    84 => "1111110110001111", 85 => "1111101111111101", 86 => "0000100000101010", 
    87 => "0000001011100010", 88 => "1111110010001000", 89 => "0001110101010101", 
    90 => "1111111111100000", 91 => "0000000100110110", 92 => "1111000011001111", 
    93 => "1111110100110100", 94 => "1111001110100111", 95 => "0000001010100001", 
    96 => "1111100111110011", 97 => "0000011101000101", 98 => "1111110101001001", 
    99 => "0000110110001010", 100 => "1111111010011001", 101 => "0000110101101111", 
    102 => "0000011010111011", 103 => "0000000111101011", 104 => "1111110101101001", 
    105 => "0000000111101110", 106 => "0000001111001010", 107 => "1111111000110011", 
    108 => "0000000010011100", 109 => "0000101110000010", 110 => "0000000001000010", 
    111 => "0000110110111001", 112 => "1111110111001001", 113 => "0000010011101011", 
    114 => "1111110110100101", 115 => "1111100101010100", 116 => "0001000110011011", 
    117 => "0110100100000001", 118 => "0000000111001101", 119 => "1111101101100000", 
    120 => "1111100011001100", 121 => "1111111000111011", 122 => "0000100101011001", 
    123 => "1111111111100001", 124 => "0000000001110100", 125 => "0000001111000011", 
    126 => "1111110110000101", 127 => "0000111100010111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6 is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6 is
    component StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6_rom_U :  component StreamingFCLayer_Batch_3_Matrix_Vector_Actmb6_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


