// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Thresholding_Batch_2_Thresholding_Batch_HH_
#define _Thresholding_Batch_2_Thresholding_Batch_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Thresholding_Batch_2_Thresholding_Batcbkb.h"
#include "Thresholding_Batch_2_Thresholding_Batccud.h"
#include "Thresholding_Batch_2_Thresholding_BatcdEe.h"
#include "Thresholding_Batch_2_Thresholding_BatceOg.h"
#include "Thresholding_Batch_2_Thresholding_BatcfYi.h"
#include "Thresholding_Batch_2_Thresholding_Batcg8j.h"
#include "Thresholding_Batch_2_Thresholding_Batchbi.h"
#include "Thresholding_Batch_2_Thresholding_Batcibs.h"
#include "Thresholding_Batch_2_Thresholding_BatcjbC.h"
#include "Thresholding_Batch_2_Thresholding_BatckbM.h"
#include "Thresholding_Batch_2_Thresholding_BatclbW.h"
#include "Thresholding_Batch_2_Thresholding_Batcmb6.h"
#include "Thresholding_Batch_2_Thresholding_Batcncg.h"
#include "Thresholding_Batch_2_Thresholding_Batcocq.h"

namespace ap_rtl {

struct Thresholding_Batch_2_Thresholding_Batch : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > in_V_V_TDATA;
    sc_in< sc_logic > in_V_V_TVALID;
    sc_out< sc_logic > in_V_V_TREADY;
    sc_out< sc_lv<8> > out_V_V_TDATA;
    sc_out< sc_logic > out_V_V_TVALID;
    sc_in< sc_logic > out_V_V_TREADY;


    // Module declarations
    Thresholding_Batch_2_Thresholding_Batch(sc_module_name name);
    SC_HAS_PROCESS(Thresholding_Batch_2_Thresholding_Batch);

    ~Thresholding_Batch_2_Thresholding_Batch();

    sc_trace_file* mVcdFile;

    Thresholding_Batch_2_Thresholding_Batcbkb* threshs_m_thresholds_13_U;
    Thresholding_Batch_2_Thresholding_Batccud* threshs_m_thresholds_12_U;
    Thresholding_Batch_2_Thresholding_BatcdEe* threshs_m_thresholds_7_U;
    Thresholding_Batch_2_Thresholding_BatceOg* threshs_m_thresholds_6_U;
    Thresholding_Batch_2_Thresholding_BatcfYi* threshs_m_thresholds_5_U;
    Thresholding_Batch_2_Thresholding_Batcg8j* threshs_m_thresholds_4_U;
    Thresholding_Batch_2_Thresholding_Batchbi* threshs_m_thresholds_3_U;
    Thresholding_Batch_2_Thresholding_Batcibs* threshs_m_thresholds_2_U;
    Thresholding_Batch_2_Thresholding_BatcjbC* threshs_m_thresholds_1_U;
    Thresholding_Batch_2_Thresholding_BatckbM* threshs_m_thresholds_U;
    Thresholding_Batch_2_Thresholding_BatclbW* threshs_m_thresholds_11_U;
    Thresholding_Batch_2_Thresholding_Batcmb6* threshs_m_thresholds_10_U;
    Thresholding_Batch_2_Thresholding_Batcncg* threshs_m_thresholds_9_U;
    Thresholding_Batch_2_Thresholding_Batcocq* threshs_m_thresholds_8_U;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > threshs_m_thresholds_13_address0;
    sc_signal< sc_logic > threshs_m_thresholds_13_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_13_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_12_address0;
    sc_signal< sc_logic > threshs_m_thresholds_12_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_12_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_7_address0;
    sc_signal< sc_logic > threshs_m_thresholds_7_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_7_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_6_address0;
    sc_signal< sc_logic > threshs_m_thresholds_6_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_6_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_5_address0;
    sc_signal< sc_logic > threshs_m_thresholds_5_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_5_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_4_address0;
    sc_signal< sc_logic > threshs_m_thresholds_4_ce0;
    sc_signal< sc_lv<18> > threshs_m_thresholds_4_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_3_address0;
    sc_signal< sc_logic > threshs_m_thresholds_3_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_3_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_2_address0;
    sc_signal< sc_logic > threshs_m_thresholds_2_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_2_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_1_address0;
    sc_signal< sc_logic > threshs_m_thresholds_1_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_1_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_address0;
    sc_signal< sc_logic > threshs_m_thresholds_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_11_address0;
    sc_signal< sc_logic > threshs_m_thresholds_11_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_11_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_10_address0;
    sc_signal< sc_logic > threshs_m_thresholds_10_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_10_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_9_address0;
    sc_signal< sc_logic > threshs_m_thresholds_9_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_9_q0;
    sc_signal< sc_lv<6> > threshs_m_thresholds_8_address0;
    sc_signal< sc_logic > threshs_m_thresholds_8_ce0;
    sc_signal< sc_lv<17> > threshs_m_thresholds_8_q0;
    sc_signal< sc_logic > in_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln221_fu_299_p2;
    sc_signal< sc_logic > out_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln221_reg_686;
    sc_signal< sc_lv<1> > icmp_ln221_reg_686_pp0_iter1_reg;
    sc_signal< sc_lv<32> > nf_assign_reg_277;
    sc_signal< sc_lv<16> > i_0_reg_288;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<16> > i_fu_305_p2;
    sc_signal< sc_lv<16> > tmp_V_1_reg_695;
    sc_signal< sc_lv<32> > nf_1_fu_341_p3;
    sc_signal< sc_lv<1> > icmp_ln899_fu_355_p2;
    sc_signal< sc_lv<1> > icmp_ln899_reg_776;
    sc_signal< sc_lv<1> > icmp_ln899_1_fu_361_p2;
    sc_signal< sc_lv<1> > icmp_ln899_1_reg_781;
    sc_signal< sc_lv<1> > icmp_ln899_2_fu_367_p2;
    sc_signal< sc_lv<1> > icmp_ln899_2_reg_786;
    sc_signal< sc_lv<1> > icmp_ln899_3_fu_373_p2;
    sc_signal< sc_lv<1> > icmp_ln899_3_reg_791;
    sc_signal< sc_lv<1> > icmp_ln899_4_fu_379_p2;
    sc_signal< sc_lv<1> > icmp_ln899_4_reg_796;
    sc_signal< sc_lv<1> > icmp_ln899_5_fu_385_p2;
    sc_signal< sc_lv<1> > icmp_ln899_5_reg_801;
    sc_signal< sc_lv<1> > icmp_ln899_6_fu_391_p2;
    sc_signal< sc_lv<1> > icmp_ln899_6_reg_806;
    sc_signal< sc_lv<1> > icmp_ln899_10_fu_445_p2;
    sc_signal< sc_lv<1> > icmp_ln899_10_reg_811;
    sc_signal< sc_lv<1> > icmp_ln899_11_fu_451_p2;
    sc_signal< sc_lv<1> > icmp_ln899_11_reg_816;
    sc_signal< sc_lv<1> > icmp_ln899_12_fu_457_p2;
    sc_signal< sc_lv<1> > icmp_ln899_12_reg_821;
    sc_signal< sc_lv<1> > icmp_ln899_13_fu_463_p2;
    sc_signal< sc_lv<1> > icmp_ln899_13_reg_826;
    sc_signal< sc_lv<2> > add_ln700_7_fu_475_p2;
    sc_signal< sc_lv<2> > add_ln700_7_reg_831;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<64> > zext_ln142_fu_311_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > nf_fu_329_p2;
    sc_signal< sc_lv<1> > icmp_ln235_fu_335_p2;
    sc_signal< sc_lv<18> > sext_ln68_fu_349_p1;
    sc_signal< sc_lv<17> > sext_ln137_fu_352_p1;
    sc_signal< sc_lv<1> > icmp_ln899_7_fu_397_p2;
    sc_signal< sc_lv<1> > xor_ln899_7_fu_403_p2;
    sc_signal< sc_lv<1> > icmp_ln899_8_fu_413_p2;
    sc_signal< sc_lv<1> > xor_ln899_8_fu_419_p2;
    sc_signal< sc_lv<1> > icmp_ln899_9_fu_429_p2;
    sc_signal< sc_lv<1> > xor_ln899_9_fu_435_p2;
    sc_signal< sc_lv<2> > zext_ln142_8_fu_425_p1;
    sc_signal< sc_lv<2> > zext_ln142_9_fu_441_p1;
    sc_signal< sc_lv<2> > add_ln700_6_fu_469_p2;
    sc_signal< sc_lv<2> > zext_ln142_7_fu_409_p1;
    sc_signal< sc_lv<1> > xor_ln899_fu_481_p2;
    sc_signal< sc_lv<1> > xor_ln899_1_fu_494_p2;
    sc_signal< sc_lv<1> > xor_ln899_2_fu_503_p2;
    sc_signal< sc_lv<1> > xor_ln899_3_fu_512_p2;
    sc_signal< sc_lv<1> > xor_ln899_4_fu_521_p2;
    sc_signal< sc_lv<1> > xor_ln899_5_fu_530_p2;
    sc_signal< sc_lv<1> > xor_ln899_6_fu_539_p2;
    sc_signal< sc_lv<1> > xor_ln899_10_fu_548_p2;
    sc_signal< sc_lv<1> > xor_ln899_11_fu_557_p2;
    sc_signal< sc_lv<1> > xor_ln899_12_fu_566_p2;
    sc_signal< sc_lv<1> > xor_ln899_13_fu_575_p2;
    sc_signal< sc_lv<2> > zext_ln142_1_fu_499_p1;
    sc_signal< sc_lv<2> > zext_ln142_2_fu_508_p1;
    sc_signal< sc_lv<2> > add_ln700_fu_584_p2;
    sc_signal< sc_lv<4> > zext_ln700_1_fu_590_p1;
    sc_signal< sc_lv<4> > select_ln700_fu_486_p3;
    sc_signal< sc_lv<2> > zext_ln142_3_fu_517_p1;
    sc_signal< sc_lv<2> > zext_ln142_4_fu_526_p1;
    sc_signal< sc_lv<2> > add_ln700_2_fu_600_p2;
    sc_signal< sc_lv<2> > zext_ln142_5_fu_535_p1;
    sc_signal< sc_lv<2> > zext_ln142_6_fu_544_p1;
    sc_signal< sc_lv<2> > add_ln700_3_fu_610_p2;
    sc_signal< sc_lv<3> > zext_ln700_3_fu_616_p1;
    sc_signal< sc_lv<3> > zext_ln700_2_fu_606_p1;
    sc_signal< sc_lv<3> > add_ln700_4_fu_620_p2;
    sc_signal< sc_lv<4> > zext_ln700_4_fu_626_p1;
    sc_signal< sc_lv<4> > add_ln700_1_fu_594_p2;
    sc_signal< sc_lv<2> > zext_ln142_10_fu_553_p1;
    sc_signal< sc_lv<2> > zext_ln142_11_fu_562_p1;
    sc_signal< sc_lv<2> > add_ln700_8_fu_639_p2;
    sc_signal< sc_lv<2> > zext_ln142_12_fu_571_p1;
    sc_signal< sc_lv<2> > zext_ln700_fu_580_p1;
    sc_signal< sc_lv<2> > add_ln700_9_fu_649_p2;
    sc_signal< sc_lv<3> > zext_ln700_7_fu_655_p1;
    sc_signal< sc_lv<3> > zext_ln700_6_fu_645_p1;
    sc_signal< sc_lv<3> > add_ln700_10_fu_659_p2;
    sc_signal< sc_lv<3> > zext_ln700_5_fu_636_p1;
    sc_signal< sc_lv<3> > add_ln700_11_fu_665_p2;
    sc_signal< sc_lv<4> > zext_ln700_8_fu_671_p1;
    sc_signal< sc_lv<4> > add_ln700_5_fu_630_p2;
    sc_signal< sc_lv<4> > tmp_V_fu_675_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_C400;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_10_fu_659_p2();
    void thread_add_ln700_11_fu_665_p2();
    void thread_add_ln700_1_fu_594_p2();
    void thread_add_ln700_2_fu_600_p2();
    void thread_add_ln700_3_fu_610_p2();
    void thread_add_ln700_4_fu_620_p2();
    void thread_add_ln700_5_fu_630_p2();
    void thread_add_ln700_6_fu_469_p2();
    void thread_add_ln700_7_fu_475_p2();
    void thread_add_ln700_8_fu_639_p2();
    void thread_add_ln700_9_fu_649_p2();
    void thread_add_ln700_fu_584_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_i_fu_305_p2();
    void thread_icmp_ln221_fu_299_p2();
    void thread_icmp_ln235_fu_335_p2();
    void thread_icmp_ln899_10_fu_445_p2();
    void thread_icmp_ln899_11_fu_451_p2();
    void thread_icmp_ln899_12_fu_457_p2();
    void thread_icmp_ln899_13_fu_463_p2();
    void thread_icmp_ln899_1_fu_361_p2();
    void thread_icmp_ln899_2_fu_367_p2();
    void thread_icmp_ln899_3_fu_373_p2();
    void thread_icmp_ln899_4_fu_379_p2();
    void thread_icmp_ln899_5_fu_385_p2();
    void thread_icmp_ln899_6_fu_391_p2();
    void thread_icmp_ln899_7_fu_397_p2();
    void thread_icmp_ln899_8_fu_413_p2();
    void thread_icmp_ln899_9_fu_429_p2();
    void thread_icmp_ln899_fu_355_p2();
    void thread_in_V_V_TDATA_blk_n();
    void thread_in_V_V_TREADY();
    void thread_nf_1_fu_341_p3();
    void thread_nf_fu_329_p2();
    void thread_out_V_V_TDATA();
    void thread_out_V_V_TDATA_blk_n();
    void thread_out_V_V_TVALID();
    void thread_select_ln700_fu_486_p3();
    void thread_sext_ln137_fu_352_p1();
    void thread_sext_ln68_fu_349_p1();
    void thread_threshs_m_thresholds_10_address0();
    void thread_threshs_m_thresholds_10_ce0();
    void thread_threshs_m_thresholds_11_address0();
    void thread_threshs_m_thresholds_11_ce0();
    void thread_threshs_m_thresholds_12_address0();
    void thread_threshs_m_thresholds_12_ce0();
    void thread_threshs_m_thresholds_13_address0();
    void thread_threshs_m_thresholds_13_ce0();
    void thread_threshs_m_thresholds_1_address0();
    void thread_threshs_m_thresholds_1_ce0();
    void thread_threshs_m_thresholds_2_address0();
    void thread_threshs_m_thresholds_2_ce0();
    void thread_threshs_m_thresholds_3_address0();
    void thread_threshs_m_thresholds_3_ce0();
    void thread_threshs_m_thresholds_4_address0();
    void thread_threshs_m_thresholds_4_ce0();
    void thread_threshs_m_thresholds_5_address0();
    void thread_threshs_m_thresholds_5_ce0();
    void thread_threshs_m_thresholds_6_address0();
    void thread_threshs_m_thresholds_6_ce0();
    void thread_threshs_m_thresholds_7_address0();
    void thread_threshs_m_thresholds_7_ce0();
    void thread_threshs_m_thresholds_8_address0();
    void thread_threshs_m_thresholds_8_ce0();
    void thread_threshs_m_thresholds_9_address0();
    void thread_threshs_m_thresholds_9_ce0();
    void thread_threshs_m_thresholds_address0();
    void thread_threshs_m_thresholds_ce0();
    void thread_tmp_V_fu_675_p2();
    void thread_xor_ln899_10_fu_548_p2();
    void thread_xor_ln899_11_fu_557_p2();
    void thread_xor_ln899_12_fu_566_p2();
    void thread_xor_ln899_13_fu_575_p2();
    void thread_xor_ln899_1_fu_494_p2();
    void thread_xor_ln899_2_fu_503_p2();
    void thread_xor_ln899_3_fu_512_p2();
    void thread_xor_ln899_4_fu_521_p2();
    void thread_xor_ln899_5_fu_530_p2();
    void thread_xor_ln899_6_fu_539_p2();
    void thread_xor_ln899_7_fu_403_p2();
    void thread_xor_ln899_8_fu_419_p2();
    void thread_xor_ln899_9_fu_435_p2();
    void thread_xor_ln899_fu_481_p2();
    void thread_zext_ln142_10_fu_553_p1();
    void thread_zext_ln142_11_fu_562_p1();
    void thread_zext_ln142_12_fu_571_p1();
    void thread_zext_ln142_1_fu_499_p1();
    void thread_zext_ln142_2_fu_508_p1();
    void thread_zext_ln142_3_fu_517_p1();
    void thread_zext_ln142_4_fu_526_p1();
    void thread_zext_ln142_5_fu_535_p1();
    void thread_zext_ln142_6_fu_544_p1();
    void thread_zext_ln142_7_fu_409_p1();
    void thread_zext_ln142_8_fu_425_p1();
    void thread_zext_ln142_9_fu_441_p1();
    void thread_zext_ln142_fu_311_p1();
    void thread_zext_ln700_1_fu_590_p1();
    void thread_zext_ln700_2_fu_606_p1();
    void thread_zext_ln700_3_fu_616_p1();
    void thread_zext_ln700_4_fu_626_p1();
    void thread_zext_ln700_5_fu_636_p1();
    void thread_zext_ln700_6_fu_645_p1();
    void thread_zext_ln700_7_fu_655_p1();
    void thread_zext_ln700_8_fu_671_p1();
    void thread_zext_ln700_fu_580_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
